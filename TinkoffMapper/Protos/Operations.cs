// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/operations.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Tinkoff.Proto.InvestApi.V1
{

    /// <summary>Holder for reflection information generated from Protos/operations.proto</summary>
    public static partial class OperationsReflection
    {

        #region Descriptor
        /// <summary>File descriptor for Protos/operations.proto</summary>
        public static pbr::FileDescriptor Descriptor
        {
            get { return descriptor; }
        }
        private static pbr::FileDescriptor descriptor;

        static OperationsReflection()
        {
            byte[] descriptorData = global::System.Convert.FromBase64String(
                string.Concat(
                  "ChdQcm90b3Mvb3BlcmF0aW9ucy5wcm90bxIldGlua29mZi5wdWJsaWMuaW52",
                  "ZXN0LmFwaS5jb250cmFjdC52MRofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFt",
                  "cC5wcm90bxoTUHJvdG9zL2NvbW1vbi5wcm90byLNAQoRT3BlcmF0aW9uc1Jl",
                  "cXVlc3QSEgoKYWNjb3VudF9pZBgBIAEoCRIoCgRmcm9tGAIgASgLMhouZ29v",
                  "Z2xlLnByb3RvYnVmLlRpbWVzdGFtcBImCgJ0bxgDIAEoCzIaLmdvb2dsZS5w",
                  "cm90b2J1Zi5UaW1lc3RhbXASRAoFc3RhdGUYBCABKA4yNS50aW5rb2ZmLnB1",
                  "YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLk9wZXJhdGlvblN0YXRlEgwK",
                  "BGZpZ2kYBSABKAkiWgoST3BlcmF0aW9uc1Jlc3BvbnNlEkQKCm9wZXJhdGlv",
                  "bnMYASADKAsyMC50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0",
                  "LnYxLk9wZXJhdGlvbiLwBAoJT3BlcmF0aW9uEgoKAmlkGAEgASgJEhsKE3Bh",
                  "cmVudF9vcGVyYXRpb25faWQYAiABKAkSEAoIY3VycmVuY3kYAyABKAkSQgoH",
                  "cGF5bWVudBgEIAEoCzIxLnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29u",
                  "dHJhY3QudjEuTW9uZXlWYWx1ZRJACgVwcmljZRgFIAEoCzIxLnRpbmtvZmYu",
                  "cHVibGljLmludmVzdC5hcGkuY29udHJhY3QudjEuTW9uZXlWYWx1ZRJECgVz",
                  "dGF0ZRgGIAEoDjI1LnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29udHJh",
                  "Y3QudjEuT3BlcmF0aW9uU3RhdGUSEAoIcXVhbnRpdHkYByABKAMSFQoNcXVh",
                  "bnRpdHlfcmVzdBgIIAEoAxIMCgRmaWdpGAkgASgJEhcKD2luc3RydW1lbnRf",
                  "dHlwZRgKIAEoCRIoCgRkYXRlGAsgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRp",
                  "bWVzdGFtcBIMCgR0eXBlGAwgASgJEkwKDm9wZXJhdGlvbl90eXBlGA0gASgO",
                  "MjQudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5PcGVy",
                  "YXRpb25UeXBlEkUKBnRyYWRlcxgOIAMoCzI1LnRpbmtvZmYucHVibGljLmlu",
                  "dmVzdC5hcGkuY29udHJhY3QudjEuT3BlcmF0aW9uVHJhZGUSEQoJYXNzZXRf",
                  "dWlkGBAgASgJEhQKDHBvc2l0aW9uX3VpZBgRIAEoCRIWCg5pbnN0cnVtZW50",
                  "X3VpZBgSIAEoCSKlAQoOT3BlcmF0aW9uVHJhZGUSEAoIdHJhZGVfaWQYASAB",
                  "KAkSLQoJZGF0ZV90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
                  "dGFtcBIQCghxdWFudGl0eRgDIAEoAxJACgVwcmljZRgEIAEoCzIxLnRpbmtv",
                  "ZmYucHVibGljLmludmVzdC5hcGkuY29udHJhY3QudjEuTW9uZXlWYWx1ZSKv",
                  "AQoQUG9ydGZvbGlvUmVxdWVzdBISCgphY2NvdW50X2lkGAEgASgJElkKCGN1",
                  "cnJlbmN5GAIgASgOMkcudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250",
                  "cmFjdC52MS5Qb3J0Zm9saW9SZXF1ZXN0LkN1cnJlbmN5UmVxdWVzdCIsCg9D",
                  "dXJyZW5jeVJlcXVlc3QSBwoDUlVCEAASBwoDVVNEEAESBwoDRVVSEAIimwcK",
                  "EVBvcnRmb2xpb1Jlc3BvbnNlEk4KE3RvdGFsX2Ftb3VudF9zaGFyZXMYASAB",
                  "KAsyMS50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLk1v",
                  "bmV5VmFsdWUSTQoSdG90YWxfYW1vdW50X2JvbmRzGAIgASgLMjEudGlua29m",
                  "Zi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5Nb25leVZhbHVlEksK",
                  "EHRvdGFsX2Ftb3VudF9ldGYYAyABKAsyMS50aW5rb2ZmLnB1YmxpYy5pbnZl",
                  "c3QuYXBpLmNvbnRyYWN0LnYxLk1vbmV5VmFsdWUSUgoXdG90YWxfYW1vdW50",
                  "X2N1cnJlbmNpZXMYBCABKAsyMS50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBp",
                  "LmNvbnRyYWN0LnYxLk1vbmV5VmFsdWUSTwoUdG90YWxfYW1vdW50X2Z1dHVy",
                  "ZXMYBSABKAsyMS50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0",
                  "LnYxLk1vbmV5VmFsdWUSSAoOZXhwZWN0ZWRfeWllbGQYBiABKAsyMC50aW5r",
                  "b2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLlF1b3RhdGlvbhJL",
                  "Cglwb3NpdGlvbnMYByADKAsyOC50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBp",
                  "LmNvbnRyYWN0LnYxLlBvcnRmb2xpb1Bvc2l0aW9uEhIKCmFjY291bnRfaWQY",
                  "CCABKAkSTwoUdG90YWxfYW1vdW50X29wdGlvbnMYCSABKAsyMS50aW5rb2Zm",
                  "LnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLk1vbmV5VmFsdWUSSgoP",
                  "dG90YWxfYW1vdW50X3NwGAogASgLMjEudGlua29mZi5wdWJsaWMuaW52ZXN0",
                  "LmFwaS5jb250cmFjdC52MS5Nb25leVZhbHVlElEKFnRvdGFsX2Ftb3VudF9w",
                  "b3J0Zm9saW8YCyABKAsyMS50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNv",
                  "bnRyYWN0LnYxLk1vbmV5VmFsdWUSWgoRdmlydHVhbF9wb3NpdGlvbnMYDCAD",
                  "KAsyPy50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLlZp",
                  "cnR1YWxQb3J0Zm9saW9Qb3NpdGlvbiImChBQb3NpdGlvbnNSZXF1ZXN0EhIK",
                  "CmFjY291bnRfaWQYASABKAkioQMKEVBvc2l0aW9uc1Jlc3BvbnNlEkAKBW1v",
                  "bmV5GAEgAygLMjEudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFj",
                  "dC52MS5Nb25leVZhbHVlEkIKB2Jsb2NrZWQYAiADKAsyMS50aW5rb2ZmLnB1",
                  "YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLk1vbmV5VmFsdWUSTgoKc2Vj",
                  "dXJpdGllcxgDIAMoCzI6LnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29u",
                  "dHJhY3QudjEuUG9zaXRpb25zU2VjdXJpdGllcxIiChpsaW1pdHNfbG9hZGlu",
                  "Z19pbl9wcm9ncmVzcxgEIAEoCBJICgdmdXR1cmVzGAUgAygLMjcudGlua29m",
                  "Zi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5Qb3NpdGlvbnNGdXR1",
                  "cmVzEkgKB29wdGlvbnMYBiADKAsyNy50aW5rb2ZmLnB1YmxpYy5pbnZlc3Qu",
                  "YXBpLmNvbnRyYWN0LnYxLlBvc2l0aW9uc09wdGlvbnMiKwoVV2l0aGRyYXdM",
                  "aW1pdHNSZXF1ZXN0EhIKCmFjY291bnRfaWQYASABKAki7AEKFldpdGhkcmF3",
                  "TGltaXRzUmVzcG9uc2USQAoFbW9uZXkYASADKAsyMS50aW5rb2ZmLnB1Ymxp",
                  "Yy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLk1vbmV5VmFsdWUSQgoHYmxvY2tl",
                  "ZBgCIAMoCzIxLnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29udHJhY3Qu",
                  "djEuTW9uZXlWYWx1ZRJMChFibG9ja2VkX2d1YXJhbnRlZRgDIAMoCzIxLnRp",
                  "bmtvZmYucHVibGljLmludmVzdC5hcGkuY29udHJhY3QudjEuTW9uZXlWYWx1",
                  "ZSLABwoRUG9ydGZvbGlvUG9zaXRpb24SDAoEZmlnaRgBIAEoCRIXCg9pbnN0",
                  "cnVtZW50X3R5cGUYAiABKAkSQgoIcXVhbnRpdHkYAyABKAsyMC50aW5rb2Zm",
                  "LnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLlF1b3RhdGlvbhJRChZh",
                  "dmVyYWdlX3Bvc2l0aW9uX3ByaWNlGAQgASgLMjEudGlua29mZi5wdWJsaWMu",
                  "aW52ZXN0LmFwaS5jb250cmFjdC52MS5Nb25leVZhbHVlEkgKDmV4cGVjdGVk",
                  "X3lpZWxkGAUgASgLMjAudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250",
                  "cmFjdC52MS5RdW90YXRpb24SRgoLY3VycmVudF9ua2QYBiABKAsyMS50aW5r",
                  "b2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLk1vbmV5VmFsdWUS",
                  "UwoZYXZlcmFnZV9wb3NpdGlvbl9wcmljZV9wdBgHIAEoCzIwLnRpbmtvZmYu",
                  "cHVibGljLmludmVzdC5hcGkuY29udHJhY3QudjEuUXVvdGF0aW9uEkgKDWN1",
                  "cnJlbnRfcHJpY2UYCCABKAsyMS50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBp",
                  "LmNvbnRyYWN0LnYxLk1vbmV5VmFsdWUSVgobYXZlcmFnZV9wb3NpdGlvbl9w",
                  "cmljZV9maWZvGAkgASgLMjEudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5j",
                  "b250cmFjdC52MS5Nb25leVZhbHVlEkcKDXF1YW50aXR5X2xvdHMYCiABKAsy",
                  "MC50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLlF1b3Rh",
                  "dGlvbhIPCgdibG9ja2VkGBUgASgIEkYKDGJsb2NrZWRfbG90cxgWIAEoCzIw",
                  "LnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29udHJhY3QudjEuUXVvdGF0",
                  "aW9uEhQKDHBvc2l0aW9uX3VpZBgYIAEoCRIWCg5pbnN0cnVtZW50X3VpZBgZ",
                  "IAEoCRJFCgp2YXJfbWFyZ2luGBogASgLMjEudGlua29mZi5wdWJsaWMuaW52",
                  "ZXN0LmFwaS5jb250cmFjdC52MS5Nb25leVZhbHVlEk0KE2V4cGVjdGVkX3lp",
                  "ZWxkX2ZpZm8YGyABKAsyMC50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNv",
                  "bnRyYWN0LnYxLlF1b3RhdGlvbiLyBAoYVmlydHVhbFBvcnRmb2xpb1Bvc2l0",
                  "aW9uEhQKDHBvc2l0aW9uX3VpZBgBIAEoCRIWCg5pbnN0cnVtZW50X3VpZBgC",
                  "IAEoCRIMCgRmaWdpGAMgASgJEhcKD2luc3RydW1lbnRfdHlwZRgEIAEoCRJC",
                  "CghxdWFudGl0eRgFIAEoCzIwLnRpbmtvZmYucHVibGljLmludmVzdC5hcGku",
                  "Y29udHJhY3QudjEuUXVvdGF0aW9uElEKFmF2ZXJhZ2VfcG9zaXRpb25fcHJp",
                  "Y2UYBiABKAsyMS50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0",
                  "LnYxLk1vbmV5VmFsdWUSSAoOZXhwZWN0ZWRfeWllbGQYByABKAsyMC50aW5r",
                  "b2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLlF1b3RhdGlvbhJN",
                  "ChNleHBlY3RlZF95aWVsZF9maWZvGAggASgLMjAudGlua29mZi5wdWJsaWMu",
                  "aW52ZXN0LmFwaS5jb250cmFjdC52MS5RdW90YXRpb24SLwoLZXhwaXJlX2Rh",
                  "dGUYCSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEkgKDWN1cnJl",
                  "bnRfcHJpY2UYCiABKAsyMS50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNv",
                  "bnRyYWN0LnYxLk1vbmV5VmFsdWUSVgobYXZlcmFnZV9wb3NpdGlvbl9wcmlj",
                  "ZV9maWZvGAsgASgLMjEudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250",
                  "cmFjdC52MS5Nb25leVZhbHVlIqYBChNQb3NpdGlvbnNTZWN1cml0aWVzEgwK",
                  "BGZpZ2kYASABKAkSDwoHYmxvY2tlZBgCIAEoAxIPCgdiYWxhbmNlGAMgASgD",
                  "EhQKDHBvc2l0aW9uX3VpZBgEIAEoCRIWCg5pbnN0cnVtZW50X3VpZBgFIAEo",
                  "CRIYChBleGNoYW5nZV9ibG9ja2VkGAsgASgIEhcKD2luc3RydW1lbnRfdHlw",
                  "ZRgQIAEoCSJwChBQb3NpdGlvbnNGdXR1cmVzEgwKBGZpZ2kYASABKAkSDwoH",
                  "YmxvY2tlZBgCIAEoAxIPCgdiYWxhbmNlGAMgASgDEhQKDHBvc2l0aW9uX3Vp",
                  "ZBgEIAEoCRIWCg5pbnN0cnVtZW50X3VpZBgFIAEoCSJiChBQb3NpdGlvbnNP",
                  "cHRpb25zEhQKDHBvc2l0aW9uX3VpZBgBIAEoCRIWCg5pbnN0cnVtZW50X3Vp",
                  "ZBgCIAEoCRIPCgdibG9ja2VkGAsgASgDEg8KB2JhbGFuY2UYFSABKAMi8gEK",
                  "E0Jyb2tlclJlcG9ydFJlcXVlc3QSbAoeZ2VuZXJhdGVfYnJva2VyX3JlcG9y",
                  "dF9yZXF1ZXN0GAEgASgLMkIudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5j",
                  "b250cmFjdC52MS5HZW5lcmF0ZUJyb2tlclJlcG9ydFJlcXVlc3RIABJiChln",
                  "ZXRfYnJva2VyX3JlcG9ydF9yZXF1ZXN0GAIgASgLMj0udGlua29mZi5wdWJs",
                  "aWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5HZXRCcm9rZXJSZXBvcnRSZXF1",
                  "ZXN0SABCCQoHcGF5bG9hZCL3AQoUQnJva2VyUmVwb3J0UmVzcG9uc2USbgof",
                  "Z2VuZXJhdGVfYnJva2VyX3JlcG9ydF9yZXNwb25zZRgBIAEoCzJDLnRpbmtv",
                  "ZmYucHVibGljLmludmVzdC5hcGkuY29udHJhY3QudjEuR2VuZXJhdGVCcm9r",
                  "ZXJSZXBvcnRSZXNwb25zZUgAEmQKGmdldF9icm9rZXJfcmVwb3J0X3Jlc3Bv",
                  "bnNlGAIgASgLMj4udGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFj",
                  "dC52MS5HZXRCcm9rZXJSZXBvcnRSZXNwb25zZUgAQgkKB3BheWxvYWQigwEK",
                  "G0dlbmVyYXRlQnJva2VyUmVwb3J0UmVxdWVzdBISCgphY2NvdW50X2lkGAEg",
                  "ASgJEigKBGZyb20YAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1w",
                  "EiYKAnRvGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCIvChxH",
                  "ZW5lcmF0ZUJyb2tlclJlcG9ydFJlc3BvbnNlEg8KB3Rhc2tfaWQYASABKAki",
                  "NwoWR2V0QnJva2VyUmVwb3J0UmVxdWVzdBIPCgd0YXNrX2lkGAEgASgJEgwK",
                  "BHBhZ2UYAiABKAUimwEKF0dldEJyb2tlclJlcG9ydFJlc3BvbnNlEkoKDWJy",
                  "b2tlcl9yZXBvcnQYASADKAsyMy50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBp",
                  "LmNvbnRyYWN0LnYxLkJyb2tlclJlcG9ydBISCgppdGVtc0NvdW50GAIgASgF",
                  "EhIKCnBhZ2VzQ291bnQYAyABKAUSDAoEcGFnZRgEIAEoBSLaCAoMQnJva2Vy",
                  "UmVwb3J0EhAKCHRyYWRlX2lkGAEgASgJEhAKCG9yZGVyX2lkGAIgASgJEgwK",
                  "BGZpZ2kYAyABKAkSFAoMZXhlY3V0ZV9zaWduGAQgASgJEjIKDnRyYWRlX2Rh",
                  "dGV0aW1lGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIQCghl",
                  "eGNoYW5nZRgGIAEoCRISCgpjbGFzc19jb2RlGAcgASgJEhEKCWRpcmVjdGlv",
                  "bhgIIAEoCRIMCgRuYW1lGAkgASgJEg4KBnRpY2tlchgKIAEoCRJACgVwcmlj",
                  "ZRgLIAEoCzIxLnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29udHJhY3Qu",
                  "djEuTW9uZXlWYWx1ZRIQCghxdWFudGl0eRgMIAEoAxJHCgxvcmRlcl9hbW91",
                  "bnQYDSABKAsyMS50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0",
                  "LnYxLk1vbmV5VmFsdWUSQwoJYWNpX3ZhbHVlGA4gASgLMjAudGlua29mZi5w",
                  "dWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5RdW90YXRpb24STQoSdG90",
                  "YWxfb3JkZXJfYW1vdW50GA8gASgLMjEudGlua29mZi5wdWJsaWMuaW52ZXN0",
                  "LmFwaS5jb250cmFjdC52MS5Nb25leVZhbHVlEkwKEWJyb2tlcl9jb21taXNz",
                  "aW9uGBAgASgLMjEudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFj",
                  "dC52MS5Nb25leVZhbHVlEk4KE2V4Y2hhbmdlX2NvbW1pc3Npb24YESABKAsy",
                  "MS50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLk1vbmV5",
                  "VmFsdWUSVwocZXhjaGFuZ2VfY2xlYXJpbmdfY29tbWlzc2lvbhgSIAEoCzIx",
                  "LnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29udHJhY3QudjEuTW9uZXlW",
                  "YWx1ZRJDCglyZXBvX3JhdGUYEyABKAsyMC50aW5rb2ZmLnB1YmxpYy5pbnZl",
                  "c3QuYXBpLmNvbnRyYWN0LnYxLlF1b3RhdGlvbhINCgVwYXJ0eRgUIAEoCRI0",
                  "ChBjbGVhcl92YWx1ZV9kYXRlGBUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRp",
                  "bWVzdGFtcBIyCg5zZWNfdmFsdWVfZGF0ZRgWIAEoCzIaLmdvb2dsZS5wcm90",
                  "b2J1Zi5UaW1lc3RhbXASFQoNYnJva2VyX3N0YXR1cxgXIAEoCRIfChdzZXBh",
                  "cmF0ZV9hZ3JlZW1lbnRfdHlwZRgYIAEoCRIhChlzZXBhcmF0ZV9hZ3JlZW1l",
                  "bnRfbnVtYmVyGBkgASgJEh8KF3NlcGFyYXRlX2FncmVlbWVudF9kYXRlGBog",
                  "ASgJEhUKDWRlbGl2ZXJ5X3R5cGUYGyABKAkiqAIKIEdldERpdmlkZW5kc0Zv",
                  "cmVpZ25Jc3N1ZXJSZXF1ZXN0EoABCiJnZW5lcmF0ZV9kaXZfZm9yZWlnbl9p",
                  "c3N1ZXJfcmVwb3J0GAEgASgLMlIudGlua29mZi5wdWJsaWMuaW52ZXN0LmFw",
                  "aS5jb250cmFjdC52MS5HZW5lcmF0ZURpdmlkZW5kc0ZvcmVpZ25Jc3N1ZXJS",
                  "ZXBvcnRSZXF1ZXN0SAASdgodZ2V0X2Rpdl9mb3JlaWduX2lzc3Vlcl9yZXBv",
                  "cnQYAiABKAsyTS50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0",
                  "LnYxLkdldERpdmlkZW5kc0ZvcmVpZ25Jc3N1ZXJSZXBvcnRSZXF1ZXN0SABC",
                  "CQoHcGF5bG9hZCKwAgohR2V0RGl2aWRlbmRzRm9yZWlnbklzc3VlclJlc3Bv",
                  "bnNlEooBCitnZW5lcmF0ZV9kaXZfZm9yZWlnbl9pc3N1ZXJfcmVwb3J0X3Jl",
                  "c3BvbnNlGAEgASgLMlMudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250",
                  "cmFjdC52MS5HZW5lcmF0ZURpdmlkZW5kc0ZvcmVpZ25Jc3N1ZXJSZXBvcnRS",
                  "ZXNwb25zZUgAEnMKGWRpdl9mb3JlaWduX2lzc3Vlcl9yZXBvcnQYAiABKAsy",
                  "Ti50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLkdldERp",
                  "dmlkZW5kc0ZvcmVpZ25Jc3N1ZXJSZXBvcnRSZXNwb25zZUgAQgkKB3BheWxv",
                  "YWQikwEKK0dlbmVyYXRlRGl2aWRlbmRzRm9yZWlnbklzc3VlclJlcG9ydFJl",
                  "cXVlc3QSEgoKYWNjb3VudF9pZBgBIAEoCRIoCgRmcm9tGAIgASgLMhouZ29v",
                  "Z2xlLnByb3RvYnVmLlRpbWVzdGFtcBImCgJ0bxgDIAEoCzIaLmdvb2dsZS5w",
                  "cm90b2J1Zi5UaW1lc3RhbXAiRwomR2V0RGl2aWRlbmRzRm9yZWlnbklzc3Vl",
                  "clJlcG9ydFJlcXVlc3QSDwoHdGFza19pZBgBIAEoCRIMCgRwYWdlGAIgASgF",
                  "Ij8KLEdlbmVyYXRlRGl2aWRlbmRzRm9yZWlnbklzc3VlclJlcG9ydFJlc3Bv",
                  "bnNlEg8KB3Rhc2tfaWQYASABKAkizQEKJ0dldERpdmlkZW5kc0ZvcmVpZ25J",
                  "c3N1ZXJSZXBvcnRSZXNwb25zZRJsCh9kaXZpZGVuZHNfZm9yZWlnbl9pc3N1",
                  "ZXJfcmVwb3J0GAEgAygLMkMudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5j",
                  "b250cmFjdC52MS5EaXZpZGVuZHNGb3JlaWduSXNzdWVyUmVwb3J0EhIKCml0",
                  "ZW1zQ291bnQYAiABKAUSEgoKcGFnZXNDb3VudBgDIAEoBRIMCgRwYWdlGAQg",
                  "ASgFIskEChxEaXZpZGVuZHNGb3JlaWduSXNzdWVyUmVwb3J0Ei8KC3JlY29y",
                  "ZF9kYXRlGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIwCgxw",
                  "YXltZW50X2RhdGUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1w",
                  "EhUKDXNlY3VyaXR5X25hbWUYAyABKAkSDAoEaXNpbhgEIAEoCRIWCg5pc3N1",
                  "ZXJfY291bnRyeRgFIAEoCRIQCghxdWFudGl0eRgGIAEoAxJCCghkaXZpZGVu",
                  "ZBgHIAEoCzIwLnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29udHJhY3Qu",
                  "djEuUXVvdGF0aW9uEk0KE2V4dGVybmFsX2NvbW1pc3Npb24YCCABKAsyMC50",
                  "aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLlF1b3RhdGlv",
                  "bhJICg5kaXZpZGVuZF9ncm9zcxgJIAEoCzIwLnRpbmtvZmYucHVibGljLmlu",
                  "dmVzdC5hcGkuY29udHJhY3QudjEuUXVvdGF0aW9uEj0KA3RheBgKIAEoCzIw",
                  "LnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29udHJhY3QudjEuUXVvdGF0",
                  "aW9uEkkKD2RpdmlkZW5kX2Ftb3VudBgLIAEoCzIwLnRpbmtvZmYucHVibGlj",
                  "LmludmVzdC5hcGkuY29udHJhY3QudjEuUXVvdGF0aW9uEhAKCGN1cnJlbmN5",
                  "GAwgASgJIioKFlBvcnRmb2xpb1N0cmVhbVJlcXVlc3QSEAoIYWNjb3VudHMY",
                  "ASADKAkijQIKF1BvcnRmb2xpb1N0cmVhbVJlc3BvbnNlElsKDXN1YnNjcmlw",
                  "dGlvbnMYASABKAsyQi50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRy",
                  "YWN0LnYxLlBvcnRmb2xpb1N1YnNjcmlwdGlvblJlc3VsdEgAEk0KCXBvcnRm",
                  "b2xpbxgCIAEoCzI4LnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29udHJh",
                  "Y3QudjEuUG9ydGZvbGlvUmVzcG9uc2VIABI7CgRwaW5nGAMgASgLMisudGlu",
                  "a29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5QaW5nSABCCQoH",
                  "cGF5bG9hZCJxChtQb3J0Zm9saW9TdWJzY3JpcHRpb25SZXN1bHQSUgoIYWNj",
                  "b3VudHMYASADKAsyQC50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRy",
                  "YWN0LnYxLkFjY291bnRTdWJzY3JpcHRpb25TdGF0dXMikAEKGUFjY291bnRT",
                  "dWJzY3JpcHRpb25TdGF0dXMSEgoKYWNjb3VudF9pZBgBIAEoCRJfChNzdWJz",
                  "Y3JpcHRpb25fc3RhdHVzGAYgASgOMkIudGlua29mZi5wdWJsaWMuaW52ZXN0",
                  "LmFwaS5jb250cmFjdC52MS5Qb3J0Zm9saW9TdWJzY3JpcHRpb25TdGF0dXMi",
                  "oAMKHEdldE9wZXJhdGlvbnNCeUN1cnNvclJlcXVlc3QSEgoKYWNjb3VudF9p",
                  "ZBgBIAEoCRIVCg1pbnN0cnVtZW50X2lkGAIgASgJEigKBGZyb20YBiABKAsy",
                  "Gi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEiYKAnRvGAcgASgLMhouZ29v",
                  "Z2xlLnByb3RvYnVmLlRpbWVzdGFtcBIOCgZjdXJzb3IYCyABKAkSDQoFbGlt",
                  "aXQYDCABKAUSTQoPb3BlcmF0aW9uX3R5cGVzGA0gAygOMjQudGlua29mZi5w",
                  "dWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5PcGVyYXRpb25UeXBlEkQK",
                  "BXN0YXRlGA4gASgOMjUudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250",
                  "cmFjdC52MS5PcGVyYXRpb25TdGF0ZRIbChN3aXRob3V0X2NvbW1pc3Npb25z",
                  "GA8gASgIEhYKDndpdGhvdXRfdHJhZGVzGBAgASgIEhoKEndpdGhvdXRfb3Zl",
                  "cm5pZ2h0cxgRIAEoCCKLAQodR2V0T3BlcmF0aW9uc0J5Q3Vyc29yUmVzcG9u",
                  "c2USEAoIaGFzX25leHQYASABKAgSEwoLbmV4dF9jdXJzb3IYAiABKAkSQwoF",
                  "aXRlbXMYBiADKAsyNC50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRy",
                  "YWN0LnYxLk9wZXJhdGlvbkl0ZW0i2wgKDU9wZXJhdGlvbkl0ZW0SDgoGY3Vy",
                  "c29yGAEgASgJEhkKEWJyb2tlcl9hY2NvdW50X2lkGAYgASgJEgoKAmlkGBAg",
                  "ASgJEhsKE3BhcmVudF9vcGVyYXRpb25faWQYESABKAkSDAoEbmFtZRgSIAEo",
                  "CRIoCgRkYXRlGBUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBJC",
                  "CgR0eXBlGBYgASgOMjQudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250",
                  "cmFjdC52MS5PcGVyYXRpb25UeXBlEhMKC2Rlc2NyaXB0aW9uGBcgASgJEkQK",
                  "BXN0YXRlGBggASgOMjUudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250",
                  "cmFjdC52MS5PcGVyYXRpb25TdGF0ZRIWCg5pbnN0cnVtZW50X3VpZBgfIAEo",
                  "CRIMCgRmaWdpGCAgASgJEhcKD2luc3RydW1lbnRfdHlwZRghIAEoCRJOCg9p",
                  "bnN0cnVtZW50X2tpbmQYIiABKA4yNS50aW5rb2ZmLnB1YmxpYy5pbnZlc3Qu",
                  "YXBpLmNvbnRyYWN0LnYxLkluc3RydW1lbnRUeXBlEkIKB3BheW1lbnQYKSAB",
                  "KAsyMS50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLk1v",
                  "bmV5VmFsdWUSQAoFcHJpY2UYKiABKAsyMS50aW5rb2ZmLnB1YmxpYy5pbnZl",
                  "c3QuYXBpLmNvbnRyYWN0LnYxLk1vbmV5VmFsdWUSRQoKY29tbWlzc2lvbhgr",
                  "IAEoCzIxLnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29udHJhY3QudjEu",
                  "TW9uZXlWYWx1ZRJACgV5aWVsZBgsIAEoCzIxLnRpbmtvZmYucHVibGljLmlu",
                  "dmVzdC5hcGkuY29udHJhY3QudjEuTW9uZXlWYWx1ZRJICg55aWVsZF9yZWxh",
                  "dGl2ZRgtIAEoCzIwLnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29udHJh",
                  "Y3QudjEuUXVvdGF0aW9uEkYKC2FjY3J1ZWRfaW50GC4gASgLMjEudGlua29m",
                  "Zi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5Nb25leVZhbHVlEhAK",
                  "CHF1YW50aXR5GDMgASgDEhUKDXF1YW50aXR5X3Jlc3QYNCABKAMSFQoNcXVh",
                  "bnRpdHlfZG9uZRg1IAEoAxI0ChBjYW5jZWxfZGF0ZV90aW1lGDggASgLMhou",
                  "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIVCg1jYW5jZWxfcmVhc29uGDkg",
                  "ASgJEk8KC3RyYWRlc19pbmZvGD0gASgLMjoudGlua29mZi5wdWJsaWMuaW52",
                  "ZXN0LmFwaS5jb250cmFjdC52MS5PcGVyYXRpb25JdGVtVHJhZGVzEhEKCWFz",
                  "c2V0X3VpZBhAIAEoCSJgChNPcGVyYXRpb25JdGVtVHJhZGVzEkkKBnRyYWRl",
                  "cxgGIAMoCzI5LnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29udHJhY3Qu",
                  "djEuT3BlcmF0aW9uSXRlbVRyYWRlIqsCChJPcGVyYXRpb25JdGVtVHJhZGUS",
                  "CwoDbnVtGAEgASgJEigKBGRhdGUYBiABKAsyGi5nb29nbGUucHJvdG9idWYu",
                  "VGltZXN0YW1wEhAKCHF1YW50aXR5GAsgASgDEkAKBXByaWNlGBAgASgLMjEu",
                  "dGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5Nb25leVZh",
                  "bHVlEkAKBXlpZWxkGBUgASgLMjEudGlua29mZi5wdWJsaWMuaW52ZXN0LmFw",
                  "aS5jb250cmFjdC52MS5Nb25leVZhbHVlEkgKDnlpZWxkX3JlbGF0aXZlGBYg",
                  "ASgLMjAudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5R",
                  "dW90YXRpb24iKgoWUG9zaXRpb25zU3RyZWFtUmVxdWVzdBIQCghhY2NvdW50",
                  "cxgBIAMoCSKHAgoXUG9zaXRpb25zU3RyZWFtUmVzcG9uc2USWwoNc3Vic2Ny",
                  "aXB0aW9ucxgBIAEoCzJCLnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29u",
                  "dHJhY3QudjEuUG9zaXRpb25zU3Vic2NyaXB0aW9uUmVzdWx0SAASRwoIcG9z",
                  "aXRpb24YAiABKAsyMy50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRy",
                  "YWN0LnYxLlBvc2l0aW9uRGF0YUgAEjsKBHBpbmcYAyABKAsyKy50aW5rb2Zm",
                  "LnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLlBpbmdIAEIJCgdwYXls",
                  "b2FkInMKG1Bvc2l0aW9uc1N1YnNjcmlwdGlvblJlc3VsdBJUCghhY2NvdW50",
                  "cxgBIAMoCzJCLnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29udHJhY3Qu",
                  "djEuUG9zaXRpb25zU3Vic2NyaXB0aW9uU3RhdHVzIpkBChtQb3NpdGlvbnNT",
                  "dWJzY3JpcHRpb25TdGF0dXMSEgoKYWNjb3VudF9pZBgBIAEoCRJmChNzdWJz",
                  "Y3JpcHRpb25fc3RhdHVzGAYgASgOMkkudGlua29mZi5wdWJsaWMuaW52ZXN0",
                  "LmFwaS5jb250cmFjdC52MS5Qb3NpdGlvbnNBY2NvdW50U3Vic2NyaXB0aW9u",
                  "U3RhdHVzIvYCCgxQb3NpdGlvbkRhdGESEgoKYWNjb3VudF9pZBgBIAEoCRJE",
                  "CgVtb25leRgCIAMoCzI1LnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29u",
                  "dHJhY3QudjEuUG9zaXRpb25zTW9uZXkSTgoKc2VjdXJpdGllcxgDIAMoCzI6",
                  "LnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29udHJhY3QudjEuUG9zaXRp",
                  "b25zU2VjdXJpdGllcxJICgdmdXR1cmVzGAQgAygLMjcudGlua29mZi5wdWJs",
                  "aWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5Qb3NpdGlvbnNGdXR1cmVzEkgK",
                  "B29wdGlvbnMYBSADKAsyNy50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNv",
                  "bnRyYWN0LnYxLlBvc2l0aW9uc09wdGlvbnMSKAoEZGF0ZRgGIAEoCzIaLmdv",
                  "b2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAipgEKDlBvc2l0aW9uc01vbmV5EkoK",
                  "D2F2YWlsYWJsZV92YWx1ZRgBIAEoCzIxLnRpbmtvZmYucHVibGljLmludmVz",
                  "dC5hcGkuY29udHJhY3QudjEuTW9uZXlWYWx1ZRJICg1ibG9ja2VkX3ZhbHVl",
                  "GAIgASgLMjEudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52",
                  "MS5Nb25leVZhbHVlKosBCg5PcGVyYXRpb25TdGF0ZRIfChtPUEVSQVRJT05f",
                  "U1RBVEVfVU5TUEVDSUZJRUQQABIcChhPUEVSQVRJT05fU1RBVEVfRVhFQ1VU",
                  "RUQQARIcChhPUEVSQVRJT05fU1RBVEVfQ0FOQ0VMRUQQAhIcChhPUEVSQVRJ",
                  "T05fU1RBVEVfUFJPR1JFU1MQAyq6EAoNT3BlcmF0aW9uVHlwZRIeChpPUEVS",
                  "QVRJT05fVFlQRV9VTlNQRUNJRklFRBAAEhgKFE9QRVJBVElPTl9UWVBFX0lO",
                  "UFVUEAESGwoXT1BFUkFUSU9OX1RZUEVfQk9ORF9UQVgQAhIkCiBPUEVSQVRJ",
                  "T05fVFlQRV9PVVRQVVRfU0VDVVJJVElFUxADEhwKGE9QRVJBVElPTl9UWVBF",
                  "X09WRVJOSUdIVBAEEhYKEk9QRVJBVElPTl9UWVBFX1RBWBAFEiYKIk9QRVJB",
                  "VElPTl9UWVBFX0JPTkRfUkVQQVlNRU5UX0ZVTEwQBhIcChhPUEVSQVRJT05f",
                  "VFlQRV9TRUxMX0NBUkQQBxIfChtPUEVSQVRJT05fVFlQRV9ESVZJREVORF9U",
                  "QVgQCBIZChVPUEVSQVRJT05fVFlQRV9PVVRQVVQQCRIhCh1PUEVSQVRJT05f",
                  "VFlQRV9CT05EX1JFUEFZTUVOVBAKEiEKHU9QRVJBVElPTl9UWVBFX1RBWF9D",
                  "T1JSRUNUSU9OEAsSHgoaT1BFUkFUSU9OX1RZUEVfU0VSVklDRV9GRUUQDBIe",
                  "ChpPUEVSQVRJT05fVFlQRV9CRU5FRklUX1RBWBANEh0KGU9QRVJBVElPTl9U",
                  "WVBFX01BUkdJTl9GRUUQDhIWChJPUEVSQVRJT05fVFlQRV9CVVkQDxIbChdP",
                  "UEVSQVRJT05fVFlQRV9CVVlfQ0FSRBAQEiMKH09QRVJBVElPTl9UWVBFX0lO",
                  "UFVUX1NFQ1VSSVRJRVMQERIeChpPUEVSQVRJT05fVFlQRV9TRUxMX01BUkdJ",
                  "ThASEh0KGU9QRVJBVElPTl9UWVBFX0JST0tFUl9GRUUQExIdChlPUEVSQVRJ",
                  "T05fVFlQRV9CVVlfTUFSR0lOEBQSGwoXT1BFUkFUSU9OX1RZUEVfRElWSURF",
                  "TkQQFRIXChNPUEVSQVRJT05fVFlQRV9TRUxMEBYSGQoVT1BFUkFUSU9OX1RZ",
                  "UEVfQ09VUE9OEBcSHgoaT1BFUkFUSU9OX1RZUEVfU1VDQ0VTU19GRUUQGBIk",
                  "CiBPUEVSQVRJT05fVFlQRV9ESVZJREVORF9UUkFOU0ZFUhAZEiUKIU9QRVJB",
                  "VElPTl9UWVBFX0FDQ1JVSU5HX1ZBUk1BUkdJThAaEigKJE9QRVJBVElPTl9U",
                  "WVBFX1dSSVRJTkdfT0ZGX1ZBUk1BUkdJThAbEh8KG09QRVJBVElPTl9UWVBF",
                  "X0RFTElWRVJZX0JVWRAcEiAKHE9QRVJBVElPTl9UWVBFX0RFTElWRVJZX1NF",
                  "TEwQHRIdChlPUEVSQVRJT05fVFlQRV9UUkFDS19NRkVFEB4SHQoZT1BFUkFU",
                  "SU9OX1RZUEVfVFJBQ0tfUEZFRRAfEiIKHk9QRVJBVElPTl9UWVBFX1RBWF9Q",
                  "Uk9HUkVTU0lWRRAgEicKI09QRVJBVElPTl9UWVBFX0JPTkRfVEFYX1BST0dS",
                  "RVNTSVZFECESKwonT1BFUkFUSU9OX1RZUEVfRElWSURFTkRfVEFYX1BST0dS",
                  "RVNTSVZFECISKgomT1BFUkFUSU9OX1RZUEVfQkVORUZJVF9UQVhfUFJPR1JF",
                  "U1NJVkUQIxItCilPUEVSQVRJT05fVFlQRV9UQVhfQ09SUkVDVElPTl9QUk9H",
                  "UkVTU0lWRRAkEicKI09QRVJBVElPTl9UWVBFX1RBWF9SRVBPX1BST0dSRVNT",
                  "SVZFECUSGwoXT1BFUkFUSU9OX1RZUEVfVEFYX1JFUE8QJhIgChxPUEVSQVRJ",
                  "T05fVFlQRV9UQVhfUkVQT19IT0xEECcSIgoeT1BFUkFUSU9OX1RZUEVfVEFY",
                  "X1JFUE9fUkVGVU5EECgSLAooT1BFUkFUSU9OX1RZUEVfVEFYX1JFUE9fSE9M",
                  "RF9QUk9HUkVTU0lWRRApEi4KKk9QRVJBVElPTl9UWVBFX1RBWF9SRVBPX1JF",
                  "RlVORF9QUk9HUkVTU0lWRRAqEhoKFk9QRVJBVElPTl9UWVBFX0RJVl9FWFQQ",
                  "KxIoCiRPUEVSQVRJT05fVFlQRV9UQVhfQ09SUkVDVElPTl9DT1VQT04QLBIb",
                  "ChdPUEVSQVRJT05fVFlQRV9DQVNIX0ZFRRAtEhoKFk9QRVJBVElPTl9UWVBF",
                  "X09VVF9GRUUQLhIhCh1PUEVSQVRJT05fVFlQRV9PVVRfU1RBTVBfRFVUWRAv",
                  "Eh8KG09QRVJBVElPTl9UWVBFX09VVFBVVF9TV0lGVBAyEh4KGk9QRVJBVElP",
                  "Tl9UWVBFX0lOUFVUX1NXSUZUEDMSIwofT1BFUkFUSU9OX1RZUEVfT1VUUFVU",
                  "X0FDUVVJUklORxA1EiIKHk9QRVJBVElPTl9UWVBFX0lOUFVUX0FDUVVJUklO",
                  "RxA2EiEKHU9QRVJBVElPTl9UWVBFX09VVFBVVF9QRU5BTFRZEDcSHQoZT1BF",
                  "UkFUSU9OX1RZUEVfQURWSUNFX0ZFRRA4Eh8KG09QRVJBVElPTl9UWVBFX1RS",
                  "QU5TX0lJU19CUxA5Eh4KGk9QRVJBVElPTl9UWVBFX1RSQU5TX0JTX0JTEDoS",
                  "HAoYT1BFUkFUSU9OX1RZUEVfT1VUX01VTFRJEDsSHAoYT1BFUkFUSU9OX1RZ",
                  "UEVfSU5QX01VTFRJEDwSIQodT1BFUkFUSU9OX1RZUEVfT1ZFUl9QTEFDRU1F",
                  "TlQQPRIbChdPUEVSQVRJT05fVFlQRV9PVkVSX0NPTRA+Eh4KGk9QRVJBVElP",
                  "Tl9UWVBFX09WRVJfSU5DT01FED8SJAogT1BFUkFUSU9OX1RZUEVfT1BUSU9O",
                  "X0VYUElSQVRJT04QQCreAQobUG9ydGZvbGlvU3Vic2NyaXB0aW9uU3RhdHVz",
                  "Ei0KKVBPUlRGT0xJT19TVUJTQ1JJUFRJT05fU1RBVFVTX1VOU1BFQ0lGSUVE",
                  "EAASKQolUE9SVEZPTElPX1NVQlNDUklQVElPTl9TVEFUVVNfU1VDQ0VTUxAB",
                  "EjMKL1BPUlRGT0xJT19TVUJTQ1JJUFRJT05fU1RBVFVTX0FDQ09VTlRfTk9U",
                  "X0ZPVU5EEAISMAosUE9SVEZPTElPX1NVQlNDUklQVElPTl9TVEFUVVNfSU5U",
                  "RVJOQUxfRVJST1IQAyrlAQoiUG9zaXRpb25zQWNjb3VudFN1YnNjcmlwdGlv",
                  "blN0YXR1cxItCilQT1NJVElPTlNfU1VCU0NSSVBUSU9OX1NUQVRVU19VTlNQ",
                  "RUNJRklFRBAAEikKJVBPU0lUSU9OU19TVUJTQ1JJUFRJT05fU1RBVFVTX1NV",
                  "Q0NFU1MQARIzCi9QT1NJVElPTlNfU1VCU0NSSVBUSU9OX1NUQVRVU19BQ0NP",
                  "VU5UX05PVF9GT1VORBACEjAKLFBPU0lUSU9OU19TVUJTQ1JJUFRJT05fU1RB",
                  "VFVTX0lOVEVSTkFMX0VSUk9SEAMymAgKEU9wZXJhdGlvbnNTZXJ2aWNlEoQB",
                  "Cg1HZXRPcGVyYXRpb25zEjgudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5j",
                  "b250cmFjdC52MS5PcGVyYXRpb25zUmVxdWVzdBo5LnRpbmtvZmYucHVibGlj",
                  "LmludmVzdC5hcGkuY29udHJhY3QudjEuT3BlcmF0aW9uc1Jlc3BvbnNlEoEB",
                  "CgxHZXRQb3J0Zm9saW8SNy50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNv",
                  "bnRyYWN0LnYxLlBvcnRmb2xpb1JlcXVlc3QaOC50aW5rb2ZmLnB1YmxpYy5p",
                  "bnZlc3QuYXBpLmNvbnRyYWN0LnYxLlBvcnRmb2xpb1Jlc3BvbnNlEoEBCgxH",
                  "ZXRQb3NpdGlvbnMSNy50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRy",
                  "YWN0LnYxLlBvc2l0aW9uc1JlcXVlc3QaOC50aW5rb2ZmLnB1YmxpYy5pbnZl",
                  "c3QuYXBpLmNvbnRyYWN0LnYxLlBvc2l0aW9uc1Jlc3BvbnNlEpABChFHZXRX",
                  "aXRoZHJhd0xpbWl0cxI8LnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29u",
                  "dHJhY3QudjEuV2l0aGRyYXdMaW1pdHNSZXF1ZXN0Gj0udGlua29mZi5wdWJs",
                  "aWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5XaXRoZHJhd0xpbWl0c1Jlc3Bv",
                  "bnNlEooBCg9HZXRCcm9rZXJSZXBvcnQSOi50aW5rb2ZmLnB1YmxpYy5pbnZl",
                  "c3QuYXBpLmNvbnRyYWN0LnYxLkJyb2tlclJlcG9ydFJlcXVlc3QaOy50aW5r",
                  "b2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLkJyb2tlclJlcG9y",
                  "dFJlc3BvbnNlEq4BChlHZXREaXZpZGVuZHNGb3JlaWduSXNzdWVyEkcudGlu",
                  "a29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5HZXREaXZpZGVu",
                  "ZHNGb3JlaWduSXNzdWVyUmVxdWVzdBpILnRpbmtvZmYucHVibGljLmludmVz",
                  "dC5hcGkuY29udHJhY3QudjEuR2V0RGl2aWRlbmRzRm9yZWlnbklzc3VlclJl",
                  "c3BvbnNlEqIBChVHZXRPcGVyYXRpb25zQnlDdXJzb3ISQy50aW5rb2ZmLnB1",
                  "YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLkdldE9wZXJhdGlvbnNCeUN1",
                  "cnNvclJlcXVlc3QaRC50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRy",
                  "YWN0LnYxLkdldE9wZXJhdGlvbnNCeUN1cnNvclJlc3BvbnNlMsMCChdPcGVy",
                  "YXRpb25zU3RyZWFtU2VydmljZRKSAQoPUG9ydGZvbGlvU3RyZWFtEj0udGlu",
                  "a29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5Qb3J0Zm9saW9T",
                  "dHJlYW1SZXF1ZXN0Gj4udGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250",
                  "cmFjdC52MS5Qb3J0Zm9saW9TdHJlYW1SZXNwb25zZTABEpIBCg9Qb3NpdGlv",
                  "bnNTdHJlYW0SPS50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0",
                  "LnYxLlBvc2l0aW9uc1N0cmVhbVJlcXVlc3QaPi50aW5rb2ZmLnB1YmxpYy5p",
                  "bnZlc3QuYXBpLmNvbnRyYWN0LnYxLlBvc2l0aW9uc1N0cmVhbVJlc3BvbnNl",
                  "MAFCZwoccnUudGlua29mZi5waWFwaS5jb250cmFjdC52MVABWgwuLztpbnZl",
                  "c3RhcGmiAgVUSUFQSaoCGlRpbmtvZmYuUHJvdG8uSW52ZXN0QXBpLlYxygIR",
                  "VGlua29mZlxJbnZlc3RcVjFiBnByb3RvMw=="));
            descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
                new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Tinkoff.Proto.InvestApi.V1.CommonReflection.Descriptor, },
                new pbr::GeneratedClrTypeInfo(new[] { typeof(global::Tinkoff.Proto.InvestApi.V1.OperationState), typeof(global::Tinkoff.Proto.InvestApi.V1.OperationType), typeof(global::Tinkoff.Proto.InvestApi.V1.PortfolioSubscriptionStatus), typeof(global::Tinkoff.Proto.InvestApi.V1.PositionsAccountSubscriptionStatus), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.OperationsRequest), global::Tinkoff.Proto.InvestApi.V1.OperationsRequest.Parser, new[]{ "AccountId", "From", "To", "State", "Figi" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.OperationsResponse), global::Tinkoff.Proto.InvestApi.V1.OperationsResponse.Parser, new[]{ "Operations" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.Operation), global::Tinkoff.Proto.InvestApi.V1.Operation.Parser, new[]{ "Id", "ParentOperationId", "Currency", "Payment", "Price", "State", "Quantity", "QuantityRest", "Figi", "InstrumentType", "Date", "Type", "OperationType", "Trades", "AssetUid", "PositionUid", "InstrumentUid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.OperationTrade), global::Tinkoff.Proto.InvestApi.V1.OperationTrade.Parser, new[]{ "TradeId", "DateTime", "Quantity", "Price" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.PortfolioRequest), global::Tinkoff.Proto.InvestApi.V1.PortfolioRequest.Parser, new[]{ "AccountId", "Currency" }, null, new[]{ typeof(global::Tinkoff.Proto.InvestApi.V1.PortfolioRequest.Types.CurrencyRequest) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.PortfolioResponse), global::Tinkoff.Proto.InvestApi.V1.PortfolioResponse.Parser, new[]{ "TotalAmountShares", "TotalAmountBonds", "TotalAmountEtf", "TotalAmountCurrencies", "TotalAmountFutures", "ExpectedYield", "Positions", "AccountId", "TotalAmountOptions", "TotalAmountSp", "TotalAmountPortfolio", "VirtualPositions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.PositionsRequest), global::Tinkoff.Proto.InvestApi.V1.PositionsRequest.Parser, new[]{ "AccountId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.PositionsResponse), global::Tinkoff.Proto.InvestApi.V1.PositionsResponse.Parser, new[]{ "Money", "Blocked", "Securities", "LimitsLoadingInProgress", "Futures", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.WithdrawLimitsRequest), global::Tinkoff.Proto.InvestApi.V1.WithdrawLimitsRequest.Parser, new[]{ "AccountId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.WithdrawLimitsResponse), global::Tinkoff.Proto.InvestApi.V1.WithdrawLimitsResponse.Parser, new[]{ "Money", "Blocked", "BlockedGuarantee" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.PortfolioPosition), global::Tinkoff.Proto.InvestApi.V1.PortfolioPosition.Parser, new[]{ "Figi", "InstrumentType", "Quantity", "AveragePositionPrice", "ExpectedYield", "CurrentNkd", "AveragePositionPricePt", "CurrentPrice", "AveragePositionPriceFifo", "QuantityLots", "Blocked", "BlockedLots", "PositionUid", "InstrumentUid", "VarMargin", "ExpectedYieldFifo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.VirtualPortfolioPosition), global::Tinkoff.Proto.InvestApi.V1.VirtualPortfolioPosition.Parser, new[]{ "PositionUid", "InstrumentUid", "Figi", "InstrumentType", "Quantity", "AveragePositionPrice", "ExpectedYield", "ExpectedYieldFifo", "ExpireDate", "CurrentPrice", "AveragePositionPriceFifo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.PositionsSecurities), global::Tinkoff.Proto.InvestApi.V1.PositionsSecurities.Parser, new[]{ "Figi", "Blocked", "Balance", "PositionUid", "InstrumentUid", "ExchangeBlocked", "InstrumentType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.PositionsFutures), global::Tinkoff.Proto.InvestApi.V1.PositionsFutures.Parser, new[]{ "Figi", "Blocked", "Balance", "PositionUid", "InstrumentUid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.PositionsOptions), global::Tinkoff.Proto.InvestApi.V1.PositionsOptions.Parser, new[]{ "PositionUid", "InstrumentUid", "Blocked", "Balance" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.BrokerReportRequest), global::Tinkoff.Proto.InvestApi.V1.BrokerReportRequest.Parser, new[]{ "GenerateBrokerReportRequest", "GetBrokerReportRequest" }, new[]{ "Payload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.BrokerReportResponse), global::Tinkoff.Proto.InvestApi.V1.BrokerReportResponse.Parser, new[]{ "GenerateBrokerReportResponse", "GetBrokerReportResponse" }, new[]{ "Payload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.GenerateBrokerReportRequest), global::Tinkoff.Proto.InvestApi.V1.GenerateBrokerReportRequest.Parser, new[]{ "AccountId", "From", "To" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.GenerateBrokerReportResponse), global::Tinkoff.Proto.InvestApi.V1.GenerateBrokerReportResponse.Parser, new[]{ "TaskId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.GetBrokerReportRequest), global::Tinkoff.Proto.InvestApi.V1.GetBrokerReportRequest.Parser, new[]{ "TaskId", "Page" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.GetBrokerReportResponse), global::Tinkoff.Proto.InvestApi.V1.GetBrokerReportResponse.Parser, new[]{ "BrokerReport", "ItemsCount", "PagesCount", "Page" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.BrokerReport), global::Tinkoff.Proto.InvestApi.V1.BrokerReport.Parser, new[]{ "TradeId", "OrderId", "Figi", "ExecuteSign", "TradeDatetime", "Exchange", "ClassCode", "Direction", "Name", "Ticker", "Price", "Quantity", "OrderAmount", "AciValue", "TotalOrderAmount", "BrokerCommission", "ExchangeCommission", "ExchangeClearingCommission", "RepoRate", "Party", "ClearValueDate", "SecValueDate", "BrokerStatus", "SeparateAgreementType", "SeparateAgreementNumber", "SeparateAgreementDate", "DeliveryType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.GetDividendsForeignIssuerRequest), global::Tinkoff.Proto.InvestApi.V1.GetDividendsForeignIssuerRequest.Parser, new[]{ "GenerateDivForeignIssuerReport", "GetDivForeignIssuerReport" }, new[]{ "Payload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.GetDividendsForeignIssuerResponse), global::Tinkoff.Proto.InvestApi.V1.GetDividendsForeignIssuerResponse.Parser, new[]{ "GenerateDivForeignIssuerReportResponse", "DivForeignIssuerReport" }, new[]{ "Payload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.GenerateDividendsForeignIssuerReportRequest), global::Tinkoff.Proto.InvestApi.V1.GenerateDividendsForeignIssuerReportRequest.Parser, new[]{ "AccountId", "From", "To" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.GetDividendsForeignIssuerReportRequest), global::Tinkoff.Proto.InvestApi.V1.GetDividendsForeignIssuerReportRequest.Parser, new[]{ "TaskId", "Page" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.GenerateDividendsForeignIssuerReportResponse), global::Tinkoff.Proto.InvestApi.V1.GenerateDividendsForeignIssuerReportResponse.Parser, new[]{ "TaskId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.GetDividendsForeignIssuerReportResponse), global::Tinkoff.Proto.InvestApi.V1.GetDividendsForeignIssuerReportResponse.Parser, new[]{ "DividendsForeignIssuerReport", "ItemsCount", "PagesCount", "Page" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.DividendsForeignIssuerReport), global::Tinkoff.Proto.InvestApi.V1.DividendsForeignIssuerReport.Parser, new[]{ "RecordDate", "PaymentDate", "SecurityName", "Isin", "IssuerCountry", "Quantity", "Dividend", "ExternalCommission", "DividendGross", "Tax", "DividendAmount", "Currency" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.PortfolioStreamRequest), global::Tinkoff.Proto.InvestApi.V1.PortfolioStreamRequest.Parser, new[]{ "Accounts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.PortfolioStreamResponse), global::Tinkoff.Proto.InvestApi.V1.PortfolioStreamResponse.Parser, new[]{ "Subscriptions", "Portfolio", "Ping" }, new[]{ "Payload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.PortfolioSubscriptionResult), global::Tinkoff.Proto.InvestApi.V1.PortfolioSubscriptionResult.Parser, new[]{ "Accounts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.AccountSubscriptionStatus), global::Tinkoff.Proto.InvestApi.V1.AccountSubscriptionStatus.Parser, new[]{ "AccountId", "SubscriptionStatus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.GetOperationsByCursorRequest), global::Tinkoff.Proto.InvestApi.V1.GetOperationsByCursorRequest.Parser, new[]{ "AccountId", "InstrumentId", "From", "To", "Cursor", "Limit", "OperationTypes", "State", "WithoutCommissions", "WithoutTrades", "WithoutOvernights" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.GetOperationsByCursorResponse), global::Tinkoff.Proto.InvestApi.V1.GetOperationsByCursorResponse.Parser, new[]{ "HasNext", "NextCursor", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.OperationItem), global::Tinkoff.Proto.InvestApi.V1.OperationItem.Parser, new[]{ "Cursor", "BrokerAccountId", "Id", "ParentOperationId", "Name", "Date", "Type", "Description", "State", "InstrumentUid", "Figi", "InstrumentType", "InstrumentKind", "Payment", "Price", "Commission", "Yield", "YieldRelative", "AccruedInt", "Quantity", "QuantityRest", "QuantityDone", "CancelDateTime", "CancelReason", "TradesInfo", "AssetUid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.OperationItemTrades), global::Tinkoff.Proto.InvestApi.V1.OperationItemTrades.Parser, new[]{ "Trades" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.OperationItemTrade), global::Tinkoff.Proto.InvestApi.V1.OperationItemTrade.Parser, new[]{ "Num", "Date", "Quantity", "Price", "Yield", "YieldRelative" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.PositionsStreamRequest), global::Tinkoff.Proto.InvestApi.V1.PositionsStreamRequest.Parser, new[]{ "Accounts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.PositionsStreamResponse), global::Tinkoff.Proto.InvestApi.V1.PositionsStreamResponse.Parser, new[]{ "Subscriptions", "Position", "Ping" }, new[]{ "Payload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.PositionsSubscriptionResult), global::Tinkoff.Proto.InvestApi.V1.PositionsSubscriptionResult.Parser, new[]{ "Accounts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.PositionsSubscriptionStatus), global::Tinkoff.Proto.InvestApi.V1.PositionsSubscriptionStatus.Parser, new[]{ "AccountId", "SubscriptionStatus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.PositionData), global::Tinkoff.Proto.InvestApi.V1.PositionData.Parser, new[]{ "AccountId", "Money", "Securities", "Futures", "Options", "Date" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.Proto.InvestApi.V1.PositionsMoney), global::Tinkoff.Proto.InvestApi.V1.PositionsMoney.Parser, new[]{ "AvailableValue", "BlockedValue" }, null, null, null, null)
                }));
        }
        #endregion

    }
    #region Enums
    /// <summary>
    ///Статус запрашиваемых операций.
    /// </summary>
    public enum OperationState
    {
        /// <summary>
        ///Статус операции не определён
        /// </summary>
        [pbr::OriginalName("OPERATION_STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        ///Исполнена.
        /// </summary>
        [pbr::OriginalName("OPERATION_STATE_EXECUTED")] Executed = 1,
        /// <summary>
        ///Отменена.
        /// </summary>
        [pbr::OriginalName("OPERATION_STATE_CANCELED")] Canceled = 2,
        /// <summary>
        ///Исполняется.
        /// </summary>
        [pbr::OriginalName("OPERATION_STATE_PROGRESS")] Progress = 3,
    }

    /// <summary>
    ///Тип операции.
    /// </summary>
    public enum OperationType
    {
        /// <summary>
        ///Тип операции не определён.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        ///Пополнение брокерского счёта.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_INPUT")] Input = 1,
        /// <summary>
        ///Удержание НДФЛ по купонам.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_BOND_TAX")] BondTax = 2,
        /// <summary>
        ///Вывод ЦБ.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_OUTPUT_SECURITIES")] OutputSecurities = 3,
        /// <summary>
        ///Доход по сделке РЕПО овернайт.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_OVERNIGHT")] Overnight = 4,
        /// <summary>
        ///Удержание налога.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_TAX")] Tax = 5,
        /// <summary>
        ///Полное погашение облигаций.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_BOND_REPAYMENT_FULL")] BondRepaymentFull = 6,
        /// <summary>
        ///Продажа ЦБ с карты.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_SELL_CARD")] SellCard = 7,
        /// <summary>
        ///Удержание налога по дивидендам.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_DIVIDEND_TAX")] DividendTax = 8,
        /// <summary>
        ///Вывод денежных средств.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_OUTPUT")] Output = 9,
        /// <summary>
        ///Частичное погашение облигаций.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_BOND_REPAYMENT")] BondRepayment = 10,
        /// <summary>
        ///Корректировка налога.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_TAX_CORRECTION")] TaxCorrection = 11,
        /// <summary>
        ///Удержание комиссии за обслуживание брокерского счёта.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_SERVICE_FEE")] ServiceFee = 12,
        /// <summary>
        ///Удержание налога за материальную выгоду.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_BENEFIT_TAX")] BenefitTax = 13,
        /// <summary>
        ///Удержание комиссии за непокрытую позицию.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_MARGIN_FEE")] MarginFee = 14,
        /// <summary>
        ///Покупка ЦБ.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_BUY")] Buy = 15,
        /// <summary>
        ///Покупка ЦБ с карты.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_BUY_CARD")] BuyCard = 16,
        /// <summary>
        ///Перевод ценных бумаг из другого депозитария.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_INPUT_SECURITIES")] InputSecurities = 17,
        /// <summary>
        ///Продажа в результате Margin-call.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_SELL_MARGIN")] SellMargin = 18,
        /// <summary>
        ///Удержание комиссии за операцию.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_BROKER_FEE")] BrokerFee = 19,
        /// <summary>
        ///Покупка в результате Margin-call.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_BUY_MARGIN")] BuyMargin = 20,
        /// <summary>
        ///Выплата дивидендов.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_DIVIDEND")] Dividend = 21,
        /// <summary>
        ///Продажа ЦБ.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_SELL")] Sell = 22,
        /// <summary>
        ///Выплата купонов.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_COUPON")] Coupon = 23,
        /// <summary>
        ///Удержание комиссии SuccessFee.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_SUCCESS_FEE")] SuccessFee = 24,
        /// <summary>
        ///Передача дивидендного дохода.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_DIVIDEND_TRANSFER")] DividendTransfer = 25,
        /// <summary>
        ///Зачисление вариационной маржи.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_ACCRUING_VARMARGIN")] AccruingVarmargin = 26,
        /// <summary>
        ///Списание вариационной маржи.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_WRITING_OFF_VARMARGIN")] WritingOffVarmargin = 27,
        /// <summary>
        ///Покупка в рамках экспирации фьючерсного контракта.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_DELIVERY_BUY")] DeliveryBuy = 28,
        /// <summary>
        ///Продажа в рамках экспирации фьючерсного контракта.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_DELIVERY_SELL")] DeliverySell = 29,
        /// <summary>
        ///Комиссия за управление по счёту автоследования.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_TRACK_MFEE")] TrackMfee = 30,
        /// <summary>
        ///Комиссия за результат по счёту автоследования.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_TRACK_PFEE")] TrackPfee = 31,
        /// <summary>
        ///Удержание налога по ставке 15%.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_TAX_PROGRESSIVE")] TaxProgressive = 32,
        /// <summary>
        ///Удержание налога по купонам по ставке 15%.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_BOND_TAX_PROGRESSIVE")] BondTaxProgressive = 33,
        /// <summary>
        ///Удержание налога по дивидендам по ставке 15%.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_DIVIDEND_TAX_PROGRESSIVE")] DividendTaxProgressive = 34,
        /// <summary>
        ///Удержание налога за материальную выгоду по ставке 15%.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_BENEFIT_TAX_PROGRESSIVE")] BenefitTaxProgressive = 35,
        /// <summary>
        ///Корректировка налога по ставке 15%.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_TAX_CORRECTION_PROGRESSIVE")] TaxCorrectionProgressive = 36,
        /// <summary>
        ///Удержание налога за возмещение по сделкам РЕПО по ставке 15%.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_TAX_REPO_PROGRESSIVE")] TaxRepoProgressive = 37,
        /// <summary>
        ///Удержание налога за возмещение по сделкам РЕПО.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_TAX_REPO")] TaxRepo = 38,
        /// <summary>
        ///Удержание налога по сделкам РЕПО.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_TAX_REPO_HOLD")] TaxRepoHold = 39,
        /// <summary>
        ///Возврат налога по сделкам РЕПО.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_TAX_REPO_REFUND")] TaxRepoRefund = 40,
        /// <summary>
        ///Удержание налога по сделкам РЕПО по ставке 15%.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_TAX_REPO_HOLD_PROGRESSIVE")] TaxRepoHoldProgressive = 41,
        /// <summary>
        ///Возврат налога по сделкам РЕПО по ставке 15%.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_TAX_REPO_REFUND_PROGRESSIVE")] TaxRepoRefundProgressive = 42,
        /// <summary>
        ///Выплата дивидендов на карту.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_DIV_EXT")] DivExt = 43,
        /// <summary>
        ///Корректировка налога по купонам.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_TAX_CORRECTION_COUPON")] TaxCorrectionCoupon = 44,
        /// <summary>
        ///Комиссия за валютный остаток.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_CASH_FEE")] CashFee = 45,
        /// <summary>
        ///Комиссия за вывод валюты с брокерского счета.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_OUT_FEE")] OutFee = 46,
        /// <summary>
        ///Гербовый сбор.
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_OUT_STAMP_DUTY")] OutStampDuty = 47,
        /// <summary>
        ///	SWIFT-перевод
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_OUTPUT_SWIFT")] OutputSwift = 50,
        /// <summary>
        ///	SWIFT-перевод
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_INPUT_SWIFT")] InputSwift = 51,
        /// <summary>
        ///  Перевод на карту
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_OUTPUT_ACQUIRING")] OutputAcquiring = 53,
        /// <summary>
        ///	Перевод с карты
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_INPUT_ACQUIRING")] InputAcquiring = 54,
        /// <summary>
        ///	Комиссия за вывод средств
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_OUTPUT_PENALTY")] OutputPenalty = 55,
        /// <summary>
        ///	Списание оплаты за сервис Советов
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_ADVICE_FEE")] AdviceFee = 56,
        /// <summary>
        ///  Перевод ценных бумаг с ИИС на Брокерский счет
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_TRANS_IIS_BS")] TransIisBs = 57,
        /// <summary>
        ///  Перевод ценных бумаг с одного брокерского счета на другой
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_TRANS_BS_BS")] TransBsBs = 58,
        /// <summary>
        ///  Вывод денежных средств со счета
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_OUT_MULTI")] OutMulti = 59,
        /// <summary>
        ///  Пополнение денежных средств со счета
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_INP_MULTI")] InpMulti = 60,
        /// <summary>
        ///  Размещение биржевого овернайта
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_OVER_PLACEMENT")] OverPlacement = 61,
        /// <summary>
        ///  Списание комиссии
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_OVER_COM")] OverCom = 62,
        /// <summary>
        ///  Доход от оверанайта
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_OVER_INCOME")] OverIncome = 63,
        /// <summary>
        /// Экспирация
        /// </summary>
        [pbr::OriginalName("OPERATION_TYPE_OPTION_EXPIRATION")] OptionExpiration = 64,
    }

    /// <summary>
    ///Результат подписки.
    /// </summary>
    public enum PortfolioSubscriptionStatus
    {
        /// <summary>
        ///Тип не определён.
        /// </summary>
        [pbr::OriginalName("PORTFOLIO_SUBSCRIPTION_STATUS_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        ///Успешно.
        /// </summary>
        [pbr::OriginalName("PORTFOLIO_SUBSCRIPTION_STATUS_SUCCESS")] Success = 1,
        /// <summary>
        ///Счёт не найден или недостаточно прав.
        /// </summary>
        [pbr::OriginalName("PORTFOLIO_SUBSCRIPTION_STATUS_ACCOUNT_NOT_FOUND")] AccountNotFound = 2,
        /// <summary>
        ///Произошла ошибка.
        /// </summary>
        [pbr::OriginalName("PORTFOLIO_SUBSCRIPTION_STATUS_INTERNAL_ERROR")] InternalError = 3,
    }

    /// <summary>
    ///Результат подписки.
    /// </summary>
    public enum PositionsAccountSubscriptionStatus
    {
        /// <summary>
        ///Тип не определён.
        /// </summary>
        [pbr::OriginalName("POSITIONS_SUBSCRIPTION_STATUS_UNSPECIFIED")] PositionsSubscriptionStatusUnspecified = 0,
        /// <summary>
        ///Успешно.
        /// </summary>
        [pbr::OriginalName("POSITIONS_SUBSCRIPTION_STATUS_SUCCESS")] PositionsSubscriptionStatusSuccess = 1,
        /// <summary>
        ///Счёт не найден или недостаточно прав.
        /// </summary>
        [pbr::OriginalName("POSITIONS_SUBSCRIPTION_STATUS_ACCOUNT_NOT_FOUND")] PositionsSubscriptionStatusAccountNotFound = 2,
        /// <summary>
        ///Произошла ошибка.
        /// </summary>
        [pbr::OriginalName("POSITIONS_SUBSCRIPTION_STATUS_INTERNAL_ERROR")] PositionsSubscriptionStatusInternalError = 3,
    }

    #endregion

    #region Messages
    /// <summary>
    ///Запрос получения списка операций по счёту.
    /// </summary>
    public sealed partial class OperationsRequest : pb::IMessage<OperationsRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<OperationsRequest> _parser = new pb::MessageParser<OperationsRequest>(() => new OperationsRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<OperationsRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OperationsRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OperationsRequest(OperationsRequest other) : this()
        {
            accountId_ = other.accountId_;
            from_ = other.from_ != null ? other.from_.Clone() : null;
            to_ = other.to_ != null ? other.to_.Clone() : null;
            state_ = other.state_;
            figi_ = other.figi_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OperationsRequest Clone()
        {
            return new OperationsRequest(this);
        }

        /// <summary>Field number for the "account_id" field.</summary>
        public const int AccountIdFieldNumber = 1;
        private string accountId_ = "";
        /// <summary>
        ///Идентификатор счёта клиента.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AccountId
        {
            get { return accountId_; }
            set
            {
                accountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "from" field.</summary>
        public const int FromFieldNumber = 2;
        private global::Google.Protobuf.WellKnownTypes.Timestamp from_;
        /// <summary>
        ///Начало периода (по UTC).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp From
        {
            get { return from_; }
            set
            {
                from_ = value;
            }
        }

        /// <summary>Field number for the "to" field.</summary>
        public const int ToFieldNumber = 3;
        private global::Google.Protobuf.WellKnownTypes.Timestamp to_;
        /// <summary>
        ///Окончание периода (по UTC).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp To
        {
            get { return to_; }
            set
            {
                to_ = value;
            }
        }

        /// <summary>Field number for the "state" field.</summary>
        public const int StateFieldNumber = 4;
        private global::Tinkoff.Proto.InvestApi.V1.OperationState state_ = global::Tinkoff.Proto.InvestApi.V1.OperationState.Unspecified;
        /// <summary>
        ///Статус запрашиваемых операций.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.OperationState State
        {
            get { return state_; }
            set
            {
                state_ = value;
            }
        }

        /// <summary>Field number for the "figi" field.</summary>
        public const int FigiFieldNumber = 5;
        private string figi_ = "";
        /// <summary>
        ///Figi-идентификатор инструмента для фильтрации.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Figi
        {
            get { return figi_; }
            set
            {
                figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as OperationsRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(OperationsRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (AccountId != other.AccountId) return false;
            if (!object.Equals(From, other.From)) return false;
            if (!object.Equals(To, other.To)) return false;
            if (State != other.State) return false;
            if (Figi != other.Figi) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (AccountId.Length != 0) hash ^= AccountId.GetHashCode();
            if (from_ != null) hash ^= From.GetHashCode();
            if (to_ != null) hash ^= To.GetHashCode();
            if (State != global::Tinkoff.Proto.InvestApi.V1.OperationState.Unspecified) hash ^= State.GetHashCode();
            if (Figi.Length != 0) hash ^= Figi.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (AccountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountId);
      }
      if (from_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(From);
      }
      if (to_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(To);
      }
      if (State != global::Tinkoff.Proto.InvestApi.V1.OperationState.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) State);
      }
      if (Figi.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Figi);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (AccountId.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(AccountId);
            }
            if (from_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(From);
            }
            if (to_ != null)
            {
                output.WriteRawTag(26);
                output.WriteMessage(To);
            }
            if (State != global::Tinkoff.Proto.InvestApi.V1.OperationState.Unspecified)
            {
                output.WriteRawTag(32);
                output.WriteEnum((int)State);
            }
            if (Figi.Length != 0)
            {
                output.WriteRawTag(42);
                output.WriteString(Figi);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (AccountId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountId);
            }
            if (from_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
            }
            if (to_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
            }
            if (State != global::Tinkoff.Proto.InvestApi.V1.OperationState.Unspecified)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)State);
            }
            if (Figi.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(OperationsRequest other)
        {
            if (other == null)
            {
                return;
            }
            if (other.AccountId.Length != 0)
            {
                AccountId = other.AccountId;
            }
            if (other.from_ != null)
            {
                if (from_ == null)
                {
                    From = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                From.MergeFrom(other.From);
            }
            if (other.to_ != null)
            {
                if (to_ == null)
                {
                    To = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                To.MergeFrom(other.To);
            }
            if (other.State != global::Tinkoff.Proto.InvestApi.V1.OperationState.Unspecified)
            {
                State = other.State;
            }
            if (other.Figi.Length != 0)
            {
                Figi = other.Figi;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountId = input.ReadString();
            break;
          }
          case 18: {
            if (from_ == null) {
              From = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(From);
            break;
          }
          case 26: {
            if (to_ == null) {
              To = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(To);
            break;
          }
          case 32: {
            State = (global::Tinkoff.Proto.InvestApi.V1.OperationState) input.ReadEnum();
            break;
          }
          case 42: {
            Figi = input.ReadString();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            AccountId = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            if (from_ == null)
                            {
                                From = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                            }
                            input.ReadMessage(From);
                            break;
                        }
                    case 26:
                        {
                            if (to_ == null)
                            {
                                To = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                            }
                            input.ReadMessage(To);
                            break;
                        }
                    case 32:
                        {
                            State = (global::Tinkoff.Proto.InvestApi.V1.OperationState)input.ReadEnum();
                            break;
                        }
                    case 42:
                        {
                            Figi = input.ReadString();
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Список операций.
    /// </summary>
    public sealed partial class OperationsResponse : pb::IMessage<OperationsResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<OperationsResponse> _parser = new pb::MessageParser<OperationsResponse>(() => new OperationsResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<OperationsResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OperationsResponse()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OperationsResponse(OperationsResponse other) : this()
        {
            operations_ = other.operations_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OperationsResponse Clone()
        {
            return new OperationsResponse(this);
        }

        /// <summary>Field number for the "operations" field.</summary>
        public const int OperationsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Tinkoff.Proto.InvestApi.V1.Operation> _repeated_operations_codec
            = pb::FieldCodec.ForMessage(10, global::Tinkoff.Proto.InvestApi.V1.Operation.Parser);
        private readonly pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.Operation> operations_ = new pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.Operation>();
        /// <summary>
        ///Массив операций.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.Operation> Operations
        {
            get { return operations_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as OperationsResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(OperationsResponse other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!operations_.Equals(other.operations_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= operations_.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      operations_.WriteTo(output, _repeated_operations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            operations_.WriteTo(ref output, _repeated_operations_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            size += operations_.CalculateSize(_repeated_operations_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(OperationsResponse other)
        {
            if (other == null)
            {
                return;
            }
            operations_.Add(other.operations_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            operations_.AddEntriesFrom(input, _repeated_operations_codec);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            operations_.AddEntriesFrom(ref input, _repeated_operations_codec);
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Данные по операции.
    /// </summary>
    public sealed partial class Operation : pb::IMessage<Operation>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<Operation> _parser = new pb::MessageParser<Operation>(() => new Operation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Operation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Operation()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Operation(Operation other) : this()
        {
            id_ = other.id_;
            parentOperationId_ = other.parentOperationId_;
            currency_ = other.currency_;
            payment_ = other.payment_ != null ? other.payment_.Clone() : null;
            price_ = other.price_ != null ? other.price_.Clone() : null;
            state_ = other.state_;
            quantity_ = other.quantity_;
            quantityRest_ = other.quantityRest_;
            figi_ = other.figi_;
            instrumentType_ = other.instrumentType_;
            date_ = other.date_ != null ? other.date_.Clone() : null;
            type_ = other.type_;
            operationType_ = other.operationType_;
            trades_ = other.trades_.Clone();
            assetUid_ = other.assetUid_;
            positionUid_ = other.positionUid_;
            instrumentUid_ = other.instrumentUid_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Operation Clone()
        {
            return new Operation(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        /// <summary>
        ///Идентификатор операции.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Id
        {
            get { return id_; }
            set
            {
                id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "parent_operation_id" field.</summary>
        public const int ParentOperationIdFieldNumber = 2;
        private string parentOperationId_ = "";
        /// <summary>
        ///Идентификатор родительской операции.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ParentOperationId
        {
            get { return parentOperationId_; }
            set
            {
                parentOperationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "currency" field.</summary>
        public const int CurrencyFieldNumber = 3;
        private string currency_ = "";
        /// <summary>
        ///Валюта операции.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Currency
        {
            get { return currency_; }
            set
            {
                currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "payment" field.</summary>
        public const int PaymentFieldNumber = 4;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue payment_;
        /// <summary>
        ///Сумма операции.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue Payment
        {
            get { return payment_; }
            set
            {
                payment_ = value;
            }
        }

        /// <summary>Field number for the "price" field.</summary>
        public const int PriceFieldNumber = 5;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue price_;
        /// <summary>
        ///Цена операции за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue Price
        {
            get { return price_; }
            set
            {
                price_ = value;
            }
        }

        /// <summary>Field number for the "state" field.</summary>
        public const int StateFieldNumber = 6;
        private global::Tinkoff.Proto.InvestApi.V1.OperationState state_ = global::Tinkoff.Proto.InvestApi.V1.OperationState.Unspecified;
        /// <summary>
        ///Статус операции.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.OperationState State
        {
            get { return state_; }
            set
            {
                state_ = value;
            }
        }

        /// <summary>Field number for the "quantity" field.</summary>
        public const int QuantityFieldNumber = 7;
        private long quantity_;
        /// <summary>
        ///Количество единиц инструмента.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long Quantity
        {
            get { return quantity_; }
            set
            {
                quantity_ = value;
            }
        }

        /// <summary>Field number for the "quantity_rest" field.</summary>
        public const int QuantityRestFieldNumber = 8;
        private long quantityRest_;
        /// <summary>
        ///Неисполненный остаток по сделке.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long QuantityRest
        {
            get { return quantityRest_; }
            set
            {
                quantityRest_ = value;
            }
        }

        /// <summary>Field number for the "figi" field.</summary>
        public const int FigiFieldNumber = 9;
        private string figi_ = "";
        /// <summary>
        ///Figi-идентификатор инструмента, связанного с операцией.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Figi
        {
            get { return figi_; }
            set
            {
                figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "instrument_type" field.</summary>
        public const int InstrumentTypeFieldNumber = 10;
        private string instrumentType_ = "";
        /// <summary>
        ///Тип инструмента. Возможные значения: &lt;/br>**bond** — облигация; &lt;/br>**share** — акция; &lt;/br>**currency** — валюта; &lt;/br>**etf** — фонд; &lt;/br>**futures** — фьючерс.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string InstrumentType
        {
            get { return instrumentType_; }
            set
            {
                instrumentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "date" field.</summary>
        public const int DateFieldNumber = 11;
        private global::Google.Protobuf.WellKnownTypes.Timestamp date_;
        /// <summary>
        ///Дата и время операции в формате часовом поясе UTC.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp Date
        {
            get { return date_; }
            set
            {
                date_ = value;
            }
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 12;
        private string type_ = "";
        /// <summary>
        ///Текстовое описание типа операции.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Type
        {
            get { return type_; }
            set
            {
                type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "operation_type" field.</summary>
        public const int OperationTypeFieldNumber = 13;
        private global::Tinkoff.Proto.InvestApi.V1.OperationType operationType_ = global::Tinkoff.Proto.InvestApi.V1.OperationType.Unspecified;
        /// <summary>
        ///Тип операции.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.OperationType OperationType
        {
            get { return operationType_; }
            set
            {
                operationType_ = value;
            }
        }

        /// <summary>Field number for the "trades" field.</summary>
        public const int TradesFieldNumber = 14;
        private static readonly pb::FieldCodec<global::Tinkoff.Proto.InvestApi.V1.OperationTrade> _repeated_trades_codec
            = pb::FieldCodec.ForMessage(114, global::Tinkoff.Proto.InvestApi.V1.OperationTrade.Parser);
        private readonly pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.OperationTrade> trades_ = new pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.OperationTrade>();
        /// <summary>
        ///Массив сделок.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.OperationTrade> Trades
        {
            get { return trades_; }
        }

        /// <summary>Field number for the "asset_uid" field.</summary>
        public const int AssetUidFieldNumber = 16;
        private string assetUid_ = "";
        /// <summary>
        ///Идентификатор актива
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AssetUid
        {
            get { return assetUid_; }
            set
            {
                assetUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "position_uid" field.</summary>
        public const int PositionUidFieldNumber = 17;
        private string positionUid_ = "";
        /// <summary>
        ///Position_uid-идентификатора инструмента
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string PositionUid
        {
            get { return positionUid_; }
            set
            {
                positionUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "instrument_uid" field.</summary>
        public const int InstrumentUidFieldNumber = 18;
        private string instrumentUid_ = "";
        /// <summary>
        ///Уникальный идентификатор инструмента
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string InstrumentUid
        {
            get { return instrumentUid_; }
            set
            {
                instrumentUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as Operation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Operation other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Id != other.Id) return false;
            if (ParentOperationId != other.ParentOperationId) return false;
            if (Currency != other.Currency) return false;
            if (!object.Equals(Payment, other.Payment)) return false;
            if (!object.Equals(Price, other.Price)) return false;
            if (State != other.State) return false;
            if (Quantity != other.Quantity) return false;
            if (QuantityRest != other.QuantityRest) return false;
            if (Figi != other.Figi) return false;
            if (InstrumentType != other.InstrumentType) return false;
            if (!object.Equals(Date, other.Date)) return false;
            if (Type != other.Type) return false;
            if (OperationType != other.OperationType) return false;
            if (!trades_.Equals(other.trades_)) return false;
            if (AssetUid != other.AssetUid) return false;
            if (PositionUid != other.PositionUid) return false;
            if (InstrumentUid != other.InstrumentUid) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Id.Length != 0) hash ^= Id.GetHashCode();
            if (ParentOperationId.Length != 0) hash ^= ParentOperationId.GetHashCode();
            if (Currency.Length != 0) hash ^= Currency.GetHashCode();
            if (payment_ != null) hash ^= Payment.GetHashCode();
            if (price_ != null) hash ^= Price.GetHashCode();
            if (State != global::Tinkoff.Proto.InvestApi.V1.OperationState.Unspecified) hash ^= State.GetHashCode();
            if (Quantity != 0L) hash ^= Quantity.GetHashCode();
            if (QuantityRest != 0L) hash ^= QuantityRest.GetHashCode();
            if (Figi.Length != 0) hash ^= Figi.GetHashCode();
            if (InstrumentType.Length != 0) hash ^= InstrumentType.GetHashCode();
            if (date_ != null) hash ^= Date.GetHashCode();
            if (Type.Length != 0) hash ^= Type.GetHashCode();
            if (OperationType != global::Tinkoff.Proto.InvestApi.V1.OperationType.Unspecified) hash ^= OperationType.GetHashCode();
            hash ^= trades_.GetHashCode();
            if (AssetUid.Length != 0) hash ^= AssetUid.GetHashCode();
            if (PositionUid.Length != 0) hash ^= PositionUid.GetHashCode();
            if (InstrumentUid.Length != 0) hash ^= InstrumentUid.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ParentOperationId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ParentOperationId);
      }
      if (Currency.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Currency);
      }
      if (payment_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Payment);
      }
      if (price_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Price);
      }
      if (State != global::Tinkoff.Proto.InvestApi.V1.OperationState.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) State);
      }
      if (Quantity != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(Quantity);
      }
      if (QuantityRest != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(QuantityRest);
      }
      if (Figi.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Figi);
      }
      if (InstrumentType.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(InstrumentType);
      }
      if (date_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Date);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Type);
      }
      if (OperationType != global::Tinkoff.Proto.InvestApi.V1.OperationType.Unspecified) {
        output.WriteRawTag(104);
        output.WriteEnum((int) OperationType);
      }
      trades_.WriteTo(output, _repeated_trades_codec);
      if (AssetUid.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(AssetUid);
      }
      if (PositionUid.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(PositionUid);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(InstrumentUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (Id.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Id);
            }
            if (ParentOperationId.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(ParentOperationId);
            }
            if (Currency.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(Currency);
            }
            if (payment_ != null)
            {
                output.WriteRawTag(34);
                output.WriteMessage(Payment);
            }
            if (price_ != null)
            {
                output.WriteRawTag(42);
                output.WriteMessage(Price);
            }
            if (State != global::Tinkoff.Proto.InvestApi.V1.OperationState.Unspecified)
            {
                output.WriteRawTag(48);
                output.WriteEnum((int)State);
            }
            if (Quantity != 0L)
            {
                output.WriteRawTag(56);
                output.WriteInt64(Quantity);
            }
            if (QuantityRest != 0L)
            {
                output.WriteRawTag(64);
                output.WriteInt64(QuantityRest);
            }
            if (Figi.Length != 0)
            {
                output.WriteRawTag(74);
                output.WriteString(Figi);
            }
            if (InstrumentType.Length != 0)
            {
                output.WriteRawTag(82);
                output.WriteString(InstrumentType);
            }
            if (date_ != null)
            {
                output.WriteRawTag(90);
                output.WriteMessage(Date);
            }
            if (Type.Length != 0)
            {
                output.WriteRawTag(98);
                output.WriteString(Type);
            }
            if (OperationType != global::Tinkoff.Proto.InvestApi.V1.OperationType.Unspecified)
            {
                output.WriteRawTag(104);
                output.WriteEnum((int)OperationType);
            }
            trades_.WriteTo(ref output, _repeated_trades_codec);
            if (AssetUid.Length != 0)
            {
                output.WriteRawTag(130, 1);
                output.WriteString(AssetUid);
            }
            if (PositionUid.Length != 0)
            {
                output.WriteRawTag(138, 1);
                output.WriteString(PositionUid);
            }
            if (InstrumentUid.Length != 0)
            {
                output.WriteRawTag(146, 1);
                output.WriteString(InstrumentUid);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (Id.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
            }
            if (ParentOperationId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ParentOperationId);
            }
            if (Currency.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
            }
            if (payment_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payment);
            }
            if (price_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Price);
            }
            if (State != global::Tinkoff.Proto.InvestApi.V1.OperationState.Unspecified)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)State);
            }
            if (Quantity != 0L)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(Quantity);
            }
            if (QuantityRest != 0L)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(QuantityRest);
            }
            if (Figi.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
            }
            if (InstrumentType.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentType);
            }
            if (date_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Date);
            }
            if (Type.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
            }
            if (OperationType != global::Tinkoff.Proto.InvestApi.V1.OperationType.Unspecified)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)OperationType);
            }
            size += trades_.CalculateSize(_repeated_trades_codec);
            if (AssetUid.Length != 0)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(AssetUid);
            }
            if (PositionUid.Length != 0)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(PositionUid);
            }
            if (InstrumentUid.Length != 0)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(InstrumentUid);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Operation other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Id.Length != 0)
            {
                Id = other.Id;
            }
            if (other.ParentOperationId.Length != 0)
            {
                ParentOperationId = other.ParentOperationId;
            }
            if (other.Currency.Length != 0)
            {
                Currency = other.Currency;
            }
            if (other.payment_ != null)
            {
                if (payment_ == null)
                {
                    Payment = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                Payment.MergeFrom(other.Payment);
            }
            if (other.price_ != null)
            {
                if (price_ == null)
                {
                    Price = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                Price.MergeFrom(other.Price);
            }
            if (other.State != global::Tinkoff.Proto.InvestApi.V1.OperationState.Unspecified)
            {
                State = other.State;
            }
            if (other.Quantity != 0L)
            {
                Quantity = other.Quantity;
            }
            if (other.QuantityRest != 0L)
            {
                QuantityRest = other.QuantityRest;
            }
            if (other.Figi.Length != 0)
            {
                Figi = other.Figi;
            }
            if (other.InstrumentType.Length != 0)
            {
                InstrumentType = other.InstrumentType;
            }
            if (other.date_ != null)
            {
                if (date_ == null)
                {
                    Date = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                Date.MergeFrom(other.Date);
            }
            if (other.Type.Length != 0)
            {
                Type = other.Type;
            }
            if (other.OperationType != global::Tinkoff.Proto.InvestApi.V1.OperationType.Unspecified)
            {
                OperationType = other.OperationType;
            }
            trades_.Add(other.trades_);
            if (other.AssetUid.Length != 0)
            {
                AssetUid = other.AssetUid;
            }
            if (other.PositionUid.Length != 0)
            {
                PositionUid = other.PositionUid;
            }
            if (other.InstrumentUid.Length != 0)
            {
                InstrumentUid = other.InstrumentUid;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ParentOperationId = input.ReadString();
            break;
          }
          case 26: {
            Currency = input.ReadString();
            break;
          }
          case 34: {
            if (payment_ == null) {
              Payment = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(Payment);
            break;
          }
          case 42: {
            if (price_ == null) {
              Price = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(Price);
            break;
          }
          case 48: {
            State = (global::Tinkoff.Proto.InvestApi.V1.OperationState) input.ReadEnum();
            break;
          }
          case 56: {
            Quantity = input.ReadInt64();
            break;
          }
          case 64: {
            QuantityRest = input.ReadInt64();
            break;
          }
          case 74: {
            Figi = input.ReadString();
            break;
          }
          case 82: {
            InstrumentType = input.ReadString();
            break;
          }
          case 90: {
            if (date_ == null) {
              Date = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Date);
            break;
          }
          case 98: {
            Type = input.ReadString();
            break;
          }
          case 104: {
            OperationType = (global::Tinkoff.Proto.InvestApi.V1.OperationType) input.ReadEnum();
            break;
          }
          case 114: {
            trades_.AddEntriesFrom(input, _repeated_trades_codec);
            break;
          }
          case 130: {
            AssetUid = input.ReadString();
            break;
          }
          case 138: {
            PositionUid = input.ReadString();
            break;
          }
          case 146: {
            InstrumentUid = input.ReadString();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            Id = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            ParentOperationId = input.ReadString();
                            break;
                        }
                    case 26:
                        {
                            Currency = input.ReadString();
                            break;
                        }
                    case 34:
                        {
                            if (payment_ == null)
                            {
                                Payment = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(Payment);
                            break;
                        }
                    case 42:
                        {
                            if (price_ == null)
                            {
                                Price = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(Price);
                            break;
                        }
                    case 48:
                        {
                            State = (global::Tinkoff.Proto.InvestApi.V1.OperationState)input.ReadEnum();
                            break;
                        }
                    case 56:
                        {
                            Quantity = input.ReadInt64();
                            break;
                        }
                    case 64:
                        {
                            QuantityRest = input.ReadInt64();
                            break;
                        }
                    case 74:
                        {
                            Figi = input.ReadString();
                            break;
                        }
                    case 82:
                        {
                            InstrumentType = input.ReadString();
                            break;
                        }
                    case 90:
                        {
                            if (date_ == null)
                            {
                                Date = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                            }
                            input.ReadMessage(Date);
                            break;
                        }
                    case 98:
                        {
                            Type = input.ReadString();
                            break;
                        }
                    case 104:
                        {
                            OperationType = (global::Tinkoff.Proto.InvestApi.V1.OperationType)input.ReadEnum();
                            break;
                        }
                    case 114:
                        {
                            trades_.AddEntriesFrom(ref input, _repeated_trades_codec);
                            break;
                        }
                    case 130:
                        {
                            AssetUid = input.ReadString();
                            break;
                        }
                    case 138:
                        {
                            PositionUid = input.ReadString();
                            break;
                        }
                    case 146:
                        {
                            InstrumentUid = input.ReadString();
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Сделка по операции.
    /// </summary>
    public sealed partial class OperationTrade : pb::IMessage<OperationTrade>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<OperationTrade> _parser = new pb::MessageParser<OperationTrade>(() => new OperationTrade());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<OperationTrade> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OperationTrade()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OperationTrade(OperationTrade other) : this()
        {
            tradeId_ = other.tradeId_;
            dateTime_ = other.dateTime_ != null ? other.dateTime_.Clone() : null;
            quantity_ = other.quantity_;
            price_ = other.price_ != null ? other.price_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OperationTrade Clone()
        {
            return new OperationTrade(this);
        }

        /// <summary>Field number for the "trade_id" field.</summary>
        public const int TradeIdFieldNumber = 1;
        private string tradeId_ = "";
        /// <summary>
        ///Идентификатор сделки.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string TradeId
        {
            get { return tradeId_; }
            set
            {
                tradeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "date_time" field.</summary>
        public const int DateTimeFieldNumber = 2;
        private global::Google.Protobuf.WellKnownTypes.Timestamp dateTime_;
        /// <summary>
        ///Дата и время сделки в часовом поясе UTC.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp DateTime
        {
            get { return dateTime_; }
            set
            {
                dateTime_ = value;
            }
        }

        /// <summary>Field number for the "quantity" field.</summary>
        public const int QuantityFieldNumber = 3;
        private long quantity_;
        /// <summary>
        ///Количество инструментов.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long Quantity
        {
            get { return quantity_; }
            set
            {
                quantity_ = value;
            }
        }

        /// <summary>Field number for the "price" field.</summary>
        public const int PriceFieldNumber = 4;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue price_;
        /// <summary>
        ///Цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue Price
        {
            get { return price_; }
            set
            {
                price_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as OperationTrade);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(OperationTrade other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (TradeId != other.TradeId) return false;
            if (!object.Equals(DateTime, other.DateTime)) return false;
            if (Quantity != other.Quantity) return false;
            if (!object.Equals(Price, other.Price)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (TradeId.Length != 0) hash ^= TradeId.GetHashCode();
            if (dateTime_ != null) hash ^= DateTime.GetHashCode();
            if (Quantity != 0L) hash ^= Quantity.GetHashCode();
            if (price_ != null) hash ^= Price.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (TradeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TradeId);
      }
      if (dateTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DateTime);
      }
      if (Quantity != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Quantity);
      }
      if (price_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Price);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (TradeId.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(TradeId);
            }
            if (dateTime_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(DateTime);
            }
            if (Quantity != 0L)
            {
                output.WriteRawTag(24);
                output.WriteInt64(Quantity);
            }
            if (price_ != null)
            {
                output.WriteRawTag(34);
                output.WriteMessage(Price);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (TradeId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(TradeId);
            }
            if (dateTime_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateTime);
            }
            if (Quantity != 0L)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(Quantity);
            }
            if (price_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Price);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(OperationTrade other)
        {
            if (other == null)
            {
                return;
            }
            if (other.TradeId.Length != 0)
            {
                TradeId = other.TradeId;
            }
            if (other.dateTime_ != null)
            {
                if (dateTime_ == null)
                {
                    DateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                DateTime.MergeFrom(other.DateTime);
            }
            if (other.Quantity != 0L)
            {
                Quantity = other.Quantity;
            }
            if (other.price_ != null)
            {
                if (price_ == null)
                {
                    Price = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                Price.MergeFrom(other.Price);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TradeId = input.ReadString();
            break;
          }
          case 18: {
            if (dateTime_ == null) {
              DateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DateTime);
            break;
          }
          case 24: {
            Quantity = input.ReadInt64();
            break;
          }
          case 34: {
            if (price_ == null) {
              Price = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(Price);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            TradeId = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            if (dateTime_ == null)
                            {
                                DateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                            }
                            input.ReadMessage(DateTime);
                            break;
                        }
                    case 24:
                        {
                            Quantity = input.ReadInt64();
                            break;
                        }
                    case 34:
                        {
                            if (price_ == null)
                            {
                                Price = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(Price);
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Запрос получения текущего портфеля по счёту.
    /// </summary>
    public sealed partial class PortfolioRequest : pb::IMessage<PortfolioRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<PortfolioRequest> _parser = new pb::MessageParser<PortfolioRequest>(() => new PortfolioRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PortfolioRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PortfolioRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PortfolioRequest(PortfolioRequest other) : this()
        {
            accountId_ = other.accountId_;
            currency_ = other.currency_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PortfolioRequest Clone()
        {
            return new PortfolioRequest(this);
        }

        /// <summary>Field number for the "account_id" field.</summary>
        public const int AccountIdFieldNumber = 1;
        private string accountId_ = "";
        /// <summary>
        ///Идентификатор счёта пользователя.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AccountId
        {
            get { return accountId_; }
            set
            {
                accountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "currency" field.</summary>
        public const int CurrencyFieldNumber = 2;
        private global::Tinkoff.Proto.InvestApi.V1.PortfolioRequest.Types.CurrencyRequest currency_ = global::Tinkoff.Proto.InvestApi.V1.PortfolioRequest.Types.CurrencyRequest.Rub;
        /// <summary>
        ///Валюта, в которой требуется рассчитать портфель
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.PortfolioRequest.Types.CurrencyRequest Currency
        {
            get { return currency_; }
            set
            {
                currency_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as PortfolioRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PortfolioRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (AccountId != other.AccountId) return false;
            if (Currency != other.Currency) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (AccountId.Length != 0) hash ^= AccountId.GetHashCode();
            if (Currency != global::Tinkoff.Proto.InvestApi.V1.PortfolioRequest.Types.CurrencyRequest.Rub) hash ^= Currency.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (AccountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountId);
      }
      if (Currency != global::Tinkoff.Proto.InvestApi.V1.PortfolioRequest.Types.CurrencyRequest.Rub) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Currency);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (AccountId.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(AccountId);
            }
            if (Currency != global::Tinkoff.Proto.InvestApi.V1.PortfolioRequest.Types.CurrencyRequest.Rub)
            {
                output.WriteRawTag(16);
                output.WriteEnum((int)Currency);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (AccountId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountId);
            }
            if (Currency != global::Tinkoff.Proto.InvestApi.V1.PortfolioRequest.Types.CurrencyRequest.Rub)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Currency);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PortfolioRequest other)
        {
            if (other == null)
            {
                return;
            }
            if (other.AccountId.Length != 0)
            {
                AccountId = other.AccountId;
            }
            if (other.Currency != global::Tinkoff.Proto.InvestApi.V1.PortfolioRequest.Types.CurrencyRequest.Rub)
            {
                Currency = other.Currency;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountId = input.ReadString();
            break;
          }
          case 16: {
            Currency = (global::Tinkoff.Proto.InvestApi.V1.PortfolioRequest.Types.CurrencyRequest) input.ReadEnum();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            AccountId = input.ReadString();
                            break;
                        }
                    case 16:
                        {
                            Currency = (global::Tinkoff.Proto.InvestApi.V1.PortfolioRequest.Types.CurrencyRequest)input.ReadEnum();
                            break;
                        }
                }
            }
        }
#endif

        #region Nested types
        /// <summary>Container for nested types declared in the PortfolioRequest message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types
        {
            public enum CurrencyRequest
            {
                /// <summary>
                ///Рубли
                /// </summary>
                [pbr::OriginalName("RUB")] Rub = 0,
                /// <summary>
                ///Доллары
                /// </summary>
                [pbr::OriginalName("USD")] Usd = 1,
                /// <summary>
                ///Евро
                /// </summary>
                [pbr::OriginalName("EUR")] Eur = 2,
            }

        }
        #endregion

    }

    /// <summary>
    ///Текущий портфель по счёту.
    /// </summary>
    public sealed partial class PortfolioResponse : pb::IMessage<PortfolioResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<PortfolioResponse> _parser = new pb::MessageParser<PortfolioResponse>(() => new PortfolioResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PortfolioResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PortfolioResponse()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PortfolioResponse(PortfolioResponse other) : this()
        {
            totalAmountShares_ = other.totalAmountShares_ != null ? other.totalAmountShares_.Clone() : null;
            totalAmountBonds_ = other.totalAmountBonds_ != null ? other.totalAmountBonds_.Clone() : null;
            totalAmountEtf_ = other.totalAmountEtf_ != null ? other.totalAmountEtf_.Clone() : null;
            totalAmountCurrencies_ = other.totalAmountCurrencies_ != null ? other.totalAmountCurrencies_.Clone() : null;
            totalAmountFutures_ = other.totalAmountFutures_ != null ? other.totalAmountFutures_.Clone() : null;
            expectedYield_ = other.expectedYield_ != null ? other.expectedYield_.Clone() : null;
            positions_ = other.positions_.Clone();
            accountId_ = other.accountId_;
            totalAmountOptions_ = other.totalAmountOptions_ != null ? other.totalAmountOptions_.Clone() : null;
            totalAmountSp_ = other.totalAmountSp_ != null ? other.totalAmountSp_.Clone() : null;
            totalAmountPortfolio_ = other.totalAmountPortfolio_ != null ? other.totalAmountPortfolio_.Clone() : null;
            virtualPositions_ = other.virtualPositions_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PortfolioResponse Clone()
        {
            return new PortfolioResponse(this);
        }

        /// <summary>Field number for the "total_amount_shares" field.</summary>
        public const int TotalAmountSharesFieldNumber = 1;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue totalAmountShares_;
        /// <summary>
        ///Общая стоимость акций в портфеле.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue TotalAmountShares
        {
            get { return totalAmountShares_; }
            set
            {
                totalAmountShares_ = value;
            }
        }

        /// <summary>Field number for the "total_amount_bonds" field.</summary>
        public const int TotalAmountBondsFieldNumber = 2;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue totalAmountBonds_;
        /// <summary>
        ///Общая стоимость облигаций в портфеле.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue TotalAmountBonds
        {
            get { return totalAmountBonds_; }
            set
            {
                totalAmountBonds_ = value;
            }
        }

        /// <summary>Field number for the "total_amount_etf" field.</summary>
        public const int TotalAmountEtfFieldNumber = 3;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue totalAmountEtf_;
        /// <summary>
        ///Общая стоимость фондов в портфеле.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue TotalAmountEtf
        {
            get { return totalAmountEtf_; }
            set
            {
                totalAmountEtf_ = value;
            }
        }

        /// <summary>Field number for the "total_amount_currencies" field.</summary>
        public const int TotalAmountCurrenciesFieldNumber = 4;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue totalAmountCurrencies_;
        /// <summary>
        ///Общая стоимость валют в портфеле.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue TotalAmountCurrencies
        {
            get { return totalAmountCurrencies_; }
            set
            {
                totalAmountCurrencies_ = value;
            }
        }

        /// <summary>Field number for the "total_amount_futures" field.</summary>
        public const int TotalAmountFuturesFieldNumber = 5;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue totalAmountFutures_;
        /// <summary>
        ///Общая стоимость фьючерсов в портфеле.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue TotalAmountFutures
        {
            get { return totalAmountFutures_; }
            set
            {
                totalAmountFutures_ = value;
            }
        }

        /// <summary>Field number for the "expected_yield" field.</summary>
        public const int ExpectedYieldFieldNumber = 6;
        private global::Tinkoff.Proto.InvestApi.V1.Quotation expectedYield_;
        /// <summary>
        ///Текущая относительная доходность портфеля, в %.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.Quotation ExpectedYield
        {
            get { return expectedYield_; }
            set
            {
                expectedYield_ = value;
            }
        }

        /// <summary>Field number for the "positions" field.</summary>
        public const int PositionsFieldNumber = 7;
        private static readonly pb::FieldCodec<global::Tinkoff.Proto.InvestApi.V1.PortfolioPosition> _repeated_positions_codec
            = pb::FieldCodec.ForMessage(58, global::Tinkoff.Proto.InvestApi.V1.PortfolioPosition.Parser);
        private readonly pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PortfolioPosition> positions_ = new pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PortfolioPosition>();
        /// <summary>
        ///Список позиций портфеля.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PortfolioPosition> Positions
        {
            get { return positions_; }
        }

        /// <summary>Field number for the "account_id" field.</summary>
        public const int AccountIdFieldNumber = 8;
        private string accountId_ = "";
        /// <summary>
        ///Идентификатор счёта пользователя.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AccountId
        {
            get { return accountId_; }
            set
            {
                accountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "total_amount_options" field.</summary>
        public const int TotalAmountOptionsFieldNumber = 9;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue totalAmountOptions_;
        /// <summary>
        ///Общая стоимость опционов в портфеле.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue TotalAmountOptions
        {
            get { return totalAmountOptions_; }
            set
            {
                totalAmountOptions_ = value;
            }
        }

        /// <summary>Field number for the "total_amount_sp" field.</summary>
        public const int TotalAmountSpFieldNumber = 10;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue totalAmountSp_;
        /// <summary>
        ///Общая стоимость структурных нот в портфеле.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue TotalAmountSp
        {
            get { return totalAmountSp_; }
            set
            {
                totalAmountSp_ = value;
            }
        }

        /// <summary>Field number for the "total_amount_portfolio" field.</summary>
        public const int TotalAmountPortfolioFieldNumber = 11;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue totalAmountPortfolio_;
        /// <summary>
        ///Общая стоимость портфеля.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue TotalAmountPortfolio
        {
            get { return totalAmountPortfolio_; }
            set
            {
                totalAmountPortfolio_ = value;
            }
        }

        /// <summary>Field number for the "virtual_positions" field.</summary>
        public const int VirtualPositionsFieldNumber = 12;
        private static readonly pb::FieldCodec<global::Tinkoff.Proto.InvestApi.V1.VirtualPortfolioPosition> _repeated_virtualPositions_codec
            = pb::FieldCodec.ForMessage(98, global::Tinkoff.Proto.InvestApi.V1.VirtualPortfolioPosition.Parser);
        private readonly pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.VirtualPortfolioPosition> virtualPositions_ = new pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.VirtualPortfolioPosition>();
        /// <summary>
        ///Массив виртуальных позиций портфеля.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.VirtualPortfolioPosition> VirtualPositions
        {
            get { return virtualPositions_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as PortfolioResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PortfolioResponse other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(TotalAmountShares, other.TotalAmountShares)) return false;
            if (!object.Equals(TotalAmountBonds, other.TotalAmountBonds)) return false;
            if (!object.Equals(TotalAmountEtf, other.TotalAmountEtf)) return false;
            if (!object.Equals(TotalAmountCurrencies, other.TotalAmountCurrencies)) return false;
            if (!object.Equals(TotalAmountFutures, other.TotalAmountFutures)) return false;
            if (!object.Equals(ExpectedYield, other.ExpectedYield)) return false;
            if (!positions_.Equals(other.positions_)) return false;
            if (AccountId != other.AccountId) return false;
            if (!object.Equals(TotalAmountOptions, other.TotalAmountOptions)) return false;
            if (!object.Equals(TotalAmountSp, other.TotalAmountSp)) return false;
            if (!object.Equals(TotalAmountPortfolio, other.TotalAmountPortfolio)) return false;
            if (!virtualPositions_.Equals(other.virtualPositions_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (totalAmountShares_ != null) hash ^= TotalAmountShares.GetHashCode();
            if (totalAmountBonds_ != null) hash ^= TotalAmountBonds.GetHashCode();
            if (totalAmountEtf_ != null) hash ^= TotalAmountEtf.GetHashCode();
            if (totalAmountCurrencies_ != null) hash ^= TotalAmountCurrencies.GetHashCode();
            if (totalAmountFutures_ != null) hash ^= TotalAmountFutures.GetHashCode();
            if (expectedYield_ != null) hash ^= ExpectedYield.GetHashCode();
            hash ^= positions_.GetHashCode();
            if (AccountId.Length != 0) hash ^= AccountId.GetHashCode();
            if (totalAmountOptions_ != null) hash ^= TotalAmountOptions.GetHashCode();
            if (totalAmountSp_ != null) hash ^= TotalAmountSp.GetHashCode();
            if (totalAmountPortfolio_ != null) hash ^= TotalAmountPortfolio.GetHashCode();
            hash ^= virtualPositions_.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (totalAmountShares_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TotalAmountShares);
      }
      if (totalAmountBonds_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TotalAmountBonds);
      }
      if (totalAmountEtf_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TotalAmountEtf);
      }
      if (totalAmountCurrencies_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TotalAmountCurrencies);
      }
      if (totalAmountFutures_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(TotalAmountFutures);
      }
      if (expectedYield_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ExpectedYield);
      }
      positions_.WriteTo(output, _repeated_positions_codec);
      if (AccountId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(AccountId);
      }
      if (totalAmountOptions_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(TotalAmountOptions);
      }
      if (totalAmountSp_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(TotalAmountSp);
      }
      if (totalAmountPortfolio_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(TotalAmountPortfolio);
      }
      virtualPositions_.WriteTo(output, _repeated_virtualPositions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (totalAmountShares_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(TotalAmountShares);
            }
            if (totalAmountBonds_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(TotalAmountBonds);
            }
            if (totalAmountEtf_ != null)
            {
                output.WriteRawTag(26);
                output.WriteMessage(TotalAmountEtf);
            }
            if (totalAmountCurrencies_ != null)
            {
                output.WriteRawTag(34);
                output.WriteMessage(TotalAmountCurrencies);
            }
            if (totalAmountFutures_ != null)
            {
                output.WriteRawTag(42);
                output.WriteMessage(TotalAmountFutures);
            }
            if (expectedYield_ != null)
            {
                output.WriteRawTag(50);
                output.WriteMessage(ExpectedYield);
            }
            positions_.WriteTo(ref output, _repeated_positions_codec);
            if (AccountId.Length != 0)
            {
                output.WriteRawTag(66);
                output.WriteString(AccountId);
            }
            if (totalAmountOptions_ != null)
            {
                output.WriteRawTag(74);
                output.WriteMessage(TotalAmountOptions);
            }
            if (totalAmountSp_ != null)
            {
                output.WriteRawTag(82);
                output.WriteMessage(TotalAmountSp);
            }
            if (totalAmountPortfolio_ != null)
            {
                output.WriteRawTag(90);
                output.WriteMessage(TotalAmountPortfolio);
            }
            virtualPositions_.WriteTo(ref output, _repeated_virtualPositions_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (totalAmountShares_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(TotalAmountShares);
            }
            if (totalAmountBonds_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(TotalAmountBonds);
            }
            if (totalAmountEtf_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(TotalAmountEtf);
            }
            if (totalAmountCurrencies_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(TotalAmountCurrencies);
            }
            if (totalAmountFutures_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(TotalAmountFutures);
            }
            if (expectedYield_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpectedYield);
            }
            size += positions_.CalculateSize(_repeated_positions_codec);
            if (AccountId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountId);
            }
            if (totalAmountOptions_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(TotalAmountOptions);
            }
            if (totalAmountSp_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(TotalAmountSp);
            }
            if (totalAmountPortfolio_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(TotalAmountPortfolio);
            }
            size += virtualPositions_.CalculateSize(_repeated_virtualPositions_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PortfolioResponse other)
        {
            if (other == null)
            {
                return;
            }
            if (other.totalAmountShares_ != null)
            {
                if (totalAmountShares_ == null)
                {
                    TotalAmountShares = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                TotalAmountShares.MergeFrom(other.TotalAmountShares);
            }
            if (other.totalAmountBonds_ != null)
            {
                if (totalAmountBonds_ == null)
                {
                    TotalAmountBonds = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                TotalAmountBonds.MergeFrom(other.TotalAmountBonds);
            }
            if (other.totalAmountEtf_ != null)
            {
                if (totalAmountEtf_ == null)
                {
                    TotalAmountEtf = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                TotalAmountEtf.MergeFrom(other.TotalAmountEtf);
            }
            if (other.totalAmountCurrencies_ != null)
            {
                if (totalAmountCurrencies_ == null)
                {
                    TotalAmountCurrencies = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                TotalAmountCurrencies.MergeFrom(other.TotalAmountCurrencies);
            }
            if (other.totalAmountFutures_ != null)
            {
                if (totalAmountFutures_ == null)
                {
                    TotalAmountFutures = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                TotalAmountFutures.MergeFrom(other.TotalAmountFutures);
            }
            if (other.expectedYield_ != null)
            {
                if (expectedYield_ == null)
                {
                    ExpectedYield = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                }
                ExpectedYield.MergeFrom(other.ExpectedYield);
            }
            positions_.Add(other.positions_);
            if (other.AccountId.Length != 0)
            {
                AccountId = other.AccountId;
            }
            if (other.totalAmountOptions_ != null)
            {
                if (totalAmountOptions_ == null)
                {
                    TotalAmountOptions = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                TotalAmountOptions.MergeFrom(other.TotalAmountOptions);
            }
            if (other.totalAmountSp_ != null)
            {
                if (totalAmountSp_ == null)
                {
                    TotalAmountSp = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                TotalAmountSp.MergeFrom(other.TotalAmountSp);
            }
            if (other.totalAmountPortfolio_ != null)
            {
                if (totalAmountPortfolio_ == null)
                {
                    TotalAmountPortfolio = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                TotalAmountPortfolio.MergeFrom(other.TotalAmountPortfolio);
            }
            virtualPositions_.Add(other.virtualPositions_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (totalAmountShares_ == null) {
              TotalAmountShares = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(TotalAmountShares);
            break;
          }
          case 18: {
            if (totalAmountBonds_ == null) {
              TotalAmountBonds = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(TotalAmountBonds);
            break;
          }
          case 26: {
            if (totalAmountEtf_ == null) {
              TotalAmountEtf = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(TotalAmountEtf);
            break;
          }
          case 34: {
            if (totalAmountCurrencies_ == null) {
              TotalAmountCurrencies = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(TotalAmountCurrencies);
            break;
          }
          case 42: {
            if (totalAmountFutures_ == null) {
              TotalAmountFutures = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(TotalAmountFutures);
            break;
          }
          case 50: {
            if (expectedYield_ == null) {
              ExpectedYield = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
            }
            input.ReadMessage(ExpectedYield);
            break;
          }
          case 58: {
            positions_.AddEntriesFrom(input, _repeated_positions_codec);
            break;
          }
          case 66: {
            AccountId = input.ReadString();
            break;
          }
          case 74: {
            if (totalAmountOptions_ == null) {
              TotalAmountOptions = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(TotalAmountOptions);
            break;
          }
          case 82: {
            if (totalAmountSp_ == null) {
              TotalAmountSp = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(TotalAmountSp);
            break;
          }
          case 90: {
            if (totalAmountPortfolio_ == null) {
              TotalAmountPortfolio = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(TotalAmountPortfolio);
            break;
          }
          case 98: {
            virtualPositions_.AddEntriesFrom(input, _repeated_virtualPositions_codec);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            if (totalAmountShares_ == null)
                            {
                                TotalAmountShares = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(TotalAmountShares);
                            break;
                        }
                    case 18:
                        {
                            if (totalAmountBonds_ == null)
                            {
                                TotalAmountBonds = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(TotalAmountBonds);
                            break;
                        }
                    case 26:
                        {
                            if (totalAmountEtf_ == null)
                            {
                                TotalAmountEtf = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(TotalAmountEtf);
                            break;
                        }
                    case 34:
                        {
                            if (totalAmountCurrencies_ == null)
                            {
                                TotalAmountCurrencies = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(TotalAmountCurrencies);
                            break;
                        }
                    case 42:
                        {
                            if (totalAmountFutures_ == null)
                            {
                                TotalAmountFutures = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(TotalAmountFutures);
                            break;
                        }
                    case 50:
                        {
                            if (expectedYield_ == null)
                            {
                                ExpectedYield = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                            }
                            input.ReadMessage(ExpectedYield);
                            break;
                        }
                    case 58:
                        {
                            positions_.AddEntriesFrom(ref input, _repeated_positions_codec);
                            break;
                        }
                    case 66:
                        {
                            AccountId = input.ReadString();
                            break;
                        }
                    case 74:
                        {
                            if (totalAmountOptions_ == null)
                            {
                                TotalAmountOptions = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(TotalAmountOptions);
                            break;
                        }
                    case 82:
                        {
                            if (totalAmountSp_ == null)
                            {
                                TotalAmountSp = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(TotalAmountSp);
                            break;
                        }
                    case 90:
                        {
                            if (totalAmountPortfolio_ == null)
                            {
                                TotalAmountPortfolio = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(TotalAmountPortfolio);
                            break;
                        }
                    case 98:
                        {
                            virtualPositions_.AddEntriesFrom(ref input, _repeated_virtualPositions_codec);
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Запрос позиций портфеля по счёту.
    /// </summary>
    public sealed partial class PositionsRequest : pb::IMessage<PositionsRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<PositionsRequest> _parser = new pb::MessageParser<PositionsRequest>(() => new PositionsRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PositionsRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsRequest(PositionsRequest other) : this()
        {
            accountId_ = other.accountId_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsRequest Clone()
        {
            return new PositionsRequest(this);
        }

        /// <summary>Field number for the "account_id" field.</summary>
        public const int AccountIdFieldNumber = 1;
        private string accountId_ = "";
        /// <summary>
        ///Идентификатор счёта пользователя.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AccountId
        {
            get { return accountId_; }
            set
            {
                accountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as PositionsRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PositionsRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (AccountId != other.AccountId) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (AccountId.Length != 0) hash ^= AccountId.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (AccountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (AccountId.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(AccountId);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (AccountId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountId);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PositionsRequest other)
        {
            if (other == null)
            {
                return;
            }
            if (other.AccountId.Length != 0)
            {
                AccountId = other.AccountId;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountId = input.ReadString();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            AccountId = input.ReadString();
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Список позиций по счёту.
    /// </summary>
    public sealed partial class PositionsResponse : pb::IMessage<PositionsResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<PositionsResponse> _parser = new pb::MessageParser<PositionsResponse>(() => new PositionsResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PositionsResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsResponse()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsResponse(PositionsResponse other) : this()
        {
            money_ = other.money_.Clone();
            blocked_ = other.blocked_.Clone();
            securities_ = other.securities_.Clone();
            limitsLoadingInProgress_ = other.limitsLoadingInProgress_;
            futures_ = other.futures_.Clone();
            options_ = other.options_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsResponse Clone()
        {
            return new PositionsResponse(this);
        }

        /// <summary>Field number for the "money" field.</summary>
        public const int MoneyFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Tinkoff.Proto.InvestApi.V1.MoneyValue> _repeated_money_codec
            = pb::FieldCodec.ForMessage(10, global::Tinkoff.Proto.InvestApi.V1.MoneyValue.Parser);
        private readonly pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.MoneyValue> money_ = new pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.MoneyValue>();
        /// <summary>
        ///Массив валютных позиций портфеля.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.MoneyValue> Money
        {
            get { return money_; }
        }

        /// <summary>Field number for the "blocked" field.</summary>
        public const int BlockedFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Tinkoff.Proto.InvestApi.V1.MoneyValue> _repeated_blocked_codec
            = pb::FieldCodec.ForMessage(18, global::Tinkoff.Proto.InvestApi.V1.MoneyValue.Parser);
        private readonly pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.MoneyValue> blocked_ = new pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.MoneyValue>();
        /// <summary>
        ///Массив заблокированных валютных позиций портфеля.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.MoneyValue> Blocked
        {
            get { return blocked_; }
        }

        /// <summary>Field number for the "securities" field.</summary>
        public const int SecuritiesFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Tinkoff.Proto.InvestApi.V1.PositionsSecurities> _repeated_securities_codec
            = pb::FieldCodec.ForMessage(26, global::Tinkoff.Proto.InvestApi.V1.PositionsSecurities.Parser);
        private readonly pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PositionsSecurities> securities_ = new pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PositionsSecurities>();
        /// <summary>
        ///Список ценно-бумажных позиций портфеля.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PositionsSecurities> Securities
        {
            get { return securities_; }
        }

        /// <summary>Field number for the "limits_loading_in_progress" field.</summary>
        public const int LimitsLoadingInProgressFieldNumber = 4;
        private bool limitsLoadingInProgress_;
        /// <summary>
        ///Признак идущей в данный момент выгрузки лимитов.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool LimitsLoadingInProgress
        {
            get { return limitsLoadingInProgress_; }
            set
            {
                limitsLoadingInProgress_ = value;
            }
        }

        /// <summary>Field number for the "futures" field.</summary>
        public const int FuturesFieldNumber = 5;
        private static readonly pb::FieldCodec<global::Tinkoff.Proto.InvestApi.V1.PositionsFutures> _repeated_futures_codec
            = pb::FieldCodec.ForMessage(42, global::Tinkoff.Proto.InvestApi.V1.PositionsFutures.Parser);
        private readonly pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PositionsFutures> futures_ = new pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PositionsFutures>();
        /// <summary>
        ///Список фьючерсов портфеля.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PositionsFutures> Futures
        {
            get { return futures_; }
        }

        /// <summary>Field number for the "options" field.</summary>
        public const int OptionsFieldNumber = 6;
        private static readonly pb::FieldCodec<global::Tinkoff.Proto.InvestApi.V1.PositionsOptions> _repeated_options_codec
            = pb::FieldCodec.ForMessage(50, global::Tinkoff.Proto.InvestApi.V1.PositionsOptions.Parser);
        private readonly pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PositionsOptions> options_ = new pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PositionsOptions>();
        /// <summary>
        ///Список опционов портфеля.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PositionsOptions> Options
        {
            get { return options_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as PositionsResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PositionsResponse other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!money_.Equals(other.money_)) return false;
            if (!blocked_.Equals(other.blocked_)) return false;
            if (!securities_.Equals(other.securities_)) return false;
            if (LimitsLoadingInProgress != other.LimitsLoadingInProgress) return false;
            if (!futures_.Equals(other.futures_)) return false;
            if (!options_.Equals(other.options_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= money_.GetHashCode();
            hash ^= blocked_.GetHashCode();
            hash ^= securities_.GetHashCode();
            if (LimitsLoadingInProgress != false) hash ^= LimitsLoadingInProgress.GetHashCode();
            hash ^= futures_.GetHashCode();
            hash ^= options_.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      money_.WriteTo(output, _repeated_money_codec);
      blocked_.WriteTo(output, _repeated_blocked_codec);
      securities_.WriteTo(output, _repeated_securities_codec);
      if (LimitsLoadingInProgress != false) {
        output.WriteRawTag(32);
        output.WriteBool(LimitsLoadingInProgress);
      }
      futures_.WriteTo(output, _repeated_futures_codec);
      options_.WriteTo(output, _repeated_options_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            money_.WriteTo(ref output, _repeated_money_codec);
            blocked_.WriteTo(ref output, _repeated_blocked_codec);
            securities_.WriteTo(ref output, _repeated_securities_codec);
            if (LimitsLoadingInProgress != false)
            {
                output.WriteRawTag(32);
                output.WriteBool(LimitsLoadingInProgress);
            }
            futures_.WriteTo(ref output, _repeated_futures_codec);
            options_.WriteTo(ref output, _repeated_options_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            size += money_.CalculateSize(_repeated_money_codec);
            size += blocked_.CalculateSize(_repeated_blocked_codec);
            size += securities_.CalculateSize(_repeated_securities_codec);
            if (LimitsLoadingInProgress != false)
            {
                size += 1 + 1;
            }
            size += futures_.CalculateSize(_repeated_futures_codec);
            size += options_.CalculateSize(_repeated_options_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PositionsResponse other)
        {
            if (other == null)
            {
                return;
            }
            money_.Add(other.money_);
            blocked_.Add(other.blocked_);
            securities_.Add(other.securities_);
            if (other.LimitsLoadingInProgress != false)
            {
                LimitsLoadingInProgress = other.LimitsLoadingInProgress;
            }
            futures_.Add(other.futures_);
            options_.Add(other.options_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            money_.AddEntriesFrom(input, _repeated_money_codec);
            break;
          }
          case 18: {
            blocked_.AddEntriesFrom(input, _repeated_blocked_codec);
            break;
          }
          case 26: {
            securities_.AddEntriesFrom(input, _repeated_securities_codec);
            break;
          }
          case 32: {
            LimitsLoadingInProgress = input.ReadBool();
            break;
          }
          case 42: {
            futures_.AddEntriesFrom(input, _repeated_futures_codec);
            break;
          }
          case 50: {
            options_.AddEntriesFrom(input, _repeated_options_codec);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            money_.AddEntriesFrom(ref input, _repeated_money_codec);
                            break;
                        }
                    case 18:
                        {
                            blocked_.AddEntriesFrom(ref input, _repeated_blocked_codec);
                            break;
                        }
                    case 26:
                        {
                            securities_.AddEntriesFrom(ref input, _repeated_securities_codec);
                            break;
                        }
                    case 32:
                        {
                            LimitsLoadingInProgress = input.ReadBool();
                            break;
                        }
                    case 42:
                        {
                            futures_.AddEntriesFrom(ref input, _repeated_futures_codec);
                            break;
                        }
                    case 50:
                        {
                            options_.AddEntriesFrom(ref input, _repeated_options_codec);
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Запрос доступного для вывода остатка.
    /// </summary>
    public sealed partial class WithdrawLimitsRequest : pb::IMessage<WithdrawLimitsRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<WithdrawLimitsRequest> _parser = new pb::MessageParser<WithdrawLimitsRequest>(() => new WithdrawLimitsRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<WithdrawLimitsRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public WithdrawLimitsRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public WithdrawLimitsRequest(WithdrawLimitsRequest other) : this()
        {
            accountId_ = other.accountId_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public WithdrawLimitsRequest Clone()
        {
            return new WithdrawLimitsRequest(this);
        }

        /// <summary>Field number for the "account_id" field.</summary>
        public const int AccountIdFieldNumber = 1;
        private string accountId_ = "";
        /// <summary>
        ///Идентификатор счёта пользователя.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AccountId
        {
            get { return accountId_; }
            set
            {
                accountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as WithdrawLimitsRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(WithdrawLimitsRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (AccountId != other.AccountId) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (AccountId.Length != 0) hash ^= AccountId.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (AccountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (AccountId.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(AccountId);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (AccountId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountId);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(WithdrawLimitsRequest other)
        {
            if (other == null)
            {
                return;
            }
            if (other.AccountId.Length != 0)
            {
                AccountId = other.AccountId;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountId = input.ReadString();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            AccountId = input.ReadString();
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Доступный для вывода остаток.
    /// </summary>
    public sealed partial class WithdrawLimitsResponse : pb::IMessage<WithdrawLimitsResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<WithdrawLimitsResponse> _parser = new pb::MessageParser<WithdrawLimitsResponse>(() => new WithdrawLimitsResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<WithdrawLimitsResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public WithdrawLimitsResponse()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public WithdrawLimitsResponse(WithdrawLimitsResponse other) : this()
        {
            money_ = other.money_.Clone();
            blocked_ = other.blocked_.Clone();
            blockedGuarantee_ = other.blockedGuarantee_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public WithdrawLimitsResponse Clone()
        {
            return new WithdrawLimitsResponse(this);
        }

        /// <summary>Field number for the "money" field.</summary>
        public const int MoneyFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Tinkoff.Proto.InvestApi.V1.MoneyValue> _repeated_money_codec
            = pb::FieldCodec.ForMessage(10, global::Tinkoff.Proto.InvestApi.V1.MoneyValue.Parser);
        private readonly pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.MoneyValue> money_ = new pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.MoneyValue>();
        /// <summary>
        ///Массив валютных позиций портфеля.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.MoneyValue> Money
        {
            get { return money_; }
        }

        /// <summary>Field number for the "blocked" field.</summary>
        public const int BlockedFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Tinkoff.Proto.InvestApi.V1.MoneyValue> _repeated_blocked_codec
            = pb::FieldCodec.ForMessage(18, global::Tinkoff.Proto.InvestApi.V1.MoneyValue.Parser);
        private readonly pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.MoneyValue> blocked_ = new pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.MoneyValue>();
        /// <summary>
        ///Массив заблокированных валютных позиций портфеля.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.MoneyValue> Blocked
        {
            get { return blocked_; }
        }

        /// <summary>Field number for the "blocked_guarantee" field.</summary>
        public const int BlockedGuaranteeFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Tinkoff.Proto.InvestApi.V1.MoneyValue> _repeated_blockedGuarantee_codec
            = pb::FieldCodec.ForMessage(26, global::Tinkoff.Proto.InvestApi.V1.MoneyValue.Parser);
        private readonly pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.MoneyValue> blockedGuarantee_ = new pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.MoneyValue>();
        /// <summary>
        ///Заблокировано под гарантийное обеспечение фьючерсов.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.MoneyValue> BlockedGuarantee
        {
            get { return blockedGuarantee_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as WithdrawLimitsResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(WithdrawLimitsResponse other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!money_.Equals(other.money_)) return false;
            if (!blocked_.Equals(other.blocked_)) return false;
            if (!blockedGuarantee_.Equals(other.blockedGuarantee_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= money_.GetHashCode();
            hash ^= blocked_.GetHashCode();
            hash ^= blockedGuarantee_.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      money_.WriteTo(output, _repeated_money_codec);
      blocked_.WriteTo(output, _repeated_blocked_codec);
      blockedGuarantee_.WriteTo(output, _repeated_blockedGuarantee_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            money_.WriteTo(ref output, _repeated_money_codec);
            blocked_.WriteTo(ref output, _repeated_blocked_codec);
            blockedGuarantee_.WriteTo(ref output, _repeated_blockedGuarantee_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            size += money_.CalculateSize(_repeated_money_codec);
            size += blocked_.CalculateSize(_repeated_blocked_codec);
            size += blockedGuarantee_.CalculateSize(_repeated_blockedGuarantee_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(WithdrawLimitsResponse other)
        {
            if (other == null)
            {
                return;
            }
            money_.Add(other.money_);
            blocked_.Add(other.blocked_);
            blockedGuarantee_.Add(other.blockedGuarantee_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            money_.AddEntriesFrom(input, _repeated_money_codec);
            break;
          }
          case 18: {
            blocked_.AddEntriesFrom(input, _repeated_blocked_codec);
            break;
          }
          case 26: {
            blockedGuarantee_.AddEntriesFrom(input, _repeated_blockedGuarantee_codec);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            money_.AddEntriesFrom(ref input, _repeated_money_codec);
                            break;
                        }
                    case 18:
                        {
                            blocked_.AddEntriesFrom(ref input, _repeated_blocked_codec);
                            break;
                        }
                    case 26:
                        {
                            blockedGuarantee_.AddEntriesFrom(ref input, _repeated_blockedGuarantee_codec);
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Позиции портфеля.
    /// </summary>
    public sealed partial class PortfolioPosition : pb::IMessage<PortfolioPosition>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<PortfolioPosition> _parser = new pb::MessageParser<PortfolioPosition>(() => new PortfolioPosition());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PortfolioPosition> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PortfolioPosition()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PortfolioPosition(PortfolioPosition other) : this()
        {
            figi_ = other.figi_;
            instrumentType_ = other.instrumentType_;
            quantity_ = other.quantity_ != null ? other.quantity_.Clone() : null;
            averagePositionPrice_ = other.averagePositionPrice_ != null ? other.averagePositionPrice_.Clone() : null;
            expectedYield_ = other.expectedYield_ != null ? other.expectedYield_.Clone() : null;
            currentNkd_ = other.currentNkd_ != null ? other.currentNkd_.Clone() : null;
            averagePositionPricePt_ = other.averagePositionPricePt_ != null ? other.averagePositionPricePt_.Clone() : null;
            currentPrice_ = other.currentPrice_ != null ? other.currentPrice_.Clone() : null;
            averagePositionPriceFifo_ = other.averagePositionPriceFifo_ != null ? other.averagePositionPriceFifo_.Clone() : null;
            quantityLots_ = other.quantityLots_ != null ? other.quantityLots_.Clone() : null;
            blocked_ = other.blocked_;
            blockedLots_ = other.blockedLots_ != null ? other.blockedLots_.Clone() : null;
            positionUid_ = other.positionUid_;
            instrumentUid_ = other.instrumentUid_;
            varMargin_ = other.varMargin_ != null ? other.varMargin_.Clone() : null;
            expectedYieldFifo_ = other.expectedYieldFifo_ != null ? other.expectedYieldFifo_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PortfolioPosition Clone()
        {
            return new PortfolioPosition(this);
        }

        /// <summary>Field number for the "figi" field.</summary>
        public const int FigiFieldNumber = 1;
        private string figi_ = "";
        /// <summary>
        ///Figi-идентификатора инструмента.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Figi
        {
            get { return figi_; }
            set
            {
                figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "instrument_type" field.</summary>
        public const int InstrumentTypeFieldNumber = 2;
        private string instrumentType_ = "";
        /// <summary>
        ///Тип инструмента.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string InstrumentType
        {
            get { return instrumentType_; }
            set
            {
                instrumentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "quantity" field.</summary>
        public const int QuantityFieldNumber = 3;
        private global::Tinkoff.Proto.InvestApi.V1.Quotation quantity_;
        /// <summary>
        ///Количество инструмента в портфеле в штуках.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.Quotation Quantity
        {
            get { return quantity_; }
            set
            {
                quantity_ = value;
            }
        }

        /// <summary>Field number for the "average_position_price" field.</summary>
        public const int AveragePositionPriceFieldNumber = 4;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue averagePositionPrice_;
        /// <summary>
        ///Средневзвешенная цена позиции. **Возможна задержка до секунды для пересчёта**.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue AveragePositionPrice
        {
            get { return averagePositionPrice_; }
            set
            {
                averagePositionPrice_ = value;
            }
        }

        /// <summary>Field number for the "expected_yield" field.</summary>
        public const int ExpectedYieldFieldNumber = 5;
        private global::Tinkoff.Proto.InvestApi.V1.Quotation expectedYield_;
        /// <summary>
        ///Текущая рассчитанная доходность позиции.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.Quotation ExpectedYield
        {
            get { return expectedYield_; }
            set
            {
                expectedYield_ = value;
            }
        }

        /// <summary>Field number for the "current_nkd" field.</summary>
        public const int CurrentNkdFieldNumber = 6;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue currentNkd_;
        /// <summary>
        /// Текущий НКД.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue CurrentNkd
        {
            get { return currentNkd_; }
            set
            {
                currentNkd_ = value;
            }
        }

        /// <summary>Field number for the "average_position_price_pt" field.</summary>
        public const int AveragePositionPricePtFieldNumber = 7;
        private global::Tinkoff.Proto.InvestApi.V1.Quotation averagePositionPricePt_;
        /// <summary>
        /// Deprecated Средняя цена позиции в пунктах (для фьючерсов). **Возможна задержка до секунды для пересчёта**.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.Quotation AveragePositionPricePt
        {
            get { return averagePositionPricePt_; }
            set
            {
                averagePositionPricePt_ = value;
            }
        }

        /// <summary>Field number for the "current_price" field.</summary>
        public const int CurrentPriceFieldNumber = 8;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue currentPrice_;
        /// <summary>
        ///Текущая цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue CurrentPrice
        {
            get { return currentPrice_; }
            set
            {
                currentPrice_ = value;
            }
        }

        /// <summary>Field number for the "average_position_price_fifo" field.</summary>
        public const int AveragePositionPriceFifoFieldNumber = 9;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue averagePositionPriceFifo_;
        /// <summary>
        ///Средняя цена позиции по методу FIFO. **Возможна задержка до секунды для пересчёта**.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue AveragePositionPriceFifo
        {
            get { return averagePositionPriceFifo_; }
            set
            {
                averagePositionPriceFifo_ = value;
            }
        }

        /// <summary>Field number for the "quantity_lots" field.</summary>
        public const int QuantityLotsFieldNumber = 10;
        private global::Tinkoff.Proto.InvestApi.V1.Quotation quantityLots_;
        /// <summary>
        ///Deprecated Количество лотов в портфеле.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.Quotation QuantityLots
        {
            get { return quantityLots_; }
            set
            {
                quantityLots_ = value;
            }
        }

        /// <summary>Field number for the "blocked" field.</summary>
        public const int BlockedFieldNumber = 21;
        private bool blocked_;
        /// <summary>
        ///Заблокировано на бирже.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Blocked
        {
            get { return blocked_; }
            set
            {
                blocked_ = value;
            }
        }

        /// <summary>Field number for the "blocked_lots" field.</summary>
        public const int BlockedLotsFieldNumber = 22;
        private global::Tinkoff.Proto.InvestApi.V1.Quotation blockedLots_;
        /// <summary>
        ///Количество бумаг, заблокированных выставленными заявками.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.Quotation BlockedLots
        {
            get { return blockedLots_; }
            set
            {
                blockedLots_ = value;
            }
        }

        /// <summary>Field number for the "position_uid" field.</summary>
        public const int PositionUidFieldNumber = 24;
        private string positionUid_ = "";
        /// <summary>
        ///position_uid-идентификатора инструмента
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string PositionUid
        {
            get { return positionUid_; }
            set
            {
                positionUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "instrument_uid" field.</summary>
        public const int InstrumentUidFieldNumber = 25;
        private string instrumentUid_ = "";
        /// <summary>
        ///instrument_uid-идентификатора инструмента
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string InstrumentUid
        {
            get { return instrumentUid_; }
            set
            {
                instrumentUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "var_margin" field.</summary>
        public const int VarMarginFieldNumber = 26;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue varMargin_;
        /// <summary>
        ///Вариационная маржа
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue VarMargin
        {
            get { return varMargin_; }
            set
            {
                varMargin_ = value;
            }
        }

        /// <summary>Field number for the "expected_yield_fifo" field.</summary>
        public const int ExpectedYieldFifoFieldNumber = 27;
        private global::Tinkoff.Proto.InvestApi.V1.Quotation expectedYieldFifo_;
        /// <summary>
        ///Текущая рассчитанная доходность позиции.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.Quotation ExpectedYieldFifo
        {
            get { return expectedYieldFifo_; }
            set
            {
                expectedYieldFifo_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as PortfolioPosition);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PortfolioPosition other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Figi != other.Figi) return false;
            if (InstrumentType != other.InstrumentType) return false;
            if (!object.Equals(Quantity, other.Quantity)) return false;
            if (!object.Equals(AveragePositionPrice, other.AveragePositionPrice)) return false;
            if (!object.Equals(ExpectedYield, other.ExpectedYield)) return false;
            if (!object.Equals(CurrentNkd, other.CurrentNkd)) return false;
            if (!object.Equals(AveragePositionPricePt, other.AveragePositionPricePt)) return false;
            if (!object.Equals(CurrentPrice, other.CurrentPrice)) return false;
            if (!object.Equals(AveragePositionPriceFifo, other.AveragePositionPriceFifo)) return false;
            if (!object.Equals(QuantityLots, other.QuantityLots)) return false;
            if (Blocked != other.Blocked) return false;
            if (!object.Equals(BlockedLots, other.BlockedLots)) return false;
            if (PositionUid != other.PositionUid) return false;
            if (InstrumentUid != other.InstrumentUid) return false;
            if (!object.Equals(VarMargin, other.VarMargin)) return false;
            if (!object.Equals(ExpectedYieldFifo, other.ExpectedYieldFifo)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Figi.Length != 0) hash ^= Figi.GetHashCode();
            if (InstrumentType.Length != 0) hash ^= InstrumentType.GetHashCode();
            if (quantity_ != null) hash ^= Quantity.GetHashCode();
            if (averagePositionPrice_ != null) hash ^= AveragePositionPrice.GetHashCode();
            if (expectedYield_ != null) hash ^= ExpectedYield.GetHashCode();
            if (currentNkd_ != null) hash ^= CurrentNkd.GetHashCode();
            if (averagePositionPricePt_ != null) hash ^= AveragePositionPricePt.GetHashCode();
            if (currentPrice_ != null) hash ^= CurrentPrice.GetHashCode();
            if (averagePositionPriceFifo_ != null) hash ^= AveragePositionPriceFifo.GetHashCode();
            if (quantityLots_ != null) hash ^= QuantityLots.GetHashCode();
            if (Blocked != false) hash ^= Blocked.GetHashCode();
            if (blockedLots_ != null) hash ^= BlockedLots.GetHashCode();
            if (PositionUid.Length != 0) hash ^= PositionUid.GetHashCode();
            if (InstrumentUid.Length != 0) hash ^= InstrumentUid.GetHashCode();
            if (varMargin_ != null) hash ^= VarMargin.GetHashCode();
            if (expectedYieldFifo_ != null) hash ^= ExpectedYieldFifo.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (InstrumentType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InstrumentType);
      }
      if (quantity_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Quantity);
      }
      if (averagePositionPrice_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AveragePositionPrice);
      }
      if (expectedYield_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ExpectedYield);
      }
      if (currentNkd_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CurrentNkd);
      }
      if (averagePositionPricePt_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(AveragePositionPricePt);
      }
      if (currentPrice_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(CurrentPrice);
      }
      if (averagePositionPriceFifo_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(AveragePositionPriceFifo);
      }
      if (quantityLots_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(QuantityLots);
      }
      if (Blocked != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(Blocked);
      }
      if (blockedLots_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(BlockedLots);
      }
      if (PositionUid.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(PositionUid);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(InstrumentUid);
      }
      if (varMargin_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(VarMargin);
      }
      if (expectedYieldFifo_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(ExpectedYieldFifo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (Figi.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Figi);
            }
            if (InstrumentType.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(InstrumentType);
            }
            if (quantity_ != null)
            {
                output.WriteRawTag(26);
                output.WriteMessage(Quantity);
            }
            if (averagePositionPrice_ != null)
            {
                output.WriteRawTag(34);
                output.WriteMessage(AveragePositionPrice);
            }
            if (expectedYield_ != null)
            {
                output.WriteRawTag(42);
                output.WriteMessage(ExpectedYield);
            }
            if (currentNkd_ != null)
            {
                output.WriteRawTag(50);
                output.WriteMessage(CurrentNkd);
            }
            if (averagePositionPricePt_ != null)
            {
                output.WriteRawTag(58);
                output.WriteMessage(AveragePositionPricePt);
            }
            if (currentPrice_ != null)
            {
                output.WriteRawTag(66);
                output.WriteMessage(CurrentPrice);
            }
            if (averagePositionPriceFifo_ != null)
            {
                output.WriteRawTag(74);
                output.WriteMessage(AveragePositionPriceFifo);
            }
            if (quantityLots_ != null)
            {
                output.WriteRawTag(82);
                output.WriteMessage(QuantityLots);
            }
            if (Blocked != false)
            {
                output.WriteRawTag(168, 1);
                output.WriteBool(Blocked);
            }
            if (blockedLots_ != null)
            {
                output.WriteRawTag(178, 1);
                output.WriteMessage(BlockedLots);
            }
            if (PositionUid.Length != 0)
            {
                output.WriteRawTag(194, 1);
                output.WriteString(PositionUid);
            }
            if (InstrumentUid.Length != 0)
            {
                output.WriteRawTag(202, 1);
                output.WriteString(InstrumentUid);
            }
            if (varMargin_ != null)
            {
                output.WriteRawTag(210, 1);
                output.WriteMessage(VarMargin);
            }
            if (expectedYieldFifo_ != null)
            {
                output.WriteRawTag(218, 1);
                output.WriteMessage(ExpectedYieldFifo);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (Figi.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
            }
            if (InstrumentType.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentType);
            }
            if (quantity_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Quantity);
            }
            if (averagePositionPrice_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(AveragePositionPrice);
            }
            if (expectedYield_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpectedYield);
            }
            if (currentNkd_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentNkd);
            }
            if (averagePositionPricePt_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(AveragePositionPricePt);
            }
            if (currentPrice_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentPrice);
            }
            if (averagePositionPriceFifo_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(AveragePositionPriceFifo);
            }
            if (quantityLots_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(QuantityLots);
            }
            if (Blocked != false)
            {
                size += 2 + 1;
            }
            if (blockedLots_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(BlockedLots);
            }
            if (PositionUid.Length != 0)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(PositionUid);
            }
            if (InstrumentUid.Length != 0)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(InstrumentUid);
            }
            if (varMargin_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(VarMargin);
            }
            if (expectedYieldFifo_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(ExpectedYieldFifo);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PortfolioPosition other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Figi.Length != 0)
            {
                Figi = other.Figi;
            }
            if (other.InstrumentType.Length != 0)
            {
                InstrumentType = other.InstrumentType;
            }
            if (other.quantity_ != null)
            {
                if (quantity_ == null)
                {
                    Quantity = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                }
                Quantity.MergeFrom(other.Quantity);
            }
            if (other.averagePositionPrice_ != null)
            {
                if (averagePositionPrice_ == null)
                {
                    AveragePositionPrice = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                AveragePositionPrice.MergeFrom(other.AveragePositionPrice);
            }
            if (other.expectedYield_ != null)
            {
                if (expectedYield_ == null)
                {
                    ExpectedYield = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                }
                ExpectedYield.MergeFrom(other.ExpectedYield);
            }
            if (other.currentNkd_ != null)
            {
                if (currentNkd_ == null)
                {
                    CurrentNkd = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                CurrentNkd.MergeFrom(other.CurrentNkd);
            }
            if (other.averagePositionPricePt_ != null)
            {
                if (averagePositionPricePt_ == null)
                {
                    AveragePositionPricePt = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                }
                AveragePositionPricePt.MergeFrom(other.AveragePositionPricePt);
            }
            if (other.currentPrice_ != null)
            {
                if (currentPrice_ == null)
                {
                    CurrentPrice = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                CurrentPrice.MergeFrom(other.CurrentPrice);
            }
            if (other.averagePositionPriceFifo_ != null)
            {
                if (averagePositionPriceFifo_ == null)
                {
                    AveragePositionPriceFifo = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                AveragePositionPriceFifo.MergeFrom(other.AveragePositionPriceFifo);
            }
            if (other.quantityLots_ != null)
            {
                if (quantityLots_ == null)
                {
                    QuantityLots = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                }
                QuantityLots.MergeFrom(other.QuantityLots);
            }
            if (other.Blocked != false)
            {
                Blocked = other.Blocked;
            }
            if (other.blockedLots_ != null)
            {
                if (blockedLots_ == null)
                {
                    BlockedLots = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                }
                BlockedLots.MergeFrom(other.BlockedLots);
            }
            if (other.PositionUid.Length != 0)
            {
                PositionUid = other.PositionUid;
            }
            if (other.InstrumentUid.Length != 0)
            {
                InstrumentUid = other.InstrumentUid;
            }
            if (other.varMargin_ != null)
            {
                if (varMargin_ == null)
                {
                    VarMargin = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                VarMargin.MergeFrom(other.VarMargin);
            }
            if (other.expectedYieldFifo_ != null)
            {
                if (expectedYieldFifo_ == null)
                {
                    ExpectedYieldFifo = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                }
                ExpectedYieldFifo.MergeFrom(other.ExpectedYieldFifo);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 18: {
            InstrumentType = input.ReadString();
            break;
          }
          case 26: {
            if (quantity_ == null) {
              Quantity = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
            }
            input.ReadMessage(Quantity);
            break;
          }
          case 34: {
            if (averagePositionPrice_ == null) {
              AveragePositionPrice = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(AveragePositionPrice);
            break;
          }
          case 42: {
            if (expectedYield_ == null) {
              ExpectedYield = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
            }
            input.ReadMessage(ExpectedYield);
            break;
          }
          case 50: {
            if (currentNkd_ == null) {
              CurrentNkd = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(CurrentNkd);
            break;
          }
          case 58: {
            if (averagePositionPricePt_ == null) {
              AveragePositionPricePt = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
            }
            input.ReadMessage(AveragePositionPricePt);
            break;
          }
          case 66: {
            if (currentPrice_ == null) {
              CurrentPrice = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(CurrentPrice);
            break;
          }
          case 74: {
            if (averagePositionPriceFifo_ == null) {
              AveragePositionPriceFifo = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(AveragePositionPriceFifo);
            break;
          }
          case 82: {
            if (quantityLots_ == null) {
              QuantityLots = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
            }
            input.ReadMessage(QuantityLots);
            break;
          }
          case 168: {
            Blocked = input.ReadBool();
            break;
          }
          case 178: {
            if (blockedLots_ == null) {
              BlockedLots = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
            }
            input.ReadMessage(BlockedLots);
            break;
          }
          case 194: {
            PositionUid = input.ReadString();
            break;
          }
          case 202: {
            InstrumentUid = input.ReadString();
            break;
          }
          case 210: {
            if (varMargin_ == null) {
              VarMargin = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(VarMargin);
            break;
          }
          case 218: {
            if (expectedYieldFifo_ == null) {
              ExpectedYieldFifo = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
            }
            input.ReadMessage(ExpectedYieldFifo);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            Figi = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            InstrumentType = input.ReadString();
                            break;
                        }
                    case 26:
                        {
                            if (quantity_ == null)
                            {
                                Quantity = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                            }
                            input.ReadMessage(Quantity);
                            break;
                        }
                    case 34:
                        {
                            if (averagePositionPrice_ == null)
                            {
                                AveragePositionPrice = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(AveragePositionPrice);
                            break;
                        }
                    case 42:
                        {
                            if (expectedYield_ == null)
                            {
                                ExpectedYield = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                            }
                            input.ReadMessage(ExpectedYield);
                            break;
                        }
                    case 50:
                        {
                            if (currentNkd_ == null)
                            {
                                CurrentNkd = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(CurrentNkd);
                            break;
                        }
                    case 58:
                        {
                            if (averagePositionPricePt_ == null)
                            {
                                AveragePositionPricePt = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                            }
                            input.ReadMessage(AveragePositionPricePt);
                            break;
                        }
                    case 66:
                        {
                            if (currentPrice_ == null)
                            {
                                CurrentPrice = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(CurrentPrice);
                            break;
                        }
                    case 74:
                        {
                            if (averagePositionPriceFifo_ == null)
                            {
                                AveragePositionPriceFifo = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(AveragePositionPriceFifo);
                            break;
                        }
                    case 82:
                        {
                            if (quantityLots_ == null)
                            {
                                QuantityLots = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                            }
                            input.ReadMessage(QuantityLots);
                            break;
                        }
                    case 168:
                        {
                            Blocked = input.ReadBool();
                            break;
                        }
                    case 178:
                        {
                            if (blockedLots_ == null)
                            {
                                BlockedLots = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                            }
                            input.ReadMessage(BlockedLots);
                            break;
                        }
                    case 194:
                        {
                            PositionUid = input.ReadString();
                            break;
                        }
                    case 202:
                        {
                            InstrumentUid = input.ReadString();
                            break;
                        }
                    case 210:
                        {
                            if (varMargin_ == null)
                            {
                                VarMargin = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(VarMargin);
                            break;
                        }
                    case 218:
                        {
                            if (expectedYieldFifo_ == null)
                            {
                                ExpectedYieldFifo = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                            }
                            input.ReadMessage(ExpectedYieldFifo);
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class VirtualPortfolioPosition : pb::IMessage<VirtualPortfolioPosition>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<VirtualPortfolioPosition> _parser = new pb::MessageParser<VirtualPortfolioPosition>(() => new VirtualPortfolioPosition());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<VirtualPortfolioPosition> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[11]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public VirtualPortfolioPosition()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public VirtualPortfolioPosition(VirtualPortfolioPosition other) : this()
        {
            positionUid_ = other.positionUid_;
            instrumentUid_ = other.instrumentUid_;
            figi_ = other.figi_;
            instrumentType_ = other.instrumentType_;
            quantity_ = other.quantity_ != null ? other.quantity_.Clone() : null;
            averagePositionPrice_ = other.averagePositionPrice_ != null ? other.averagePositionPrice_.Clone() : null;
            expectedYield_ = other.expectedYield_ != null ? other.expectedYield_.Clone() : null;
            expectedYieldFifo_ = other.expectedYieldFifo_ != null ? other.expectedYieldFifo_.Clone() : null;
            expireDate_ = other.expireDate_ != null ? other.expireDate_.Clone() : null;
            currentPrice_ = other.currentPrice_ != null ? other.currentPrice_.Clone() : null;
            averagePositionPriceFifo_ = other.averagePositionPriceFifo_ != null ? other.averagePositionPriceFifo_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public VirtualPortfolioPosition Clone()
        {
            return new VirtualPortfolioPosition(this);
        }

        /// <summary>Field number for the "position_uid" field.</summary>
        public const int PositionUidFieldNumber = 1;
        private string positionUid_ = "";
        /// <summary>
        ///position_uid-идентификатора инструмента
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string PositionUid
        {
            get { return positionUid_; }
            set
            {
                positionUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "instrument_uid" field.</summary>
        public const int InstrumentUidFieldNumber = 2;
        private string instrumentUid_ = "";
        /// <summary>
        ///instrument_uid-идентификатора инструмента
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string InstrumentUid
        {
            get { return instrumentUid_; }
            set
            {
                instrumentUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "figi" field.</summary>
        public const int FigiFieldNumber = 3;
        private string figi_ = "";
        /// <summary>
        ///Figi-идентификатора инструмента.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Figi
        {
            get { return figi_; }
            set
            {
                figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "instrument_type" field.</summary>
        public const int InstrumentTypeFieldNumber = 4;
        private string instrumentType_ = "";
        /// <summary>
        ///Тип инструмента.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string InstrumentType
        {
            get { return instrumentType_; }
            set
            {
                instrumentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "quantity" field.</summary>
        public const int QuantityFieldNumber = 5;
        private global::Tinkoff.Proto.InvestApi.V1.Quotation quantity_;
        /// <summary>
        ///Количество инструмента в портфеле в штуках.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.Quotation Quantity
        {
            get { return quantity_; }
            set
            {
                quantity_ = value;
            }
        }

        /// <summary>Field number for the "average_position_price" field.</summary>
        public const int AveragePositionPriceFieldNumber = 6;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue averagePositionPrice_;
        /// <summary>
        ///Средневзвешенная цена позиции. **Возможна задержка до секунды для пересчёта**.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue AveragePositionPrice
        {
            get { return averagePositionPrice_; }
            set
            {
                averagePositionPrice_ = value;
            }
        }

        /// <summary>Field number for the "expected_yield" field.</summary>
        public const int ExpectedYieldFieldNumber = 7;
        private global::Tinkoff.Proto.InvestApi.V1.Quotation expectedYield_;
        /// <summary>
        ///Текущая рассчитанная доходность позиции.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.Quotation ExpectedYield
        {
            get { return expectedYield_; }
            set
            {
                expectedYield_ = value;
            }
        }

        /// <summary>Field number for the "expected_yield_fifo" field.</summary>
        public const int ExpectedYieldFifoFieldNumber = 8;
        private global::Tinkoff.Proto.InvestApi.V1.Quotation expectedYieldFifo_;
        /// <summary>
        ///Текущая рассчитанная доходность позиции.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.Quotation ExpectedYieldFifo
        {
            get { return expectedYieldFifo_; }
            set
            {
                expectedYieldFifo_ = value;
            }
        }

        /// <summary>Field number for the "expire_date" field.</summary>
        public const int ExpireDateFieldNumber = 9;
        private global::Google.Protobuf.WellKnownTypes.Timestamp expireDate_;
        /// <summary>
        ///Дата до которой нужно продать виртуальные бумаги, после этой даты виртуальная позиция "сгорит"
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp ExpireDate
        {
            get { return expireDate_; }
            set
            {
                expireDate_ = value;
            }
        }

        /// <summary>Field number for the "current_price" field.</summary>
        public const int CurrentPriceFieldNumber = 10;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue currentPrice_;
        /// <summary>
        ///Текущая цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue CurrentPrice
        {
            get { return currentPrice_; }
            set
            {
                currentPrice_ = value;
            }
        }

        /// <summary>Field number for the "average_position_price_fifo" field.</summary>
        public const int AveragePositionPriceFifoFieldNumber = 11;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue averagePositionPriceFifo_;
        /// <summary>
        ///Средняя цена позиции по методу FIFO. **Возможна задержка до секунды для пересчёта**.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue AveragePositionPriceFifo
        {
            get { return averagePositionPriceFifo_; }
            set
            {
                averagePositionPriceFifo_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as VirtualPortfolioPosition);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(VirtualPortfolioPosition other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (PositionUid != other.PositionUid) return false;
            if (InstrumentUid != other.InstrumentUid) return false;
            if (Figi != other.Figi) return false;
            if (InstrumentType != other.InstrumentType) return false;
            if (!object.Equals(Quantity, other.Quantity)) return false;
            if (!object.Equals(AveragePositionPrice, other.AveragePositionPrice)) return false;
            if (!object.Equals(ExpectedYield, other.ExpectedYield)) return false;
            if (!object.Equals(ExpectedYieldFifo, other.ExpectedYieldFifo)) return false;
            if (!object.Equals(ExpireDate, other.ExpireDate)) return false;
            if (!object.Equals(CurrentPrice, other.CurrentPrice)) return false;
            if (!object.Equals(AveragePositionPriceFifo, other.AveragePositionPriceFifo)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (PositionUid.Length != 0) hash ^= PositionUid.GetHashCode();
            if (InstrumentUid.Length != 0) hash ^= InstrumentUid.GetHashCode();
            if (Figi.Length != 0) hash ^= Figi.GetHashCode();
            if (InstrumentType.Length != 0) hash ^= InstrumentType.GetHashCode();
            if (quantity_ != null) hash ^= Quantity.GetHashCode();
            if (averagePositionPrice_ != null) hash ^= AveragePositionPrice.GetHashCode();
            if (expectedYield_ != null) hash ^= ExpectedYield.GetHashCode();
            if (expectedYieldFifo_ != null) hash ^= ExpectedYieldFifo.GetHashCode();
            if (expireDate_ != null) hash ^= ExpireDate.GetHashCode();
            if (currentPrice_ != null) hash ^= CurrentPrice.GetHashCode();
            if (averagePositionPriceFifo_ != null) hash ^= AveragePositionPriceFifo.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (PositionUid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PositionUid);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InstrumentUid);
      }
      if (Figi.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Figi);
      }
      if (InstrumentType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(InstrumentType);
      }
      if (quantity_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Quantity);
      }
      if (averagePositionPrice_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(AveragePositionPrice);
      }
      if (expectedYield_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ExpectedYield);
      }
      if (expectedYieldFifo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ExpectedYieldFifo);
      }
      if (expireDate_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ExpireDate);
      }
      if (currentPrice_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CurrentPrice);
      }
      if (averagePositionPriceFifo_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(AveragePositionPriceFifo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (PositionUid.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(PositionUid);
            }
            if (InstrumentUid.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(InstrumentUid);
            }
            if (Figi.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(Figi);
            }
            if (InstrumentType.Length != 0)
            {
                output.WriteRawTag(34);
                output.WriteString(InstrumentType);
            }
            if (quantity_ != null)
            {
                output.WriteRawTag(42);
                output.WriteMessage(Quantity);
            }
            if (averagePositionPrice_ != null)
            {
                output.WriteRawTag(50);
                output.WriteMessage(AveragePositionPrice);
            }
            if (expectedYield_ != null)
            {
                output.WriteRawTag(58);
                output.WriteMessage(ExpectedYield);
            }
            if (expectedYieldFifo_ != null)
            {
                output.WriteRawTag(66);
                output.WriteMessage(ExpectedYieldFifo);
            }
            if (expireDate_ != null)
            {
                output.WriteRawTag(74);
                output.WriteMessage(ExpireDate);
            }
            if (currentPrice_ != null)
            {
                output.WriteRawTag(82);
                output.WriteMessage(CurrentPrice);
            }
            if (averagePositionPriceFifo_ != null)
            {
                output.WriteRawTag(90);
                output.WriteMessage(AveragePositionPriceFifo);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (PositionUid.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(PositionUid);
            }
            if (InstrumentUid.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentUid);
            }
            if (Figi.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
            }
            if (InstrumentType.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentType);
            }
            if (quantity_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Quantity);
            }
            if (averagePositionPrice_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(AveragePositionPrice);
            }
            if (expectedYield_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpectedYield);
            }
            if (expectedYieldFifo_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpectedYieldFifo);
            }
            if (expireDate_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpireDate);
            }
            if (currentPrice_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentPrice);
            }
            if (averagePositionPriceFifo_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(AveragePositionPriceFifo);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(VirtualPortfolioPosition other)
        {
            if (other == null)
            {
                return;
            }
            if (other.PositionUid.Length != 0)
            {
                PositionUid = other.PositionUid;
            }
            if (other.InstrumentUid.Length != 0)
            {
                InstrumentUid = other.InstrumentUid;
            }
            if (other.Figi.Length != 0)
            {
                Figi = other.Figi;
            }
            if (other.InstrumentType.Length != 0)
            {
                InstrumentType = other.InstrumentType;
            }
            if (other.quantity_ != null)
            {
                if (quantity_ == null)
                {
                    Quantity = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                }
                Quantity.MergeFrom(other.Quantity);
            }
            if (other.averagePositionPrice_ != null)
            {
                if (averagePositionPrice_ == null)
                {
                    AveragePositionPrice = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                AveragePositionPrice.MergeFrom(other.AveragePositionPrice);
            }
            if (other.expectedYield_ != null)
            {
                if (expectedYield_ == null)
                {
                    ExpectedYield = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                }
                ExpectedYield.MergeFrom(other.ExpectedYield);
            }
            if (other.expectedYieldFifo_ != null)
            {
                if (expectedYieldFifo_ == null)
                {
                    ExpectedYieldFifo = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                }
                ExpectedYieldFifo.MergeFrom(other.ExpectedYieldFifo);
            }
            if (other.expireDate_ != null)
            {
                if (expireDate_ == null)
                {
                    ExpireDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                ExpireDate.MergeFrom(other.ExpireDate);
            }
            if (other.currentPrice_ != null)
            {
                if (currentPrice_ == null)
                {
                    CurrentPrice = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                CurrentPrice.MergeFrom(other.CurrentPrice);
            }
            if (other.averagePositionPriceFifo_ != null)
            {
                if (averagePositionPriceFifo_ == null)
                {
                    AveragePositionPriceFifo = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                AveragePositionPriceFifo.MergeFrom(other.AveragePositionPriceFifo);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PositionUid = input.ReadString();
            break;
          }
          case 18: {
            InstrumentUid = input.ReadString();
            break;
          }
          case 26: {
            Figi = input.ReadString();
            break;
          }
          case 34: {
            InstrumentType = input.ReadString();
            break;
          }
          case 42: {
            if (quantity_ == null) {
              Quantity = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
            }
            input.ReadMessage(Quantity);
            break;
          }
          case 50: {
            if (averagePositionPrice_ == null) {
              AveragePositionPrice = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(AveragePositionPrice);
            break;
          }
          case 58: {
            if (expectedYield_ == null) {
              ExpectedYield = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
            }
            input.ReadMessage(ExpectedYield);
            break;
          }
          case 66: {
            if (expectedYieldFifo_ == null) {
              ExpectedYieldFifo = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
            }
            input.ReadMessage(ExpectedYieldFifo);
            break;
          }
          case 74: {
            if (expireDate_ == null) {
              ExpireDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpireDate);
            break;
          }
          case 82: {
            if (currentPrice_ == null) {
              CurrentPrice = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(CurrentPrice);
            break;
          }
          case 90: {
            if (averagePositionPriceFifo_ == null) {
              AveragePositionPriceFifo = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(AveragePositionPriceFifo);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            PositionUid = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            InstrumentUid = input.ReadString();
                            break;
                        }
                    case 26:
                        {
                            Figi = input.ReadString();
                            break;
                        }
                    case 34:
                        {
                            InstrumentType = input.ReadString();
                            break;
                        }
                    case 42:
                        {
                            if (quantity_ == null)
                            {
                                Quantity = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                            }
                            input.ReadMessage(Quantity);
                            break;
                        }
                    case 50:
                        {
                            if (averagePositionPrice_ == null)
                            {
                                AveragePositionPrice = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(AveragePositionPrice);
                            break;
                        }
                    case 58:
                        {
                            if (expectedYield_ == null)
                            {
                                ExpectedYield = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                            }
                            input.ReadMessage(ExpectedYield);
                            break;
                        }
                    case 66:
                        {
                            if (expectedYieldFifo_ == null)
                            {
                                ExpectedYieldFifo = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                            }
                            input.ReadMessage(ExpectedYieldFifo);
                            break;
                        }
                    case 74:
                        {
                            if (expireDate_ == null)
                            {
                                ExpireDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                            }
                            input.ReadMessage(ExpireDate);
                            break;
                        }
                    case 82:
                        {
                            if (currentPrice_ == null)
                            {
                                CurrentPrice = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(CurrentPrice);
                            break;
                        }
                    case 90:
                        {
                            if (averagePositionPriceFifo_ == null)
                            {
                                AveragePositionPriceFifo = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(AveragePositionPriceFifo);
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Баланс позиции ценной бумаги.
    /// </summary>
    public sealed partial class PositionsSecurities : pb::IMessage<PositionsSecurities>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<PositionsSecurities> _parser = new pb::MessageParser<PositionsSecurities>(() => new PositionsSecurities());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PositionsSecurities> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[12]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsSecurities()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsSecurities(PositionsSecurities other) : this()
        {
            figi_ = other.figi_;
            blocked_ = other.blocked_;
            balance_ = other.balance_;
            positionUid_ = other.positionUid_;
            instrumentUid_ = other.instrumentUid_;
            exchangeBlocked_ = other.exchangeBlocked_;
            instrumentType_ = other.instrumentType_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsSecurities Clone()
        {
            return new PositionsSecurities(this);
        }

        /// <summary>Field number for the "figi" field.</summary>
        public const int FigiFieldNumber = 1;
        private string figi_ = "";
        /// <summary>
        ///Figi-идентификатор бумаги.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Figi
        {
            get { return figi_; }
            set
            {
                figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "blocked" field.</summary>
        public const int BlockedFieldNumber = 2;
        private long blocked_;
        /// <summary>
        ///Количество бумаг заблокированных выставленными заявками.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long Blocked
        {
            get { return blocked_; }
            set
            {
                blocked_ = value;
            }
        }

        /// <summary>Field number for the "balance" field.</summary>
        public const int BalanceFieldNumber = 3;
        private long balance_;
        /// <summary>
        ///Текущий незаблокированный баланс.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long Balance
        {
            get { return balance_; }
            set
            {
                balance_ = value;
            }
        }

        /// <summary>Field number for the "position_uid" field.</summary>
        public const int PositionUidFieldNumber = 4;
        private string positionUid_ = "";
        /// <summary>
        ///Уникальный идентификатор позиции.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string PositionUid
        {
            get { return positionUid_; }
            set
            {
                positionUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "instrument_uid" field.</summary>
        public const int InstrumentUidFieldNumber = 5;
        private string instrumentUid_ = "";
        /// <summary>
        ///Уникальный идентификатор  инструмента.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string InstrumentUid
        {
            get { return instrumentUid_; }
            set
            {
                instrumentUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "exchange_blocked" field.</summary>
        public const int ExchangeBlockedFieldNumber = 11;
        private bool exchangeBlocked_;
        /// <summary>
        ///Заблокировано на бирже.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool ExchangeBlocked
        {
            get { return exchangeBlocked_; }
            set
            {
                exchangeBlocked_ = value;
            }
        }

        /// <summary>Field number for the "instrument_type" field.</summary>
        public const int InstrumentTypeFieldNumber = 16;
        private string instrumentType_ = "";
        /// <summary>
        ///Тип инструмента.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string InstrumentType
        {
            get { return instrumentType_; }
            set
            {
                instrumentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as PositionsSecurities);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PositionsSecurities other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Figi != other.Figi) return false;
            if (Blocked != other.Blocked) return false;
            if (Balance != other.Balance) return false;
            if (PositionUid != other.PositionUid) return false;
            if (InstrumentUid != other.InstrumentUid) return false;
            if (ExchangeBlocked != other.ExchangeBlocked) return false;
            if (InstrumentType != other.InstrumentType) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Figi.Length != 0) hash ^= Figi.GetHashCode();
            if (Blocked != 0L) hash ^= Blocked.GetHashCode();
            if (Balance != 0L) hash ^= Balance.GetHashCode();
            if (PositionUid.Length != 0) hash ^= PositionUid.GetHashCode();
            if (InstrumentUid.Length != 0) hash ^= InstrumentUid.GetHashCode();
            if (ExchangeBlocked != false) hash ^= ExchangeBlocked.GetHashCode();
            if (InstrumentType.Length != 0) hash ^= InstrumentType.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (Blocked != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Blocked);
      }
      if (Balance != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Balance);
      }
      if (PositionUid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PositionUid);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(InstrumentUid);
      }
      if (ExchangeBlocked != false) {
        output.WriteRawTag(88);
        output.WriteBool(ExchangeBlocked);
      }
      if (InstrumentType.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(InstrumentType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (Figi.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Figi);
            }
            if (Blocked != 0L)
            {
                output.WriteRawTag(16);
                output.WriteInt64(Blocked);
            }
            if (Balance != 0L)
            {
                output.WriteRawTag(24);
                output.WriteInt64(Balance);
            }
            if (PositionUid.Length != 0)
            {
                output.WriteRawTag(34);
                output.WriteString(PositionUid);
            }
            if (InstrumentUid.Length != 0)
            {
                output.WriteRawTag(42);
                output.WriteString(InstrumentUid);
            }
            if (ExchangeBlocked != false)
            {
                output.WriteRawTag(88);
                output.WriteBool(ExchangeBlocked);
            }
            if (InstrumentType.Length != 0)
            {
                output.WriteRawTag(130, 1);
                output.WriteString(InstrumentType);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (Figi.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
            }
            if (Blocked != 0L)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(Blocked);
            }
            if (Balance != 0L)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(Balance);
            }
            if (PositionUid.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(PositionUid);
            }
            if (InstrumentUid.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentUid);
            }
            if (ExchangeBlocked != false)
            {
                size += 1 + 1;
            }
            if (InstrumentType.Length != 0)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(InstrumentType);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PositionsSecurities other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Figi.Length != 0)
            {
                Figi = other.Figi;
            }
            if (other.Blocked != 0L)
            {
                Blocked = other.Blocked;
            }
            if (other.Balance != 0L)
            {
                Balance = other.Balance;
            }
            if (other.PositionUid.Length != 0)
            {
                PositionUid = other.PositionUid;
            }
            if (other.InstrumentUid.Length != 0)
            {
                InstrumentUid = other.InstrumentUid;
            }
            if (other.ExchangeBlocked != false)
            {
                ExchangeBlocked = other.ExchangeBlocked;
            }
            if (other.InstrumentType.Length != 0)
            {
                InstrumentType = other.InstrumentType;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            Blocked = input.ReadInt64();
            break;
          }
          case 24: {
            Balance = input.ReadInt64();
            break;
          }
          case 34: {
            PositionUid = input.ReadString();
            break;
          }
          case 42: {
            InstrumentUid = input.ReadString();
            break;
          }
          case 88: {
            ExchangeBlocked = input.ReadBool();
            break;
          }
          case 130: {
            InstrumentType = input.ReadString();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            Figi = input.ReadString();
                            break;
                        }
                    case 16:
                        {
                            Blocked = input.ReadInt64();
                            break;
                        }
                    case 24:
                        {
                            Balance = input.ReadInt64();
                            break;
                        }
                    case 34:
                        {
                            PositionUid = input.ReadString();
                            break;
                        }
                    case 42:
                        {
                            InstrumentUid = input.ReadString();
                            break;
                        }
                    case 88:
                        {
                            ExchangeBlocked = input.ReadBool();
                            break;
                        }
                    case 130:
                        {
                            InstrumentType = input.ReadString();
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Баланс фьючерса.
    /// </summary>
    public sealed partial class PositionsFutures : pb::IMessage<PositionsFutures>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<PositionsFutures> _parser = new pb::MessageParser<PositionsFutures>(() => new PositionsFutures());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PositionsFutures> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[13]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsFutures()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsFutures(PositionsFutures other) : this()
        {
            figi_ = other.figi_;
            blocked_ = other.blocked_;
            balance_ = other.balance_;
            positionUid_ = other.positionUid_;
            instrumentUid_ = other.instrumentUid_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsFutures Clone()
        {
            return new PositionsFutures(this);
        }

        /// <summary>Field number for the "figi" field.</summary>
        public const int FigiFieldNumber = 1;
        private string figi_ = "";
        /// <summary>
        ///Figi-идентификатор фьючерса.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Figi
        {
            get { return figi_; }
            set
            {
                figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "blocked" field.</summary>
        public const int BlockedFieldNumber = 2;
        private long blocked_;
        /// <summary>
        ///Количество бумаг заблокированных выставленными заявками.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long Blocked
        {
            get { return blocked_; }
            set
            {
                blocked_ = value;
            }
        }

        /// <summary>Field number for the "balance" field.</summary>
        public const int BalanceFieldNumber = 3;
        private long balance_;
        /// <summary>
        ///Текущий незаблокированный баланс.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long Balance
        {
            get { return balance_; }
            set
            {
                balance_ = value;
            }
        }

        /// <summary>Field number for the "position_uid" field.</summary>
        public const int PositionUidFieldNumber = 4;
        private string positionUid_ = "";
        /// <summary>
        ///Уникальный идентификатор позиции.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string PositionUid
        {
            get { return positionUid_; }
            set
            {
                positionUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "instrument_uid" field.</summary>
        public const int InstrumentUidFieldNumber = 5;
        private string instrumentUid_ = "";
        /// <summary>
        ///Уникальный идентификатор  инструмента.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string InstrumentUid
        {
            get { return instrumentUid_; }
            set
            {
                instrumentUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as PositionsFutures);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PositionsFutures other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Figi != other.Figi) return false;
            if (Blocked != other.Blocked) return false;
            if (Balance != other.Balance) return false;
            if (PositionUid != other.PositionUid) return false;
            if (InstrumentUid != other.InstrumentUid) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Figi.Length != 0) hash ^= Figi.GetHashCode();
            if (Blocked != 0L) hash ^= Blocked.GetHashCode();
            if (Balance != 0L) hash ^= Balance.GetHashCode();
            if (PositionUid.Length != 0) hash ^= PositionUid.GetHashCode();
            if (InstrumentUid.Length != 0) hash ^= InstrumentUid.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (Blocked != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Blocked);
      }
      if (Balance != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Balance);
      }
      if (PositionUid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PositionUid);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(InstrumentUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (Figi.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Figi);
            }
            if (Blocked != 0L)
            {
                output.WriteRawTag(16);
                output.WriteInt64(Blocked);
            }
            if (Balance != 0L)
            {
                output.WriteRawTag(24);
                output.WriteInt64(Balance);
            }
            if (PositionUid.Length != 0)
            {
                output.WriteRawTag(34);
                output.WriteString(PositionUid);
            }
            if (InstrumentUid.Length != 0)
            {
                output.WriteRawTag(42);
                output.WriteString(InstrumentUid);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (Figi.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
            }
            if (Blocked != 0L)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(Blocked);
            }
            if (Balance != 0L)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(Balance);
            }
            if (PositionUid.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(PositionUid);
            }
            if (InstrumentUid.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentUid);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PositionsFutures other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Figi.Length != 0)
            {
                Figi = other.Figi;
            }
            if (other.Blocked != 0L)
            {
                Blocked = other.Blocked;
            }
            if (other.Balance != 0L)
            {
                Balance = other.Balance;
            }
            if (other.PositionUid.Length != 0)
            {
                PositionUid = other.PositionUid;
            }
            if (other.InstrumentUid.Length != 0)
            {
                InstrumentUid = other.InstrumentUid;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            Blocked = input.ReadInt64();
            break;
          }
          case 24: {
            Balance = input.ReadInt64();
            break;
          }
          case 34: {
            PositionUid = input.ReadString();
            break;
          }
          case 42: {
            InstrumentUid = input.ReadString();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            Figi = input.ReadString();
                            break;
                        }
                    case 16:
                        {
                            Blocked = input.ReadInt64();
                            break;
                        }
                    case 24:
                        {
                            Balance = input.ReadInt64();
                            break;
                        }
                    case 34:
                        {
                            PositionUid = input.ReadString();
                            break;
                        }
                    case 42:
                        {
                            InstrumentUid = input.ReadString();
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Баланс опциона.
    /// </summary>
    public sealed partial class PositionsOptions : pb::IMessage<PositionsOptions>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<PositionsOptions> _parser = new pb::MessageParser<PositionsOptions>(() => new PositionsOptions());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PositionsOptions> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[14]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsOptions()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsOptions(PositionsOptions other) : this()
        {
            positionUid_ = other.positionUid_;
            instrumentUid_ = other.instrumentUid_;
            blocked_ = other.blocked_;
            balance_ = other.balance_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsOptions Clone()
        {
            return new PositionsOptions(this);
        }

        /// <summary>Field number for the "position_uid" field.</summary>
        public const int PositionUidFieldNumber = 1;
        private string positionUid_ = "";
        /// <summary>
        ///Уникальный идентификатор позиции опциона.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string PositionUid
        {
            get { return positionUid_; }
            set
            {
                positionUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "instrument_uid" field.</summary>
        public const int InstrumentUidFieldNumber = 2;
        private string instrumentUid_ = "";
        /// <summary>
        ///Уникальный идентификатор  инструмента.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string InstrumentUid
        {
            get { return instrumentUid_; }
            set
            {
                instrumentUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "blocked" field.</summary>
        public const int BlockedFieldNumber = 11;
        private long blocked_;
        /// <summary>
        ///Количество бумаг заблокированных выставленными заявками.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long Blocked
        {
            get { return blocked_; }
            set
            {
                blocked_ = value;
            }
        }

        /// <summary>Field number for the "balance" field.</summary>
        public const int BalanceFieldNumber = 21;
        private long balance_;
        /// <summary>
        ///Текущий незаблокированный баланс.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long Balance
        {
            get { return balance_; }
            set
            {
                balance_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as PositionsOptions);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PositionsOptions other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (PositionUid != other.PositionUid) return false;
            if (InstrumentUid != other.InstrumentUid) return false;
            if (Blocked != other.Blocked) return false;
            if (Balance != other.Balance) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (PositionUid.Length != 0) hash ^= PositionUid.GetHashCode();
            if (InstrumentUid.Length != 0) hash ^= InstrumentUid.GetHashCode();
            if (Blocked != 0L) hash ^= Blocked.GetHashCode();
            if (Balance != 0L) hash ^= Balance.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (PositionUid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PositionUid);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InstrumentUid);
      }
      if (Blocked != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(Blocked);
      }
      if (Balance != 0L) {
        output.WriteRawTag(168, 1);
        output.WriteInt64(Balance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (PositionUid.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(PositionUid);
            }
            if (InstrumentUid.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(InstrumentUid);
            }
            if (Blocked != 0L)
            {
                output.WriteRawTag(88);
                output.WriteInt64(Blocked);
            }
            if (Balance != 0L)
            {
                output.WriteRawTag(168, 1);
                output.WriteInt64(Balance);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (PositionUid.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(PositionUid);
            }
            if (InstrumentUid.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentUid);
            }
            if (Blocked != 0L)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(Blocked);
            }
            if (Balance != 0L)
            {
                size += 2 + pb::CodedOutputStream.ComputeInt64Size(Balance);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PositionsOptions other)
        {
            if (other == null)
            {
                return;
            }
            if (other.PositionUid.Length != 0)
            {
                PositionUid = other.PositionUid;
            }
            if (other.InstrumentUid.Length != 0)
            {
                InstrumentUid = other.InstrumentUid;
            }
            if (other.Blocked != 0L)
            {
                Blocked = other.Blocked;
            }
            if (other.Balance != 0L)
            {
                Balance = other.Balance;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PositionUid = input.ReadString();
            break;
          }
          case 18: {
            InstrumentUid = input.ReadString();
            break;
          }
          case 88: {
            Blocked = input.ReadInt64();
            break;
          }
          case 168: {
            Balance = input.ReadInt64();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            PositionUid = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            InstrumentUid = input.ReadString();
                            break;
                        }
                    case 88:
                        {
                            Blocked = input.ReadInt64();
                            break;
                        }
                    case 168:
                        {
                            Balance = input.ReadInt64();
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class BrokerReportRequest : pb::IMessage<BrokerReportRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<BrokerReportRequest> _parser = new pb::MessageParser<BrokerReportRequest>(() => new BrokerReportRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<BrokerReportRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[15]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BrokerReportRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BrokerReportRequest(BrokerReportRequest other) : this()
        {
            switch (other.PayloadCase)
            {
                case PayloadOneofCase.GenerateBrokerReportRequest:
                    GenerateBrokerReportRequest = other.GenerateBrokerReportRequest.Clone();
                    break;
                case PayloadOneofCase.GetBrokerReportRequest:
                    GetBrokerReportRequest = other.GetBrokerReportRequest.Clone();
                    break;
            }

            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BrokerReportRequest Clone()
        {
            return new BrokerReportRequest(this);
        }

        /// <summary>Field number for the "generate_broker_report_request" field.</summary>
        public const int GenerateBrokerReportRequestFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.GenerateBrokerReportRequest GenerateBrokerReportRequest
        {
            get { return payloadCase_ == PayloadOneofCase.GenerateBrokerReportRequest ? (global::Tinkoff.Proto.InvestApi.V1.GenerateBrokerReportRequest)payload_ : null; }
            set
            {
                payload_ = value;
                payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GenerateBrokerReportRequest;
            }
        }

        /// <summary>Field number for the "get_broker_report_request" field.</summary>
        public const int GetBrokerReportRequestFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.GetBrokerReportRequest GetBrokerReportRequest
        {
            get { return payloadCase_ == PayloadOneofCase.GetBrokerReportRequest ? (global::Tinkoff.Proto.InvestApi.V1.GetBrokerReportRequest)payload_ : null; }
            set
            {
                payload_ = value;
                payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetBrokerReportRequest;
            }
        }

        private object payload_;
        /// <summary>Enum of possible cases for the "payload" oneof.</summary>
        public enum PayloadOneofCase
        {
            None = 0,
            GenerateBrokerReportRequest = 1,
            GetBrokerReportRequest = 2,
        }
        private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PayloadOneofCase PayloadCase
        {
            get { return payloadCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPayload()
        {
            payloadCase_ = PayloadOneofCase.None;
            payload_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as BrokerReportRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(BrokerReportRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(GenerateBrokerReportRequest, other.GenerateBrokerReportRequest)) return false;
            if (!object.Equals(GetBrokerReportRequest, other.GetBrokerReportRequest)) return false;
            if (PayloadCase != other.PayloadCase) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (payloadCase_ == PayloadOneofCase.GenerateBrokerReportRequest) hash ^= GenerateBrokerReportRequest.GetHashCode();
            if (payloadCase_ == PayloadOneofCase.GetBrokerReportRequest) hash ^= GetBrokerReportRequest.GetHashCode();
            hash ^= (int)payloadCase_;
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (payloadCase_ == PayloadOneofCase.GenerateBrokerReportRequest) {
        output.WriteRawTag(10);
        output.WriteMessage(GenerateBrokerReportRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetBrokerReportRequest) {
        output.WriteRawTag(18);
        output.WriteMessage(GetBrokerReportRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (payloadCase_ == PayloadOneofCase.GenerateBrokerReportRequest)
            {
                output.WriteRawTag(10);
                output.WriteMessage(GenerateBrokerReportRequest);
            }
            if (payloadCase_ == PayloadOneofCase.GetBrokerReportRequest)
            {
                output.WriteRawTag(18);
                output.WriteMessage(GetBrokerReportRequest);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (payloadCase_ == PayloadOneofCase.GenerateBrokerReportRequest)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(GenerateBrokerReportRequest);
            }
            if (payloadCase_ == PayloadOneofCase.GetBrokerReportRequest)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetBrokerReportRequest);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(BrokerReportRequest other)
        {
            if (other == null)
            {
                return;
            }
            switch (other.PayloadCase)
            {
                case PayloadOneofCase.GenerateBrokerReportRequest:
                    if (GenerateBrokerReportRequest == null)
                    {
                        GenerateBrokerReportRequest = new global::Tinkoff.Proto.InvestApi.V1.GenerateBrokerReportRequest();
                    }
                    GenerateBrokerReportRequest.MergeFrom(other.GenerateBrokerReportRequest);
                    break;
                case PayloadOneofCase.GetBrokerReportRequest:
                    if (GetBrokerReportRequest == null)
                    {
                        GetBrokerReportRequest = new global::Tinkoff.Proto.InvestApi.V1.GetBrokerReportRequest();
                    }
                    GetBrokerReportRequest.MergeFrom(other.GetBrokerReportRequest);
                    break;
            }

            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Tinkoff.Proto.InvestApi.V1.GenerateBrokerReportRequest subBuilder = new global::Tinkoff.Proto.InvestApi.V1.GenerateBrokerReportRequest();
            if (payloadCase_ == PayloadOneofCase.GenerateBrokerReportRequest) {
              subBuilder.MergeFrom(GenerateBrokerReportRequest);
            }
            input.ReadMessage(subBuilder);
            GenerateBrokerReportRequest = subBuilder;
            break;
          }
          case 18: {
            global::Tinkoff.Proto.InvestApi.V1.GetBrokerReportRequest subBuilder = new global::Tinkoff.Proto.InvestApi.V1.GetBrokerReportRequest();
            if (payloadCase_ == PayloadOneofCase.GetBrokerReportRequest) {
              subBuilder.MergeFrom(GetBrokerReportRequest);
            }
            input.ReadMessage(subBuilder);
            GetBrokerReportRequest = subBuilder;
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            global::Tinkoff.Proto.InvestApi.V1.GenerateBrokerReportRequest subBuilder = new global::Tinkoff.Proto.InvestApi.V1.GenerateBrokerReportRequest();
                            if (payloadCase_ == PayloadOneofCase.GenerateBrokerReportRequest)
                            {
                                subBuilder.MergeFrom(GenerateBrokerReportRequest);
                            }
                            input.ReadMessage(subBuilder);
                            GenerateBrokerReportRequest = subBuilder;
                            break;
                        }
                    case 18:
                        {
                            global::Tinkoff.Proto.InvestApi.V1.GetBrokerReportRequest subBuilder = new global::Tinkoff.Proto.InvestApi.V1.GetBrokerReportRequest();
                            if (payloadCase_ == PayloadOneofCase.GetBrokerReportRequest)
                            {
                                subBuilder.MergeFrom(GetBrokerReportRequest);
                            }
                            input.ReadMessage(subBuilder);
                            GetBrokerReportRequest = subBuilder;
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class BrokerReportResponse : pb::IMessage<BrokerReportResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<BrokerReportResponse> _parser = new pb::MessageParser<BrokerReportResponse>(() => new BrokerReportResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<BrokerReportResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[16]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BrokerReportResponse()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BrokerReportResponse(BrokerReportResponse other) : this()
        {
            switch (other.PayloadCase)
            {
                case PayloadOneofCase.GenerateBrokerReportResponse:
                    GenerateBrokerReportResponse = other.GenerateBrokerReportResponse.Clone();
                    break;
                case PayloadOneofCase.GetBrokerReportResponse:
                    GetBrokerReportResponse = other.GetBrokerReportResponse.Clone();
                    break;
            }

            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BrokerReportResponse Clone()
        {
            return new BrokerReportResponse(this);
        }

        /// <summary>Field number for the "generate_broker_report_response" field.</summary>
        public const int GenerateBrokerReportResponseFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.GenerateBrokerReportResponse GenerateBrokerReportResponse
        {
            get { return payloadCase_ == PayloadOneofCase.GenerateBrokerReportResponse ? (global::Tinkoff.Proto.InvestApi.V1.GenerateBrokerReportResponse)payload_ : null; }
            set
            {
                payload_ = value;
                payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GenerateBrokerReportResponse;
            }
        }

        /// <summary>Field number for the "get_broker_report_response" field.</summary>
        public const int GetBrokerReportResponseFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.GetBrokerReportResponse GetBrokerReportResponse
        {
            get { return payloadCase_ == PayloadOneofCase.GetBrokerReportResponse ? (global::Tinkoff.Proto.InvestApi.V1.GetBrokerReportResponse)payload_ : null; }
            set
            {
                payload_ = value;
                payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetBrokerReportResponse;
            }
        }

        private object payload_;
        /// <summary>Enum of possible cases for the "payload" oneof.</summary>
        public enum PayloadOneofCase
        {
            None = 0,
            GenerateBrokerReportResponse = 1,
            GetBrokerReportResponse = 2,
        }
        private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PayloadOneofCase PayloadCase
        {
            get { return payloadCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPayload()
        {
            payloadCase_ = PayloadOneofCase.None;
            payload_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as BrokerReportResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(BrokerReportResponse other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(GenerateBrokerReportResponse, other.GenerateBrokerReportResponse)) return false;
            if (!object.Equals(GetBrokerReportResponse, other.GetBrokerReportResponse)) return false;
            if (PayloadCase != other.PayloadCase) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (payloadCase_ == PayloadOneofCase.GenerateBrokerReportResponse) hash ^= GenerateBrokerReportResponse.GetHashCode();
            if (payloadCase_ == PayloadOneofCase.GetBrokerReportResponse) hash ^= GetBrokerReportResponse.GetHashCode();
            hash ^= (int)payloadCase_;
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (payloadCase_ == PayloadOneofCase.GenerateBrokerReportResponse) {
        output.WriteRawTag(10);
        output.WriteMessage(GenerateBrokerReportResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetBrokerReportResponse) {
        output.WriteRawTag(18);
        output.WriteMessage(GetBrokerReportResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (payloadCase_ == PayloadOneofCase.GenerateBrokerReportResponse)
            {
                output.WriteRawTag(10);
                output.WriteMessage(GenerateBrokerReportResponse);
            }
            if (payloadCase_ == PayloadOneofCase.GetBrokerReportResponse)
            {
                output.WriteRawTag(18);
                output.WriteMessage(GetBrokerReportResponse);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (payloadCase_ == PayloadOneofCase.GenerateBrokerReportResponse)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(GenerateBrokerReportResponse);
            }
            if (payloadCase_ == PayloadOneofCase.GetBrokerReportResponse)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetBrokerReportResponse);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(BrokerReportResponse other)
        {
            if (other == null)
            {
                return;
            }
            switch (other.PayloadCase)
            {
                case PayloadOneofCase.GenerateBrokerReportResponse:
                    if (GenerateBrokerReportResponse == null)
                    {
                        GenerateBrokerReportResponse = new global::Tinkoff.Proto.InvestApi.V1.GenerateBrokerReportResponse();
                    }
                    GenerateBrokerReportResponse.MergeFrom(other.GenerateBrokerReportResponse);
                    break;
                case PayloadOneofCase.GetBrokerReportResponse:
                    if (GetBrokerReportResponse == null)
                    {
                        GetBrokerReportResponse = new global::Tinkoff.Proto.InvestApi.V1.GetBrokerReportResponse();
                    }
                    GetBrokerReportResponse.MergeFrom(other.GetBrokerReportResponse);
                    break;
            }

            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Tinkoff.Proto.InvestApi.V1.GenerateBrokerReportResponse subBuilder = new global::Tinkoff.Proto.InvestApi.V1.GenerateBrokerReportResponse();
            if (payloadCase_ == PayloadOneofCase.GenerateBrokerReportResponse) {
              subBuilder.MergeFrom(GenerateBrokerReportResponse);
            }
            input.ReadMessage(subBuilder);
            GenerateBrokerReportResponse = subBuilder;
            break;
          }
          case 18: {
            global::Tinkoff.Proto.InvestApi.V1.GetBrokerReportResponse subBuilder = new global::Tinkoff.Proto.InvestApi.V1.GetBrokerReportResponse();
            if (payloadCase_ == PayloadOneofCase.GetBrokerReportResponse) {
              subBuilder.MergeFrom(GetBrokerReportResponse);
            }
            input.ReadMessage(subBuilder);
            GetBrokerReportResponse = subBuilder;
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            global::Tinkoff.Proto.InvestApi.V1.GenerateBrokerReportResponse subBuilder = new global::Tinkoff.Proto.InvestApi.V1.GenerateBrokerReportResponse();
                            if (payloadCase_ == PayloadOneofCase.GenerateBrokerReportResponse)
                            {
                                subBuilder.MergeFrom(GenerateBrokerReportResponse);
                            }
                            input.ReadMessage(subBuilder);
                            GenerateBrokerReportResponse = subBuilder;
                            break;
                        }
                    case 18:
                        {
                            global::Tinkoff.Proto.InvestApi.V1.GetBrokerReportResponse subBuilder = new global::Tinkoff.Proto.InvestApi.V1.GetBrokerReportResponse();
                            if (payloadCase_ == PayloadOneofCase.GetBrokerReportResponse)
                            {
                                subBuilder.MergeFrom(GetBrokerReportResponse);
                            }
                            input.ReadMessage(subBuilder);
                            GetBrokerReportResponse = subBuilder;
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class GenerateBrokerReportRequest : pb::IMessage<GenerateBrokerReportRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<GenerateBrokerReportRequest> _parser = new pb::MessageParser<GenerateBrokerReportRequest>(() => new GenerateBrokerReportRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<GenerateBrokerReportRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[17]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GenerateBrokerReportRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GenerateBrokerReportRequest(GenerateBrokerReportRequest other) : this()
        {
            accountId_ = other.accountId_;
            from_ = other.from_ != null ? other.from_.Clone() : null;
            to_ = other.to_ != null ? other.to_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GenerateBrokerReportRequest Clone()
        {
            return new GenerateBrokerReportRequest(this);
        }

        /// <summary>Field number for the "account_id" field.</summary>
        public const int AccountIdFieldNumber = 1;
        private string accountId_ = "";
        /// <summary>
        ///Идентификатор счёта клиента.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AccountId
        {
            get { return accountId_; }
            set
            {
                accountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "from" field.</summary>
        public const int FromFieldNumber = 2;
        private global::Google.Protobuf.WellKnownTypes.Timestamp from_;
        /// <summary>
        ///Начало периода в часовом поясе UTC.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp From
        {
            get { return from_; }
            set
            {
                from_ = value;
            }
        }

        /// <summary>Field number for the "to" field.</summary>
        public const int ToFieldNumber = 3;
        private global::Google.Protobuf.WellKnownTypes.Timestamp to_;
        /// <summary>
        ///Окончание периода в часовом поясе UTC.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp To
        {
            get { return to_; }
            set
            {
                to_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as GenerateBrokerReportRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(GenerateBrokerReportRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (AccountId != other.AccountId) return false;
            if (!object.Equals(From, other.From)) return false;
            if (!object.Equals(To, other.To)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (AccountId.Length != 0) hash ^= AccountId.GetHashCode();
            if (from_ != null) hash ^= From.GetHashCode();
            if (to_ != null) hash ^= To.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (AccountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountId);
      }
      if (from_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(From);
      }
      if (to_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(To);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (AccountId.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(AccountId);
            }
            if (from_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(From);
            }
            if (to_ != null)
            {
                output.WriteRawTag(26);
                output.WriteMessage(To);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (AccountId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountId);
            }
            if (from_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
            }
            if (to_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(GenerateBrokerReportRequest other)
        {
            if (other == null)
            {
                return;
            }
            if (other.AccountId.Length != 0)
            {
                AccountId = other.AccountId;
            }
            if (other.from_ != null)
            {
                if (from_ == null)
                {
                    From = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                From.MergeFrom(other.From);
            }
            if (other.to_ != null)
            {
                if (to_ == null)
                {
                    To = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                To.MergeFrom(other.To);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountId = input.ReadString();
            break;
          }
          case 18: {
            if (from_ == null) {
              From = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(From);
            break;
          }
          case 26: {
            if (to_ == null) {
              To = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(To);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            AccountId = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            if (from_ == null)
                            {
                                From = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                            }
                            input.ReadMessage(From);
                            break;
                        }
                    case 26:
                        {
                            if (to_ == null)
                            {
                                To = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                            }
                            input.ReadMessage(To);
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class GenerateBrokerReportResponse : pb::IMessage<GenerateBrokerReportResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<GenerateBrokerReportResponse> _parser = new pb::MessageParser<GenerateBrokerReportResponse>(() => new GenerateBrokerReportResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<GenerateBrokerReportResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[18]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GenerateBrokerReportResponse()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GenerateBrokerReportResponse(GenerateBrokerReportResponse other) : this()
        {
            taskId_ = other.taskId_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GenerateBrokerReportResponse Clone()
        {
            return new GenerateBrokerReportResponse(this);
        }

        /// <summary>Field number for the "task_id" field.</summary>
        public const int TaskIdFieldNumber = 1;
        private string taskId_ = "";
        /// <summary>
        ///Идентификатор задачи формирования брокерского отчёта.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string TaskId
        {
            get { return taskId_; }
            set
            {
                taskId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as GenerateBrokerReportResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(GenerateBrokerReportResponse other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (TaskId != other.TaskId) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (TaskId.Length != 0) hash ^= TaskId.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (TaskId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TaskId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (TaskId.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(TaskId);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (TaskId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskId);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(GenerateBrokerReportResponse other)
        {
            if (other == null)
            {
                return;
            }
            if (other.TaskId.Length != 0)
            {
                TaskId = other.TaskId;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TaskId = input.ReadString();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            TaskId = input.ReadString();
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class GetBrokerReportRequest : pb::IMessage<GetBrokerReportRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<GetBrokerReportRequest> _parser = new pb::MessageParser<GetBrokerReportRequest>(() => new GetBrokerReportRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<GetBrokerReportRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[19]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetBrokerReportRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetBrokerReportRequest(GetBrokerReportRequest other) : this()
        {
            taskId_ = other.taskId_;
            page_ = other.page_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetBrokerReportRequest Clone()
        {
            return new GetBrokerReportRequest(this);
        }

        /// <summary>Field number for the "task_id" field.</summary>
        public const int TaskIdFieldNumber = 1;
        private string taskId_ = "";
        /// <summary>
        ///Идентификатор задачи формирования брокерского отчёта.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string TaskId
        {
            get { return taskId_; }
            set
            {
                taskId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "page" field.</summary>
        public const int PageFieldNumber = 2;
        private int page_;
        /// <summary>
        ///Номер страницы отчета (начинается с 1), значение по умолчанию: 0.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Page
        {
            get { return page_; }
            set
            {
                page_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as GetBrokerReportRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(GetBrokerReportRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (TaskId != other.TaskId) return false;
            if (Page != other.Page) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (TaskId.Length != 0) hash ^= TaskId.GetHashCode();
            if (Page != 0) hash ^= Page.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (TaskId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TaskId);
      }
      if (Page != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Page);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (TaskId.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(TaskId);
            }
            if (Page != 0)
            {
                output.WriteRawTag(16);
                output.WriteInt32(Page);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (TaskId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskId);
            }
            if (Page != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Page);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(GetBrokerReportRequest other)
        {
            if (other == null)
            {
                return;
            }
            if (other.TaskId.Length != 0)
            {
                TaskId = other.TaskId;
            }
            if (other.Page != 0)
            {
                Page = other.Page;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TaskId = input.ReadString();
            break;
          }
          case 16: {
            Page = input.ReadInt32();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            TaskId = input.ReadString();
                            break;
                        }
                    case 16:
                        {
                            Page = input.ReadInt32();
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class GetBrokerReportResponse : pb::IMessage<GetBrokerReportResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<GetBrokerReportResponse> _parser = new pb::MessageParser<GetBrokerReportResponse>(() => new GetBrokerReportResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<GetBrokerReportResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[20]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetBrokerReportResponse()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetBrokerReportResponse(GetBrokerReportResponse other) : this()
        {
            brokerReport_ = other.brokerReport_.Clone();
            itemsCount_ = other.itemsCount_;
            pagesCount_ = other.pagesCount_;
            page_ = other.page_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetBrokerReportResponse Clone()
        {
            return new GetBrokerReportResponse(this);
        }

        /// <summary>Field number for the "broker_report" field.</summary>
        public const int BrokerReportFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Tinkoff.Proto.InvestApi.V1.BrokerReport> _repeated_brokerReport_codec
            = pb::FieldCodec.ForMessage(10, global::Tinkoff.Proto.InvestApi.V1.BrokerReport.Parser);
        private readonly pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.BrokerReport> brokerReport_ = new pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.BrokerReport>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.BrokerReport> BrokerReport
        {
            get { return brokerReport_; }
        }

        /// <summary>Field number for the "itemsCount" field.</summary>
        public const int ItemsCountFieldNumber = 2;
        private int itemsCount_;
        /// <summary>
        ///Количество записей в отчете.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int ItemsCount
        {
            get { return itemsCount_; }
            set
            {
                itemsCount_ = value;
            }
        }

        /// <summary>Field number for the "pagesCount" field.</summary>
        public const int PagesCountFieldNumber = 3;
        private int pagesCount_;
        /// <summary>
        ///Количество страниц с данными отчета (начинается с 0).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int PagesCount
        {
            get { return pagesCount_; }
            set
            {
                pagesCount_ = value;
            }
        }

        /// <summary>Field number for the "page" field.</summary>
        public const int PageFieldNumber = 4;
        private int page_;
        /// <summary>
        ///Текущая страница (начинается с 0).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Page
        {
            get { return page_; }
            set
            {
                page_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as GetBrokerReportResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(GetBrokerReportResponse other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!brokerReport_.Equals(other.brokerReport_)) return false;
            if (ItemsCount != other.ItemsCount) return false;
            if (PagesCount != other.PagesCount) return false;
            if (Page != other.Page) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= brokerReport_.GetHashCode();
            if (ItemsCount != 0) hash ^= ItemsCount.GetHashCode();
            if (PagesCount != 0) hash ^= PagesCount.GetHashCode();
            if (Page != 0) hash ^= Page.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      brokerReport_.WriteTo(output, _repeated_brokerReport_codec);
      if (ItemsCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemsCount);
      }
      if (PagesCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PagesCount);
      }
      if (Page != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Page);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            brokerReport_.WriteTo(ref output, _repeated_brokerReport_codec);
            if (ItemsCount != 0)
            {
                output.WriteRawTag(16);
                output.WriteInt32(ItemsCount);
            }
            if (PagesCount != 0)
            {
                output.WriteRawTag(24);
                output.WriteInt32(PagesCount);
            }
            if (Page != 0)
            {
                output.WriteRawTag(32);
                output.WriteInt32(Page);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            size += brokerReport_.CalculateSize(_repeated_brokerReport_codec);
            if (ItemsCount != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemsCount);
            }
            if (PagesCount != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(PagesCount);
            }
            if (Page != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Page);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(GetBrokerReportResponse other)
        {
            if (other == null)
            {
                return;
            }
            brokerReport_.Add(other.brokerReport_);
            if (other.ItemsCount != 0)
            {
                ItemsCount = other.ItemsCount;
            }
            if (other.PagesCount != 0)
            {
                PagesCount = other.PagesCount;
            }
            if (other.Page != 0)
            {
                Page = other.Page;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            brokerReport_.AddEntriesFrom(input, _repeated_brokerReport_codec);
            break;
          }
          case 16: {
            ItemsCount = input.ReadInt32();
            break;
          }
          case 24: {
            PagesCount = input.ReadInt32();
            break;
          }
          case 32: {
            Page = input.ReadInt32();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            brokerReport_.AddEntriesFrom(ref input, _repeated_brokerReport_codec);
                            break;
                        }
                    case 16:
                        {
                            ItemsCount = input.ReadInt32();
                            break;
                        }
                    case 24:
                        {
                            PagesCount = input.ReadInt32();
                            break;
                        }
                    case 32:
                        {
                            Page = input.ReadInt32();
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class BrokerReport : pb::IMessage<BrokerReport>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<BrokerReport> _parser = new pb::MessageParser<BrokerReport>(() => new BrokerReport());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<BrokerReport> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[21]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BrokerReport()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BrokerReport(BrokerReport other) : this()
        {
            tradeId_ = other.tradeId_;
            orderId_ = other.orderId_;
            figi_ = other.figi_;
            executeSign_ = other.executeSign_;
            tradeDatetime_ = other.tradeDatetime_ != null ? other.tradeDatetime_.Clone() : null;
            exchange_ = other.exchange_;
            classCode_ = other.classCode_;
            direction_ = other.direction_;
            name_ = other.name_;
            ticker_ = other.ticker_;
            price_ = other.price_ != null ? other.price_.Clone() : null;
            quantity_ = other.quantity_;
            orderAmount_ = other.orderAmount_ != null ? other.orderAmount_.Clone() : null;
            aciValue_ = other.aciValue_ != null ? other.aciValue_.Clone() : null;
            totalOrderAmount_ = other.totalOrderAmount_ != null ? other.totalOrderAmount_.Clone() : null;
            brokerCommission_ = other.brokerCommission_ != null ? other.brokerCommission_.Clone() : null;
            exchangeCommission_ = other.exchangeCommission_ != null ? other.exchangeCommission_.Clone() : null;
            exchangeClearingCommission_ = other.exchangeClearingCommission_ != null ? other.exchangeClearingCommission_.Clone() : null;
            repoRate_ = other.repoRate_ != null ? other.repoRate_.Clone() : null;
            party_ = other.party_;
            clearValueDate_ = other.clearValueDate_ != null ? other.clearValueDate_.Clone() : null;
            secValueDate_ = other.secValueDate_ != null ? other.secValueDate_.Clone() : null;
            brokerStatus_ = other.brokerStatus_;
            separateAgreementType_ = other.separateAgreementType_;
            separateAgreementNumber_ = other.separateAgreementNumber_;
            separateAgreementDate_ = other.separateAgreementDate_;
            deliveryType_ = other.deliveryType_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BrokerReport Clone()
        {
            return new BrokerReport(this);
        }

        /// <summary>Field number for the "trade_id" field.</summary>
        public const int TradeIdFieldNumber = 1;
        private string tradeId_ = "";
        /// <summary>
        ///Номер сделки.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string TradeId
        {
            get { return tradeId_; }
            set
            {
                tradeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "order_id" field.</summary>
        public const int OrderIdFieldNumber = 2;
        private string orderId_ = "";
        /// <summary>
        ///Номер поручения.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string OrderId
        {
            get { return orderId_; }
            set
            {
                orderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "figi" field.</summary>
        public const int FigiFieldNumber = 3;
        private string figi_ = "";
        /// <summary>
        ///Figi-идентификатор инструмента.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Figi
        {
            get { return figi_; }
            set
            {
                figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "execute_sign" field.</summary>
        public const int ExecuteSignFieldNumber = 4;
        private string executeSign_ = "";
        /// <summary>
        ///Признак исполнения.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ExecuteSign
        {
            get { return executeSign_; }
            set
            {
                executeSign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "trade_datetime" field.</summary>
        public const int TradeDatetimeFieldNumber = 5;
        private global::Google.Protobuf.WellKnownTypes.Timestamp tradeDatetime_;
        /// <summary>
        ///Дата и время заключения в часовом поясе UTC.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp TradeDatetime
        {
            get { return tradeDatetime_; }
            set
            {
                tradeDatetime_ = value;
            }
        }

        /// <summary>Field number for the "exchange" field.</summary>
        public const int ExchangeFieldNumber = 6;
        private string exchange_ = "";
        /// <summary>
        ///Торговая площадка.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Exchange
        {
            get { return exchange_; }
            set
            {
                exchange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "class_code" field.</summary>
        public const int ClassCodeFieldNumber = 7;
        private string classCode_ = "";
        /// <summary>
        ///Режим торгов.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ClassCode
        {
            get { return classCode_; }
            set
            {
                classCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "direction" field.</summary>
        public const int DirectionFieldNumber = 8;
        private string direction_ = "";
        /// <summary>
        ///Вид сделки.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Direction
        {
            get { return direction_; }
            set
            {
                direction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 9;
        private string name_ = "";
        /// <summary>
        ///Сокращённое наименование актива.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name
        {
            get { return name_; }
            set
            {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "ticker" field.</summary>
        public const int TickerFieldNumber = 10;
        private string ticker_ = "";
        /// <summary>
        ///Код актива.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Ticker
        {
            get { return ticker_; }
            set
            {
                ticker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "price" field.</summary>
        public const int PriceFieldNumber = 11;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue price_;
        /// <summary>
        ///Цена за единицу.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue Price
        {
            get { return price_; }
            set
            {
                price_ = value;
            }
        }

        /// <summary>Field number for the "quantity" field.</summary>
        public const int QuantityFieldNumber = 12;
        private long quantity_;
        /// <summary>
        ///Количество.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long Quantity
        {
            get { return quantity_; }
            set
            {
                quantity_ = value;
            }
        }

        /// <summary>Field number for the "order_amount" field.</summary>
        public const int OrderAmountFieldNumber = 13;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue orderAmount_;
        /// <summary>
        ///Сумма (без НКД).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue OrderAmount
        {
            get { return orderAmount_; }
            set
            {
                orderAmount_ = value;
            }
        }

        /// <summary>Field number for the "aci_value" field.</summary>
        public const int AciValueFieldNumber = 14;
        private global::Tinkoff.Proto.InvestApi.V1.Quotation aciValue_;
        /// <summary>
        ///НКД.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.Quotation AciValue
        {
            get { return aciValue_; }
            set
            {
                aciValue_ = value;
            }
        }

        /// <summary>Field number for the "total_order_amount" field.</summary>
        public const int TotalOrderAmountFieldNumber = 15;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue totalOrderAmount_;
        /// <summary>
        ///Сумма сделки.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue TotalOrderAmount
        {
            get { return totalOrderAmount_; }
            set
            {
                totalOrderAmount_ = value;
            }
        }

        /// <summary>Field number for the "broker_commission" field.</summary>
        public const int BrokerCommissionFieldNumber = 16;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue brokerCommission_;
        /// <summary>
        ///Комиссия брокера.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue BrokerCommission
        {
            get { return brokerCommission_; }
            set
            {
                brokerCommission_ = value;
            }
        }

        /// <summary>Field number for the "exchange_commission" field.</summary>
        public const int ExchangeCommissionFieldNumber = 17;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue exchangeCommission_;
        /// <summary>
        ///Комиссия биржи.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue ExchangeCommission
        {
            get { return exchangeCommission_; }
            set
            {
                exchangeCommission_ = value;
            }
        }

        /// <summary>Field number for the "exchange_clearing_commission" field.</summary>
        public const int ExchangeClearingCommissionFieldNumber = 18;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue exchangeClearingCommission_;
        /// <summary>
        ///Комиссия клир. центра.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue ExchangeClearingCommission
        {
            get { return exchangeClearingCommission_; }
            set
            {
                exchangeClearingCommission_ = value;
            }
        }

        /// <summary>Field number for the "repo_rate" field.</summary>
        public const int RepoRateFieldNumber = 19;
        private global::Tinkoff.Proto.InvestApi.V1.Quotation repoRate_;
        /// <summary>
        ///Ставка РЕПО (%).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.Quotation RepoRate
        {
            get { return repoRate_; }
            set
            {
                repoRate_ = value;
            }
        }

        /// <summary>Field number for the "party" field.</summary>
        public const int PartyFieldNumber = 20;
        private string party_ = "";
        /// <summary>
        ///Контрагент/Брокер.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Party
        {
            get { return party_; }
            set
            {
                party_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "clear_value_date" field.</summary>
        public const int ClearValueDateFieldNumber = 21;
        private global::Google.Protobuf.WellKnownTypes.Timestamp clearValueDate_;
        /// <summary>
        ///Дата расчётов в часовом поясе UTC.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp ClearValueDate
        {
            get { return clearValueDate_; }
            set
            {
                clearValueDate_ = value;
            }
        }

        /// <summary>Field number for the "sec_value_date" field.</summary>
        public const int SecValueDateFieldNumber = 22;
        private global::Google.Protobuf.WellKnownTypes.Timestamp secValueDate_;
        /// <summary>
        ///Дата поставки в часовом поясе UTC.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp SecValueDate
        {
            get { return secValueDate_; }
            set
            {
                secValueDate_ = value;
            }
        }

        /// <summary>Field number for the "broker_status" field.</summary>
        public const int BrokerStatusFieldNumber = 23;
        private string brokerStatus_ = "";
        /// <summary>
        ///Статус брокера.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string BrokerStatus
        {
            get { return brokerStatus_; }
            set
            {
                brokerStatus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "separate_agreement_type" field.</summary>
        public const int SeparateAgreementTypeFieldNumber = 24;
        private string separateAgreementType_ = "";
        /// <summary>
        ///Тип дог.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string SeparateAgreementType
        {
            get { return separateAgreementType_; }
            set
            {
                separateAgreementType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "separate_agreement_number" field.</summary>
        public const int SeparateAgreementNumberFieldNumber = 25;
        private string separateAgreementNumber_ = "";
        /// <summary>
        ///Номер дог.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string SeparateAgreementNumber
        {
            get { return separateAgreementNumber_; }
            set
            {
                separateAgreementNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "separate_agreement_date" field.</summary>
        public const int SeparateAgreementDateFieldNumber = 26;
        private string separateAgreementDate_ = "";
        /// <summary>
        ///Дата дог.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string SeparateAgreementDate
        {
            get { return separateAgreementDate_; }
            set
            {
                separateAgreementDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "delivery_type" field.</summary>
        public const int DeliveryTypeFieldNumber = 27;
        private string deliveryType_ = "";
        /// <summary>
        ///Тип расчёта по сделке.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string DeliveryType
        {
            get { return deliveryType_; }
            set
            {
                deliveryType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as BrokerReport);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(BrokerReport other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (TradeId != other.TradeId) return false;
            if (OrderId != other.OrderId) return false;
            if (Figi != other.Figi) return false;
            if (ExecuteSign != other.ExecuteSign) return false;
            if (!object.Equals(TradeDatetime, other.TradeDatetime)) return false;
            if (Exchange != other.Exchange) return false;
            if (ClassCode != other.ClassCode) return false;
            if (Direction != other.Direction) return false;
            if (Name != other.Name) return false;
            if (Ticker != other.Ticker) return false;
            if (!object.Equals(Price, other.Price)) return false;
            if (Quantity != other.Quantity) return false;
            if (!object.Equals(OrderAmount, other.OrderAmount)) return false;
            if (!object.Equals(AciValue, other.AciValue)) return false;
            if (!object.Equals(TotalOrderAmount, other.TotalOrderAmount)) return false;
            if (!object.Equals(BrokerCommission, other.BrokerCommission)) return false;
            if (!object.Equals(ExchangeCommission, other.ExchangeCommission)) return false;
            if (!object.Equals(ExchangeClearingCommission, other.ExchangeClearingCommission)) return false;
            if (!object.Equals(RepoRate, other.RepoRate)) return false;
            if (Party != other.Party) return false;
            if (!object.Equals(ClearValueDate, other.ClearValueDate)) return false;
            if (!object.Equals(SecValueDate, other.SecValueDate)) return false;
            if (BrokerStatus != other.BrokerStatus) return false;
            if (SeparateAgreementType != other.SeparateAgreementType) return false;
            if (SeparateAgreementNumber != other.SeparateAgreementNumber) return false;
            if (SeparateAgreementDate != other.SeparateAgreementDate) return false;
            if (DeliveryType != other.DeliveryType) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (TradeId.Length != 0) hash ^= TradeId.GetHashCode();
            if (OrderId.Length != 0) hash ^= OrderId.GetHashCode();
            if (Figi.Length != 0) hash ^= Figi.GetHashCode();
            if (ExecuteSign.Length != 0) hash ^= ExecuteSign.GetHashCode();
            if (tradeDatetime_ != null) hash ^= TradeDatetime.GetHashCode();
            if (Exchange.Length != 0) hash ^= Exchange.GetHashCode();
            if (ClassCode.Length != 0) hash ^= ClassCode.GetHashCode();
            if (Direction.Length != 0) hash ^= Direction.GetHashCode();
            if (Name.Length != 0) hash ^= Name.GetHashCode();
            if (Ticker.Length != 0) hash ^= Ticker.GetHashCode();
            if (price_ != null) hash ^= Price.GetHashCode();
            if (Quantity != 0L) hash ^= Quantity.GetHashCode();
            if (orderAmount_ != null) hash ^= OrderAmount.GetHashCode();
            if (aciValue_ != null) hash ^= AciValue.GetHashCode();
            if (totalOrderAmount_ != null) hash ^= TotalOrderAmount.GetHashCode();
            if (brokerCommission_ != null) hash ^= BrokerCommission.GetHashCode();
            if (exchangeCommission_ != null) hash ^= ExchangeCommission.GetHashCode();
            if (exchangeClearingCommission_ != null) hash ^= ExchangeClearingCommission.GetHashCode();
            if (repoRate_ != null) hash ^= RepoRate.GetHashCode();
            if (Party.Length != 0) hash ^= Party.GetHashCode();
            if (clearValueDate_ != null) hash ^= ClearValueDate.GetHashCode();
            if (secValueDate_ != null) hash ^= SecValueDate.GetHashCode();
            if (BrokerStatus.Length != 0) hash ^= BrokerStatus.GetHashCode();
            if (SeparateAgreementType.Length != 0) hash ^= SeparateAgreementType.GetHashCode();
            if (SeparateAgreementNumber.Length != 0) hash ^= SeparateAgreementNumber.GetHashCode();
            if (SeparateAgreementDate.Length != 0) hash ^= SeparateAgreementDate.GetHashCode();
            if (DeliveryType.Length != 0) hash ^= DeliveryType.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (TradeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TradeId);
      }
      if (OrderId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OrderId);
      }
      if (Figi.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Figi);
      }
      if (ExecuteSign.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ExecuteSign);
      }
      if (tradeDatetime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(TradeDatetime);
      }
      if (Exchange.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Exchange);
      }
      if (ClassCode.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ClassCode);
      }
      if (Direction.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Direction);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Name);
      }
      if (Ticker.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Ticker);
      }
      if (price_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Price);
      }
      if (Quantity != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(Quantity);
      }
      if (orderAmount_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(OrderAmount);
      }
      if (aciValue_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(AciValue);
      }
      if (totalOrderAmount_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(TotalOrderAmount);
      }
      if (brokerCommission_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(BrokerCommission);
      }
      if (exchangeCommission_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ExchangeCommission);
      }
      if (exchangeClearingCommission_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(ExchangeClearingCommission);
      }
      if (repoRate_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(RepoRate);
      }
      if (Party.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(Party);
      }
      if (clearValueDate_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(ClearValueDate);
      }
      if (secValueDate_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(SecValueDate);
      }
      if (BrokerStatus.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(BrokerStatus);
      }
      if (SeparateAgreementType.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(SeparateAgreementType);
      }
      if (SeparateAgreementNumber.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(SeparateAgreementNumber);
      }
      if (SeparateAgreementDate.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(SeparateAgreementDate);
      }
      if (DeliveryType.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(DeliveryType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (TradeId.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(TradeId);
            }
            if (OrderId.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(OrderId);
            }
            if (Figi.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(Figi);
            }
            if (ExecuteSign.Length != 0)
            {
                output.WriteRawTag(34);
                output.WriteString(ExecuteSign);
            }
            if (tradeDatetime_ != null)
            {
                output.WriteRawTag(42);
                output.WriteMessage(TradeDatetime);
            }
            if (Exchange.Length != 0)
            {
                output.WriteRawTag(50);
                output.WriteString(Exchange);
            }
            if (ClassCode.Length != 0)
            {
                output.WriteRawTag(58);
                output.WriteString(ClassCode);
            }
            if (Direction.Length != 0)
            {
                output.WriteRawTag(66);
                output.WriteString(Direction);
            }
            if (Name.Length != 0)
            {
                output.WriteRawTag(74);
                output.WriteString(Name);
            }
            if (Ticker.Length != 0)
            {
                output.WriteRawTag(82);
                output.WriteString(Ticker);
            }
            if (price_ != null)
            {
                output.WriteRawTag(90);
                output.WriteMessage(Price);
            }
            if (Quantity != 0L)
            {
                output.WriteRawTag(96);
                output.WriteInt64(Quantity);
            }
            if (orderAmount_ != null)
            {
                output.WriteRawTag(106);
                output.WriteMessage(OrderAmount);
            }
            if (aciValue_ != null)
            {
                output.WriteRawTag(114);
                output.WriteMessage(AciValue);
            }
            if (totalOrderAmount_ != null)
            {
                output.WriteRawTag(122);
                output.WriteMessage(TotalOrderAmount);
            }
            if (brokerCommission_ != null)
            {
                output.WriteRawTag(130, 1);
                output.WriteMessage(BrokerCommission);
            }
            if (exchangeCommission_ != null)
            {
                output.WriteRawTag(138, 1);
                output.WriteMessage(ExchangeCommission);
            }
            if (exchangeClearingCommission_ != null)
            {
                output.WriteRawTag(146, 1);
                output.WriteMessage(ExchangeClearingCommission);
            }
            if (repoRate_ != null)
            {
                output.WriteRawTag(154, 1);
                output.WriteMessage(RepoRate);
            }
            if (Party.Length != 0)
            {
                output.WriteRawTag(162, 1);
                output.WriteString(Party);
            }
            if (clearValueDate_ != null)
            {
                output.WriteRawTag(170, 1);
                output.WriteMessage(ClearValueDate);
            }
            if (secValueDate_ != null)
            {
                output.WriteRawTag(178, 1);
                output.WriteMessage(SecValueDate);
            }
            if (BrokerStatus.Length != 0)
            {
                output.WriteRawTag(186, 1);
                output.WriteString(BrokerStatus);
            }
            if (SeparateAgreementType.Length != 0)
            {
                output.WriteRawTag(194, 1);
                output.WriteString(SeparateAgreementType);
            }
            if (SeparateAgreementNumber.Length != 0)
            {
                output.WriteRawTag(202, 1);
                output.WriteString(SeparateAgreementNumber);
            }
            if (SeparateAgreementDate.Length != 0)
            {
                output.WriteRawTag(210, 1);
                output.WriteString(SeparateAgreementDate);
            }
            if (DeliveryType.Length != 0)
            {
                output.WriteRawTag(218, 1);
                output.WriteString(DeliveryType);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (TradeId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(TradeId);
            }
            if (OrderId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderId);
            }
            if (Figi.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
            }
            if (ExecuteSign.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ExecuteSign);
            }
            if (tradeDatetime_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(TradeDatetime);
            }
            if (Exchange.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Exchange);
            }
            if (ClassCode.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ClassCode);
            }
            if (Direction.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Direction);
            }
            if (Name.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
            }
            if (Ticker.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Ticker);
            }
            if (price_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Price);
            }
            if (Quantity != 0L)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(Quantity);
            }
            if (orderAmount_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(OrderAmount);
            }
            if (aciValue_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(AciValue);
            }
            if (totalOrderAmount_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(TotalOrderAmount);
            }
            if (brokerCommission_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(BrokerCommission);
            }
            if (exchangeCommission_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(ExchangeCommission);
            }
            if (exchangeClearingCommission_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(ExchangeClearingCommission);
            }
            if (repoRate_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(RepoRate);
            }
            if (Party.Length != 0)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(Party);
            }
            if (clearValueDate_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(ClearValueDate);
            }
            if (secValueDate_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(SecValueDate);
            }
            if (BrokerStatus.Length != 0)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(BrokerStatus);
            }
            if (SeparateAgreementType.Length != 0)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(SeparateAgreementType);
            }
            if (SeparateAgreementNumber.Length != 0)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(SeparateAgreementNumber);
            }
            if (SeparateAgreementDate.Length != 0)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(SeparateAgreementDate);
            }
            if (DeliveryType.Length != 0)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(DeliveryType);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(BrokerReport other)
        {
            if (other == null)
            {
                return;
            }
            if (other.TradeId.Length != 0)
            {
                TradeId = other.TradeId;
            }
            if (other.OrderId.Length != 0)
            {
                OrderId = other.OrderId;
            }
            if (other.Figi.Length != 0)
            {
                Figi = other.Figi;
            }
            if (other.ExecuteSign.Length != 0)
            {
                ExecuteSign = other.ExecuteSign;
            }
            if (other.tradeDatetime_ != null)
            {
                if (tradeDatetime_ == null)
                {
                    TradeDatetime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                TradeDatetime.MergeFrom(other.TradeDatetime);
            }
            if (other.Exchange.Length != 0)
            {
                Exchange = other.Exchange;
            }
            if (other.ClassCode.Length != 0)
            {
                ClassCode = other.ClassCode;
            }
            if (other.Direction.Length != 0)
            {
                Direction = other.Direction;
            }
            if (other.Name.Length != 0)
            {
                Name = other.Name;
            }
            if (other.Ticker.Length != 0)
            {
                Ticker = other.Ticker;
            }
            if (other.price_ != null)
            {
                if (price_ == null)
                {
                    Price = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                Price.MergeFrom(other.Price);
            }
            if (other.Quantity != 0L)
            {
                Quantity = other.Quantity;
            }
            if (other.orderAmount_ != null)
            {
                if (orderAmount_ == null)
                {
                    OrderAmount = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                OrderAmount.MergeFrom(other.OrderAmount);
            }
            if (other.aciValue_ != null)
            {
                if (aciValue_ == null)
                {
                    AciValue = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                }
                AciValue.MergeFrom(other.AciValue);
            }
            if (other.totalOrderAmount_ != null)
            {
                if (totalOrderAmount_ == null)
                {
                    TotalOrderAmount = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                TotalOrderAmount.MergeFrom(other.TotalOrderAmount);
            }
            if (other.brokerCommission_ != null)
            {
                if (brokerCommission_ == null)
                {
                    BrokerCommission = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                BrokerCommission.MergeFrom(other.BrokerCommission);
            }
            if (other.exchangeCommission_ != null)
            {
                if (exchangeCommission_ == null)
                {
                    ExchangeCommission = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                ExchangeCommission.MergeFrom(other.ExchangeCommission);
            }
            if (other.exchangeClearingCommission_ != null)
            {
                if (exchangeClearingCommission_ == null)
                {
                    ExchangeClearingCommission = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                ExchangeClearingCommission.MergeFrom(other.ExchangeClearingCommission);
            }
            if (other.repoRate_ != null)
            {
                if (repoRate_ == null)
                {
                    RepoRate = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                }
                RepoRate.MergeFrom(other.RepoRate);
            }
            if (other.Party.Length != 0)
            {
                Party = other.Party;
            }
            if (other.clearValueDate_ != null)
            {
                if (clearValueDate_ == null)
                {
                    ClearValueDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                ClearValueDate.MergeFrom(other.ClearValueDate);
            }
            if (other.secValueDate_ != null)
            {
                if (secValueDate_ == null)
                {
                    SecValueDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                SecValueDate.MergeFrom(other.SecValueDate);
            }
            if (other.BrokerStatus.Length != 0)
            {
                BrokerStatus = other.BrokerStatus;
            }
            if (other.SeparateAgreementType.Length != 0)
            {
                SeparateAgreementType = other.SeparateAgreementType;
            }
            if (other.SeparateAgreementNumber.Length != 0)
            {
                SeparateAgreementNumber = other.SeparateAgreementNumber;
            }
            if (other.SeparateAgreementDate.Length != 0)
            {
                SeparateAgreementDate = other.SeparateAgreementDate;
            }
            if (other.DeliveryType.Length != 0)
            {
                DeliveryType = other.DeliveryType;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TradeId = input.ReadString();
            break;
          }
          case 18: {
            OrderId = input.ReadString();
            break;
          }
          case 26: {
            Figi = input.ReadString();
            break;
          }
          case 34: {
            ExecuteSign = input.ReadString();
            break;
          }
          case 42: {
            if (tradeDatetime_ == null) {
              TradeDatetime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(TradeDatetime);
            break;
          }
          case 50: {
            Exchange = input.ReadString();
            break;
          }
          case 58: {
            ClassCode = input.ReadString();
            break;
          }
          case 66: {
            Direction = input.ReadString();
            break;
          }
          case 74: {
            Name = input.ReadString();
            break;
          }
          case 82: {
            Ticker = input.ReadString();
            break;
          }
          case 90: {
            if (price_ == null) {
              Price = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(Price);
            break;
          }
          case 96: {
            Quantity = input.ReadInt64();
            break;
          }
          case 106: {
            if (orderAmount_ == null) {
              OrderAmount = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(OrderAmount);
            break;
          }
          case 114: {
            if (aciValue_ == null) {
              AciValue = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
            }
            input.ReadMessage(AciValue);
            break;
          }
          case 122: {
            if (totalOrderAmount_ == null) {
              TotalOrderAmount = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(TotalOrderAmount);
            break;
          }
          case 130: {
            if (brokerCommission_ == null) {
              BrokerCommission = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(BrokerCommission);
            break;
          }
          case 138: {
            if (exchangeCommission_ == null) {
              ExchangeCommission = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(ExchangeCommission);
            break;
          }
          case 146: {
            if (exchangeClearingCommission_ == null) {
              ExchangeClearingCommission = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(ExchangeClearingCommission);
            break;
          }
          case 154: {
            if (repoRate_ == null) {
              RepoRate = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
            }
            input.ReadMessage(RepoRate);
            break;
          }
          case 162: {
            Party = input.ReadString();
            break;
          }
          case 170: {
            if (clearValueDate_ == null) {
              ClearValueDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ClearValueDate);
            break;
          }
          case 178: {
            if (secValueDate_ == null) {
              SecValueDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SecValueDate);
            break;
          }
          case 186: {
            BrokerStatus = input.ReadString();
            break;
          }
          case 194: {
            SeparateAgreementType = input.ReadString();
            break;
          }
          case 202: {
            SeparateAgreementNumber = input.ReadString();
            break;
          }
          case 210: {
            SeparateAgreementDate = input.ReadString();
            break;
          }
          case 218: {
            DeliveryType = input.ReadString();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            TradeId = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            OrderId = input.ReadString();
                            break;
                        }
                    case 26:
                        {
                            Figi = input.ReadString();
                            break;
                        }
                    case 34:
                        {
                            ExecuteSign = input.ReadString();
                            break;
                        }
                    case 42:
                        {
                            if (tradeDatetime_ == null)
                            {
                                TradeDatetime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                            }
                            input.ReadMessage(TradeDatetime);
                            break;
                        }
                    case 50:
                        {
                            Exchange = input.ReadString();
                            break;
                        }
                    case 58:
                        {
                            ClassCode = input.ReadString();
                            break;
                        }
                    case 66:
                        {
                            Direction = input.ReadString();
                            break;
                        }
                    case 74:
                        {
                            Name = input.ReadString();
                            break;
                        }
                    case 82:
                        {
                            Ticker = input.ReadString();
                            break;
                        }
                    case 90:
                        {
                            if (price_ == null)
                            {
                                Price = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(Price);
                            break;
                        }
                    case 96:
                        {
                            Quantity = input.ReadInt64();
                            break;
                        }
                    case 106:
                        {
                            if (orderAmount_ == null)
                            {
                                OrderAmount = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(OrderAmount);
                            break;
                        }
                    case 114:
                        {
                            if (aciValue_ == null)
                            {
                                AciValue = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                            }
                            input.ReadMessage(AciValue);
                            break;
                        }
                    case 122:
                        {
                            if (totalOrderAmount_ == null)
                            {
                                TotalOrderAmount = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(TotalOrderAmount);
                            break;
                        }
                    case 130:
                        {
                            if (brokerCommission_ == null)
                            {
                                BrokerCommission = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(BrokerCommission);
                            break;
                        }
                    case 138:
                        {
                            if (exchangeCommission_ == null)
                            {
                                ExchangeCommission = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(ExchangeCommission);
                            break;
                        }
                    case 146:
                        {
                            if (exchangeClearingCommission_ == null)
                            {
                                ExchangeClearingCommission = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(ExchangeClearingCommission);
                            break;
                        }
                    case 154:
                        {
                            if (repoRate_ == null)
                            {
                                RepoRate = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                            }
                            input.ReadMessage(RepoRate);
                            break;
                        }
                    case 162:
                        {
                            Party = input.ReadString();
                            break;
                        }
                    case 170:
                        {
                            if (clearValueDate_ == null)
                            {
                                ClearValueDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                            }
                            input.ReadMessage(ClearValueDate);
                            break;
                        }
                    case 178:
                        {
                            if (secValueDate_ == null)
                            {
                                SecValueDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                            }
                            input.ReadMessage(SecValueDate);
                            break;
                        }
                    case 186:
                        {
                            BrokerStatus = input.ReadString();
                            break;
                        }
                    case 194:
                        {
                            SeparateAgreementType = input.ReadString();
                            break;
                        }
                    case 202:
                        {
                            SeparateAgreementNumber = input.ReadString();
                            break;
                        }
                    case 210:
                        {
                            SeparateAgreementDate = input.ReadString();
                            break;
                        }
                    case 218:
                        {
                            DeliveryType = input.ReadString();
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class GetDividendsForeignIssuerRequest : pb::IMessage<GetDividendsForeignIssuerRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<GetDividendsForeignIssuerRequest> _parser = new pb::MessageParser<GetDividendsForeignIssuerRequest>(() => new GetDividendsForeignIssuerRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<GetDividendsForeignIssuerRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[22]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetDividendsForeignIssuerRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetDividendsForeignIssuerRequest(GetDividendsForeignIssuerRequest other) : this()
        {
            switch (other.PayloadCase)
            {
                case PayloadOneofCase.GenerateDivForeignIssuerReport:
                    GenerateDivForeignIssuerReport = other.GenerateDivForeignIssuerReport.Clone();
                    break;
                case PayloadOneofCase.GetDivForeignIssuerReport:
                    GetDivForeignIssuerReport = other.GetDivForeignIssuerReport.Clone();
                    break;
            }

            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetDividendsForeignIssuerRequest Clone()
        {
            return new GetDividendsForeignIssuerRequest(this);
        }

        /// <summary>Field number for the "generate_div_foreign_issuer_report" field.</summary>
        public const int GenerateDivForeignIssuerReportFieldNumber = 1;
        /// <summary>
        ///Объект запроса формирования отчёта.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.GenerateDividendsForeignIssuerReportRequest GenerateDivForeignIssuerReport
        {
            get { return payloadCase_ == PayloadOneofCase.GenerateDivForeignIssuerReport ? (global::Tinkoff.Proto.InvestApi.V1.GenerateDividendsForeignIssuerReportRequest)payload_ : null; }
            set
            {
                payload_ = value;
                payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GenerateDivForeignIssuerReport;
            }
        }

        /// <summary>Field number for the "get_div_foreign_issuer_report" field.</summary>
        public const int GetDivForeignIssuerReportFieldNumber = 2;
        /// <summary>
        ///Объект запроса сформированного отчёта.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.GetDividendsForeignIssuerReportRequest GetDivForeignIssuerReport
        {
            get { return payloadCase_ == PayloadOneofCase.GetDivForeignIssuerReport ? (global::Tinkoff.Proto.InvestApi.V1.GetDividendsForeignIssuerReportRequest)payload_ : null; }
            set
            {
                payload_ = value;
                payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetDivForeignIssuerReport;
            }
        }

        private object payload_;
        /// <summary>Enum of possible cases for the "payload" oneof.</summary>
        public enum PayloadOneofCase
        {
            None = 0,
            GenerateDivForeignIssuerReport = 1,
            GetDivForeignIssuerReport = 2,
        }
        private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PayloadOneofCase PayloadCase
        {
            get { return payloadCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPayload()
        {
            payloadCase_ = PayloadOneofCase.None;
            payload_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as GetDividendsForeignIssuerRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(GetDividendsForeignIssuerRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(GenerateDivForeignIssuerReport, other.GenerateDivForeignIssuerReport)) return false;
            if (!object.Equals(GetDivForeignIssuerReport, other.GetDivForeignIssuerReport)) return false;
            if (PayloadCase != other.PayloadCase) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (payloadCase_ == PayloadOneofCase.GenerateDivForeignIssuerReport) hash ^= GenerateDivForeignIssuerReport.GetHashCode();
            if (payloadCase_ == PayloadOneofCase.GetDivForeignIssuerReport) hash ^= GetDivForeignIssuerReport.GetHashCode();
            hash ^= (int)payloadCase_;
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (payloadCase_ == PayloadOneofCase.GenerateDivForeignIssuerReport) {
        output.WriteRawTag(10);
        output.WriteMessage(GenerateDivForeignIssuerReport);
      }
      if (payloadCase_ == PayloadOneofCase.GetDivForeignIssuerReport) {
        output.WriteRawTag(18);
        output.WriteMessage(GetDivForeignIssuerReport);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (payloadCase_ == PayloadOneofCase.GenerateDivForeignIssuerReport)
            {
                output.WriteRawTag(10);
                output.WriteMessage(GenerateDivForeignIssuerReport);
            }
            if (payloadCase_ == PayloadOneofCase.GetDivForeignIssuerReport)
            {
                output.WriteRawTag(18);
                output.WriteMessage(GetDivForeignIssuerReport);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (payloadCase_ == PayloadOneofCase.GenerateDivForeignIssuerReport)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(GenerateDivForeignIssuerReport);
            }
            if (payloadCase_ == PayloadOneofCase.GetDivForeignIssuerReport)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetDivForeignIssuerReport);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(GetDividendsForeignIssuerRequest other)
        {
            if (other == null)
            {
                return;
            }
            switch (other.PayloadCase)
            {
                case PayloadOneofCase.GenerateDivForeignIssuerReport:
                    if (GenerateDivForeignIssuerReport == null)
                    {
                        GenerateDivForeignIssuerReport = new global::Tinkoff.Proto.InvestApi.V1.GenerateDividendsForeignIssuerReportRequest();
                    }
                    GenerateDivForeignIssuerReport.MergeFrom(other.GenerateDivForeignIssuerReport);
                    break;
                case PayloadOneofCase.GetDivForeignIssuerReport:
                    if (GetDivForeignIssuerReport == null)
                    {
                        GetDivForeignIssuerReport = new global::Tinkoff.Proto.InvestApi.V1.GetDividendsForeignIssuerReportRequest();
                    }
                    GetDivForeignIssuerReport.MergeFrom(other.GetDivForeignIssuerReport);
                    break;
            }

            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Tinkoff.Proto.InvestApi.V1.GenerateDividendsForeignIssuerReportRequest subBuilder = new global::Tinkoff.Proto.InvestApi.V1.GenerateDividendsForeignIssuerReportRequest();
            if (payloadCase_ == PayloadOneofCase.GenerateDivForeignIssuerReport) {
              subBuilder.MergeFrom(GenerateDivForeignIssuerReport);
            }
            input.ReadMessage(subBuilder);
            GenerateDivForeignIssuerReport = subBuilder;
            break;
          }
          case 18: {
            global::Tinkoff.Proto.InvestApi.V1.GetDividendsForeignIssuerReportRequest subBuilder = new global::Tinkoff.Proto.InvestApi.V1.GetDividendsForeignIssuerReportRequest();
            if (payloadCase_ == PayloadOneofCase.GetDivForeignIssuerReport) {
              subBuilder.MergeFrom(GetDivForeignIssuerReport);
            }
            input.ReadMessage(subBuilder);
            GetDivForeignIssuerReport = subBuilder;
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            global::Tinkoff.Proto.InvestApi.V1.GenerateDividendsForeignIssuerReportRequest subBuilder = new global::Tinkoff.Proto.InvestApi.V1.GenerateDividendsForeignIssuerReportRequest();
                            if (payloadCase_ == PayloadOneofCase.GenerateDivForeignIssuerReport)
                            {
                                subBuilder.MergeFrom(GenerateDivForeignIssuerReport);
                            }
                            input.ReadMessage(subBuilder);
                            GenerateDivForeignIssuerReport = subBuilder;
                            break;
                        }
                    case 18:
                        {
                            global::Tinkoff.Proto.InvestApi.V1.GetDividendsForeignIssuerReportRequest subBuilder = new global::Tinkoff.Proto.InvestApi.V1.GetDividendsForeignIssuerReportRequest();
                            if (payloadCase_ == PayloadOneofCase.GetDivForeignIssuerReport)
                            {
                                subBuilder.MergeFrom(GetDivForeignIssuerReport);
                            }
                            input.ReadMessage(subBuilder);
                            GetDivForeignIssuerReport = subBuilder;
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class GetDividendsForeignIssuerResponse : pb::IMessage<GetDividendsForeignIssuerResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<GetDividendsForeignIssuerResponse> _parser = new pb::MessageParser<GetDividendsForeignIssuerResponse>(() => new GetDividendsForeignIssuerResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<GetDividendsForeignIssuerResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[23]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetDividendsForeignIssuerResponse()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetDividendsForeignIssuerResponse(GetDividendsForeignIssuerResponse other) : this()
        {
            switch (other.PayloadCase)
            {
                case PayloadOneofCase.GenerateDivForeignIssuerReportResponse:
                    GenerateDivForeignIssuerReportResponse = other.GenerateDivForeignIssuerReportResponse.Clone();
                    break;
                case PayloadOneofCase.DivForeignIssuerReport:
                    DivForeignIssuerReport = other.DivForeignIssuerReport.Clone();
                    break;
            }

            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetDividendsForeignIssuerResponse Clone()
        {
            return new GetDividendsForeignIssuerResponse(this);
        }

        /// <summary>Field number for the "generate_div_foreign_issuer_report_response" field.</summary>
        public const int GenerateDivForeignIssuerReportResponseFieldNumber = 1;
        /// <summary>
        ///Объект результата задачи запуска формирования отчёта.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.GenerateDividendsForeignIssuerReportResponse GenerateDivForeignIssuerReportResponse
        {
            get { return payloadCase_ == PayloadOneofCase.GenerateDivForeignIssuerReportResponse ? (global::Tinkoff.Proto.InvestApi.V1.GenerateDividendsForeignIssuerReportResponse)payload_ : null; }
            set
            {
                payload_ = value;
                payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GenerateDivForeignIssuerReportResponse;
            }
        }

        /// <summary>Field number for the "div_foreign_issuer_report" field.</summary>
        public const int DivForeignIssuerReportFieldNumber = 2;
        /// <summary>
        ///Отчёт "Справка о доходах за пределами РФ".
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.GetDividendsForeignIssuerReportResponse DivForeignIssuerReport
        {
            get { return payloadCase_ == PayloadOneofCase.DivForeignIssuerReport ? (global::Tinkoff.Proto.InvestApi.V1.GetDividendsForeignIssuerReportResponse)payload_ : null; }
            set
            {
                payload_ = value;
                payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.DivForeignIssuerReport;
            }
        }

        private object payload_;
        /// <summary>Enum of possible cases for the "payload" oneof.</summary>
        public enum PayloadOneofCase
        {
            None = 0,
            GenerateDivForeignIssuerReportResponse = 1,
            DivForeignIssuerReport = 2,
        }
        private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PayloadOneofCase PayloadCase
        {
            get { return payloadCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPayload()
        {
            payloadCase_ = PayloadOneofCase.None;
            payload_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as GetDividendsForeignIssuerResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(GetDividendsForeignIssuerResponse other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(GenerateDivForeignIssuerReportResponse, other.GenerateDivForeignIssuerReportResponse)) return false;
            if (!object.Equals(DivForeignIssuerReport, other.DivForeignIssuerReport)) return false;
            if (PayloadCase != other.PayloadCase) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (payloadCase_ == PayloadOneofCase.GenerateDivForeignIssuerReportResponse) hash ^= GenerateDivForeignIssuerReportResponse.GetHashCode();
            if (payloadCase_ == PayloadOneofCase.DivForeignIssuerReport) hash ^= DivForeignIssuerReport.GetHashCode();
            hash ^= (int)payloadCase_;
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (payloadCase_ == PayloadOneofCase.GenerateDivForeignIssuerReportResponse) {
        output.WriteRawTag(10);
        output.WriteMessage(GenerateDivForeignIssuerReportResponse);
      }
      if (payloadCase_ == PayloadOneofCase.DivForeignIssuerReport) {
        output.WriteRawTag(18);
        output.WriteMessage(DivForeignIssuerReport);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (payloadCase_ == PayloadOneofCase.GenerateDivForeignIssuerReportResponse)
            {
                output.WriteRawTag(10);
                output.WriteMessage(GenerateDivForeignIssuerReportResponse);
            }
            if (payloadCase_ == PayloadOneofCase.DivForeignIssuerReport)
            {
                output.WriteRawTag(18);
                output.WriteMessage(DivForeignIssuerReport);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (payloadCase_ == PayloadOneofCase.GenerateDivForeignIssuerReportResponse)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(GenerateDivForeignIssuerReportResponse);
            }
            if (payloadCase_ == PayloadOneofCase.DivForeignIssuerReport)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(DivForeignIssuerReport);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(GetDividendsForeignIssuerResponse other)
        {
            if (other == null)
            {
                return;
            }
            switch (other.PayloadCase)
            {
                case PayloadOneofCase.GenerateDivForeignIssuerReportResponse:
                    if (GenerateDivForeignIssuerReportResponse == null)
                    {
                        GenerateDivForeignIssuerReportResponse = new global::Tinkoff.Proto.InvestApi.V1.GenerateDividendsForeignIssuerReportResponse();
                    }
                    GenerateDivForeignIssuerReportResponse.MergeFrom(other.GenerateDivForeignIssuerReportResponse);
                    break;
                case PayloadOneofCase.DivForeignIssuerReport:
                    if (DivForeignIssuerReport == null)
                    {
                        DivForeignIssuerReport = new global::Tinkoff.Proto.InvestApi.V1.GetDividendsForeignIssuerReportResponse();
                    }
                    DivForeignIssuerReport.MergeFrom(other.DivForeignIssuerReport);
                    break;
            }

            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Tinkoff.Proto.InvestApi.V1.GenerateDividendsForeignIssuerReportResponse subBuilder = new global::Tinkoff.Proto.InvestApi.V1.GenerateDividendsForeignIssuerReportResponse();
            if (payloadCase_ == PayloadOneofCase.GenerateDivForeignIssuerReportResponse) {
              subBuilder.MergeFrom(GenerateDivForeignIssuerReportResponse);
            }
            input.ReadMessage(subBuilder);
            GenerateDivForeignIssuerReportResponse = subBuilder;
            break;
          }
          case 18: {
            global::Tinkoff.Proto.InvestApi.V1.GetDividendsForeignIssuerReportResponse subBuilder = new global::Tinkoff.Proto.InvestApi.V1.GetDividendsForeignIssuerReportResponse();
            if (payloadCase_ == PayloadOneofCase.DivForeignIssuerReport) {
              subBuilder.MergeFrom(DivForeignIssuerReport);
            }
            input.ReadMessage(subBuilder);
            DivForeignIssuerReport = subBuilder;
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            global::Tinkoff.Proto.InvestApi.V1.GenerateDividendsForeignIssuerReportResponse subBuilder = new global::Tinkoff.Proto.InvestApi.V1.GenerateDividendsForeignIssuerReportResponse();
                            if (payloadCase_ == PayloadOneofCase.GenerateDivForeignIssuerReportResponse)
                            {
                                subBuilder.MergeFrom(GenerateDivForeignIssuerReportResponse);
                            }
                            input.ReadMessage(subBuilder);
                            GenerateDivForeignIssuerReportResponse = subBuilder;
                            break;
                        }
                    case 18:
                        {
                            global::Tinkoff.Proto.InvestApi.V1.GetDividendsForeignIssuerReportResponse subBuilder = new global::Tinkoff.Proto.InvestApi.V1.GetDividendsForeignIssuerReportResponse();
                            if (payloadCase_ == PayloadOneofCase.DivForeignIssuerReport)
                            {
                                subBuilder.MergeFrom(DivForeignIssuerReport);
                            }
                            input.ReadMessage(subBuilder);
                            DivForeignIssuerReport = subBuilder;
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Объект запроса формирования отчёта "Справка о доходах за пределами РФ".
    /// </summary>
    public sealed partial class GenerateDividendsForeignIssuerReportRequest : pb::IMessage<GenerateDividendsForeignIssuerReportRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<GenerateDividendsForeignIssuerReportRequest> _parser = new pb::MessageParser<GenerateDividendsForeignIssuerReportRequest>(() => new GenerateDividendsForeignIssuerReportRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<GenerateDividendsForeignIssuerReportRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[24]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GenerateDividendsForeignIssuerReportRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GenerateDividendsForeignIssuerReportRequest(GenerateDividendsForeignIssuerReportRequest other) : this()
        {
            accountId_ = other.accountId_;
            from_ = other.from_ != null ? other.from_.Clone() : null;
            to_ = other.to_ != null ? other.to_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GenerateDividendsForeignIssuerReportRequest Clone()
        {
            return new GenerateDividendsForeignIssuerReportRequest(this);
        }

        /// <summary>Field number for the "account_id" field.</summary>
        public const int AccountIdFieldNumber = 1;
        private string accountId_ = "";
        /// <summary>
        ///Идентификатор счёта клиента.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AccountId
        {
            get { return accountId_; }
            set
            {
                accountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "from" field.</summary>
        public const int FromFieldNumber = 2;
        private global::Google.Protobuf.WellKnownTypes.Timestamp from_;
        /// <summary>
        ///Начало периода (по UTC).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp From
        {
            get { return from_; }
            set
            {
                from_ = value;
            }
        }

        /// <summary>Field number for the "to" field.</summary>
        public const int ToFieldNumber = 3;
        private global::Google.Protobuf.WellKnownTypes.Timestamp to_;
        /// <summary>
        ///Окончание периода (по UTC).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp To
        {
            get { return to_; }
            set
            {
                to_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as GenerateDividendsForeignIssuerReportRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(GenerateDividendsForeignIssuerReportRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (AccountId != other.AccountId) return false;
            if (!object.Equals(From, other.From)) return false;
            if (!object.Equals(To, other.To)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (AccountId.Length != 0) hash ^= AccountId.GetHashCode();
            if (from_ != null) hash ^= From.GetHashCode();
            if (to_ != null) hash ^= To.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (AccountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountId);
      }
      if (from_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(From);
      }
      if (to_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(To);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (AccountId.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(AccountId);
            }
            if (from_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(From);
            }
            if (to_ != null)
            {
                output.WriteRawTag(26);
                output.WriteMessage(To);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (AccountId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountId);
            }
            if (from_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
            }
            if (to_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(GenerateDividendsForeignIssuerReportRequest other)
        {
            if (other == null)
            {
                return;
            }
            if (other.AccountId.Length != 0)
            {
                AccountId = other.AccountId;
            }
            if (other.from_ != null)
            {
                if (from_ == null)
                {
                    From = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                From.MergeFrom(other.From);
            }
            if (other.to_ != null)
            {
                if (to_ == null)
                {
                    To = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                To.MergeFrom(other.To);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountId = input.ReadString();
            break;
          }
          case 18: {
            if (from_ == null) {
              From = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(From);
            break;
          }
          case 26: {
            if (to_ == null) {
              To = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(To);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            AccountId = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            if (from_ == null)
                            {
                                From = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                            }
                            input.ReadMessage(From);
                            break;
                        }
                    case 26:
                        {
                            if (to_ == null)
                            {
                                To = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                            }
                            input.ReadMessage(To);
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    /// Объект запроса сформированного отчёта "Справка о доходах за пределами РФ".
    /// </summary>
    public sealed partial class GetDividendsForeignIssuerReportRequest : pb::IMessage<GetDividendsForeignIssuerReportRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<GetDividendsForeignIssuerReportRequest> _parser = new pb::MessageParser<GetDividendsForeignIssuerReportRequest>(() => new GetDividendsForeignIssuerReportRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<GetDividendsForeignIssuerReportRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[25]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetDividendsForeignIssuerReportRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetDividendsForeignIssuerReportRequest(GetDividendsForeignIssuerReportRequest other) : this()
        {
            taskId_ = other.taskId_;
            page_ = other.page_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetDividendsForeignIssuerReportRequest Clone()
        {
            return new GetDividendsForeignIssuerReportRequest(this);
        }

        /// <summary>Field number for the "task_id" field.</summary>
        public const int TaskIdFieldNumber = 1;
        private string taskId_ = "";
        /// <summary>
        ///Идентификатор задачи формирования отчёта.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string TaskId
        {
            get { return taskId_; }
            set
            {
                taskId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "page" field.</summary>
        public const int PageFieldNumber = 2;
        private int page_;
        /// <summary>
        ///Номер страницы отчета (начинается с 0), значение по умолчанию: 0.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Page
        {
            get { return page_; }
            set
            {
                page_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as GetDividendsForeignIssuerReportRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(GetDividendsForeignIssuerReportRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (TaskId != other.TaskId) return false;
            if (Page != other.Page) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (TaskId.Length != 0) hash ^= TaskId.GetHashCode();
            if (Page != 0) hash ^= Page.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (TaskId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TaskId);
      }
      if (Page != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Page);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (TaskId.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(TaskId);
            }
            if (Page != 0)
            {
                output.WriteRawTag(16);
                output.WriteInt32(Page);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (TaskId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskId);
            }
            if (Page != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Page);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(GetDividendsForeignIssuerReportRequest other)
        {
            if (other == null)
            {
                return;
            }
            if (other.TaskId.Length != 0)
            {
                TaskId = other.TaskId;
            }
            if (other.Page != 0)
            {
                Page = other.Page;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TaskId = input.ReadString();
            break;
          }
          case 16: {
            Page = input.ReadInt32();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            TaskId = input.ReadString();
                            break;
                        }
                    case 16:
                        {
                            Page = input.ReadInt32();
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    /// Объект результата задачи запуска формирования отчёта "Справка о доходах за пределами РФ".
    /// </summary>
    public sealed partial class GenerateDividendsForeignIssuerReportResponse : pb::IMessage<GenerateDividendsForeignIssuerReportResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<GenerateDividendsForeignIssuerReportResponse> _parser = new pb::MessageParser<GenerateDividendsForeignIssuerReportResponse>(() => new GenerateDividendsForeignIssuerReportResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<GenerateDividendsForeignIssuerReportResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[26]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GenerateDividendsForeignIssuerReportResponse()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GenerateDividendsForeignIssuerReportResponse(GenerateDividendsForeignIssuerReportResponse other) : this()
        {
            taskId_ = other.taskId_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GenerateDividendsForeignIssuerReportResponse Clone()
        {
            return new GenerateDividendsForeignIssuerReportResponse(this);
        }

        /// <summary>Field number for the "task_id" field.</summary>
        public const int TaskIdFieldNumber = 1;
        private string taskId_ = "";
        /// <summary>
        ///Идентификатор задачи формирования отчёта.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string TaskId
        {
            get { return taskId_; }
            set
            {
                taskId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as GenerateDividendsForeignIssuerReportResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(GenerateDividendsForeignIssuerReportResponse other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (TaskId != other.TaskId) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (TaskId.Length != 0) hash ^= TaskId.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (TaskId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TaskId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (TaskId.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(TaskId);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (TaskId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskId);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(GenerateDividendsForeignIssuerReportResponse other)
        {
            if (other == null)
            {
                return;
            }
            if (other.TaskId.Length != 0)
            {
                TaskId = other.TaskId;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TaskId = input.ReadString();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            TaskId = input.ReadString();
                            break;
                        }
                }
            }
        }
#endif

    }

    public sealed partial class GetDividendsForeignIssuerReportResponse : pb::IMessage<GetDividendsForeignIssuerReportResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<GetDividendsForeignIssuerReportResponse> _parser = new pb::MessageParser<GetDividendsForeignIssuerReportResponse>(() => new GetDividendsForeignIssuerReportResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<GetDividendsForeignIssuerReportResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[27]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetDividendsForeignIssuerReportResponse()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetDividendsForeignIssuerReportResponse(GetDividendsForeignIssuerReportResponse other) : this()
        {
            dividendsForeignIssuerReport_ = other.dividendsForeignIssuerReport_.Clone();
            itemsCount_ = other.itemsCount_;
            pagesCount_ = other.pagesCount_;
            page_ = other.page_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetDividendsForeignIssuerReportResponse Clone()
        {
            return new GetDividendsForeignIssuerReportResponse(this);
        }

        /// <summary>Field number for the "dividends_foreign_issuer_report" field.</summary>
        public const int DividendsForeignIssuerReportFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Tinkoff.Proto.InvestApi.V1.DividendsForeignIssuerReport> _repeated_dividendsForeignIssuerReport_codec
            = pb::FieldCodec.ForMessage(10, global::Tinkoff.Proto.InvestApi.V1.DividendsForeignIssuerReport.Parser);
        private readonly pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.DividendsForeignIssuerReport> dividendsForeignIssuerReport_ = new pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.DividendsForeignIssuerReport>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.DividendsForeignIssuerReport> DividendsForeignIssuerReport
        {
            get { return dividendsForeignIssuerReport_; }
        }

        /// <summary>Field number for the "itemsCount" field.</summary>
        public const int ItemsCountFieldNumber = 2;
        private int itemsCount_;
        /// <summary>
        ///Количество записей в отчете.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int ItemsCount
        {
            get { return itemsCount_; }
            set
            {
                itemsCount_ = value;
            }
        }

        /// <summary>Field number for the "pagesCount" field.</summary>
        public const int PagesCountFieldNumber = 3;
        private int pagesCount_;
        /// <summary>
        ///Количество страниц с данными отчета (начинается с 0).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int PagesCount
        {
            get { return pagesCount_; }
            set
            {
                pagesCount_ = value;
            }
        }

        /// <summary>Field number for the "page" field.</summary>
        public const int PageFieldNumber = 4;
        private int page_;
        /// <summary>
        ///Текущая страница (начинается с 0).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Page
        {
            get { return page_; }
            set
            {
                page_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as GetDividendsForeignIssuerReportResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(GetDividendsForeignIssuerReportResponse other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!dividendsForeignIssuerReport_.Equals(other.dividendsForeignIssuerReport_)) return false;
            if (ItemsCount != other.ItemsCount) return false;
            if (PagesCount != other.PagesCount) return false;
            if (Page != other.Page) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= dividendsForeignIssuerReport_.GetHashCode();
            if (ItemsCount != 0) hash ^= ItemsCount.GetHashCode();
            if (PagesCount != 0) hash ^= PagesCount.GetHashCode();
            if (Page != 0) hash ^= Page.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      dividendsForeignIssuerReport_.WriteTo(output, _repeated_dividendsForeignIssuerReport_codec);
      if (ItemsCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemsCount);
      }
      if (PagesCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PagesCount);
      }
      if (Page != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Page);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            dividendsForeignIssuerReport_.WriteTo(ref output, _repeated_dividendsForeignIssuerReport_codec);
            if (ItemsCount != 0)
            {
                output.WriteRawTag(16);
                output.WriteInt32(ItemsCount);
            }
            if (PagesCount != 0)
            {
                output.WriteRawTag(24);
                output.WriteInt32(PagesCount);
            }
            if (Page != 0)
            {
                output.WriteRawTag(32);
                output.WriteInt32(Page);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            size += dividendsForeignIssuerReport_.CalculateSize(_repeated_dividendsForeignIssuerReport_codec);
            if (ItemsCount != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemsCount);
            }
            if (PagesCount != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(PagesCount);
            }
            if (Page != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Page);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(GetDividendsForeignIssuerReportResponse other)
        {
            if (other == null)
            {
                return;
            }
            dividendsForeignIssuerReport_.Add(other.dividendsForeignIssuerReport_);
            if (other.ItemsCount != 0)
            {
                ItemsCount = other.ItemsCount;
            }
            if (other.PagesCount != 0)
            {
                PagesCount = other.PagesCount;
            }
            if (other.Page != 0)
            {
                Page = other.Page;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dividendsForeignIssuerReport_.AddEntriesFrom(input, _repeated_dividendsForeignIssuerReport_codec);
            break;
          }
          case 16: {
            ItemsCount = input.ReadInt32();
            break;
          }
          case 24: {
            PagesCount = input.ReadInt32();
            break;
          }
          case 32: {
            Page = input.ReadInt32();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            dividendsForeignIssuerReport_.AddEntriesFrom(ref input, _repeated_dividendsForeignIssuerReport_codec);
                            break;
                        }
                    case 16:
                        {
                            ItemsCount = input.ReadInt32();
                            break;
                        }
                    case 24:
                        {
                            PagesCount = input.ReadInt32();
                            break;
                        }
                    case 32:
                        {
                            Page = input.ReadInt32();
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    /// Отчёт "Справка о доходах за пределами РФ".
    /// </summary>
    public sealed partial class DividendsForeignIssuerReport : pb::IMessage<DividendsForeignIssuerReport>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<DividendsForeignIssuerReport> _parser = new pb::MessageParser<DividendsForeignIssuerReport>(() => new DividendsForeignIssuerReport());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<DividendsForeignIssuerReport> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[28]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DividendsForeignIssuerReport()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DividendsForeignIssuerReport(DividendsForeignIssuerReport other) : this()
        {
            recordDate_ = other.recordDate_ != null ? other.recordDate_.Clone() : null;
            paymentDate_ = other.paymentDate_ != null ? other.paymentDate_.Clone() : null;
            securityName_ = other.securityName_;
            isin_ = other.isin_;
            issuerCountry_ = other.issuerCountry_;
            quantity_ = other.quantity_;
            dividend_ = other.dividend_ != null ? other.dividend_.Clone() : null;
            externalCommission_ = other.externalCommission_ != null ? other.externalCommission_.Clone() : null;
            dividendGross_ = other.dividendGross_ != null ? other.dividendGross_.Clone() : null;
            tax_ = other.tax_ != null ? other.tax_.Clone() : null;
            dividendAmount_ = other.dividendAmount_ != null ? other.dividendAmount_.Clone() : null;
            currency_ = other.currency_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DividendsForeignIssuerReport Clone()
        {
            return new DividendsForeignIssuerReport(this);
        }

        /// <summary>Field number for the "record_date" field.</summary>
        public const int RecordDateFieldNumber = 1;
        private global::Google.Protobuf.WellKnownTypes.Timestamp recordDate_;
        /// <summary>
        ///Дата фиксации реестра.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp RecordDate
        {
            get { return recordDate_; }
            set
            {
                recordDate_ = value;
            }
        }

        /// <summary>Field number for the "payment_date" field.</summary>
        public const int PaymentDateFieldNumber = 2;
        private global::Google.Protobuf.WellKnownTypes.Timestamp paymentDate_;
        /// <summary>
        ///Дата выплаты.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp PaymentDate
        {
            get { return paymentDate_; }
            set
            {
                paymentDate_ = value;
            }
        }

        /// <summary>Field number for the "security_name" field.</summary>
        public const int SecurityNameFieldNumber = 3;
        private string securityName_ = "";
        /// <summary>
        ///Наименование ценной бумаги.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string SecurityName
        {
            get { return securityName_; }
            set
            {
                securityName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "isin" field.</summary>
        public const int IsinFieldNumber = 4;
        private string isin_ = "";
        /// <summary>
        ///ISIN-идентификатор ценной бумаги.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Isin
        {
            get { return isin_; }
            set
            {
                isin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "issuer_country" field.</summary>
        public const int IssuerCountryFieldNumber = 5;
        private string issuerCountry_ = "";
        /// <summary>
        ///Страна эмитента. Для депозитарных расписок указывается страна эмитента базового актива.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string IssuerCountry
        {
            get { return issuerCountry_; }
            set
            {
                issuerCountry_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "quantity" field.</summary>
        public const int QuantityFieldNumber = 6;
        private long quantity_;
        /// <summary>
        ///Количество ценных бумаг.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long Quantity
        {
            get { return quantity_; }
            set
            {
                quantity_ = value;
            }
        }

        /// <summary>Field number for the "dividend" field.</summary>
        public const int DividendFieldNumber = 7;
        private global::Tinkoff.Proto.InvestApi.V1.Quotation dividend_;
        /// <summary>
        ///Выплаты на одну бумагу
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.Quotation Dividend
        {
            get { return dividend_; }
            set
            {
                dividend_ = value;
            }
        }

        /// <summary>Field number for the "external_commission" field.</summary>
        public const int ExternalCommissionFieldNumber = 8;
        private global::Tinkoff.Proto.InvestApi.V1.Quotation externalCommission_;
        /// <summary>
        ///Комиссия внешних платёжных агентов.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.Quotation ExternalCommission
        {
            get { return externalCommission_; }
            set
            {
                externalCommission_ = value;
            }
        }

        /// <summary>Field number for the "dividend_gross" field.</summary>
        public const int DividendGrossFieldNumber = 9;
        private global::Tinkoff.Proto.InvestApi.V1.Quotation dividendGross_;
        /// <summary>
        ///Сумма до удержания налога.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.Quotation DividendGross
        {
            get { return dividendGross_; }
            set
            {
                dividendGross_ = value;
            }
        }

        /// <summary>Field number for the "tax" field.</summary>
        public const int TaxFieldNumber = 10;
        private global::Tinkoff.Proto.InvestApi.V1.Quotation tax_;
        /// <summary>
        ///Сумма налога, удержанного агентом.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.Quotation Tax
        {
            get { return tax_; }
            set
            {
                tax_ = value;
            }
        }

        /// <summary>Field number for the "dividend_amount" field.</summary>
        public const int DividendAmountFieldNumber = 11;
        private global::Tinkoff.Proto.InvestApi.V1.Quotation dividendAmount_;
        /// <summary>
        ///Итоговая сумма выплаты.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.Quotation DividendAmount
        {
            get { return dividendAmount_; }
            set
            {
                dividendAmount_ = value;
            }
        }

        /// <summary>Field number for the "currency" field.</summary>
        public const int CurrencyFieldNumber = 12;
        private string currency_ = "";
        /// <summary>
        ///Валюта.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Currency
        {
            get { return currency_; }
            set
            {
                currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as DividendsForeignIssuerReport);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(DividendsForeignIssuerReport other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(RecordDate, other.RecordDate)) return false;
            if (!object.Equals(PaymentDate, other.PaymentDate)) return false;
            if (SecurityName != other.SecurityName) return false;
            if (Isin != other.Isin) return false;
            if (IssuerCountry != other.IssuerCountry) return false;
            if (Quantity != other.Quantity) return false;
            if (!object.Equals(Dividend, other.Dividend)) return false;
            if (!object.Equals(ExternalCommission, other.ExternalCommission)) return false;
            if (!object.Equals(DividendGross, other.DividendGross)) return false;
            if (!object.Equals(Tax, other.Tax)) return false;
            if (!object.Equals(DividendAmount, other.DividendAmount)) return false;
            if (Currency != other.Currency) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (recordDate_ != null) hash ^= RecordDate.GetHashCode();
            if (paymentDate_ != null) hash ^= PaymentDate.GetHashCode();
            if (SecurityName.Length != 0) hash ^= SecurityName.GetHashCode();
            if (Isin.Length != 0) hash ^= Isin.GetHashCode();
            if (IssuerCountry.Length != 0) hash ^= IssuerCountry.GetHashCode();
            if (Quantity != 0L) hash ^= Quantity.GetHashCode();
            if (dividend_ != null) hash ^= Dividend.GetHashCode();
            if (externalCommission_ != null) hash ^= ExternalCommission.GetHashCode();
            if (dividendGross_ != null) hash ^= DividendGross.GetHashCode();
            if (tax_ != null) hash ^= Tax.GetHashCode();
            if (dividendAmount_ != null) hash ^= DividendAmount.GetHashCode();
            if (Currency.Length != 0) hash ^= Currency.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (recordDate_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RecordDate);
      }
      if (paymentDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PaymentDate);
      }
      if (SecurityName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SecurityName);
      }
      if (Isin.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Isin);
      }
      if (IssuerCountry.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(IssuerCountry);
      }
      if (Quantity != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Quantity);
      }
      if (dividend_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Dividend);
      }
      if (externalCommission_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ExternalCommission);
      }
      if (dividendGross_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(DividendGross);
      }
      if (tax_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Tax);
      }
      if (dividendAmount_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(DividendAmount);
      }
      if (Currency.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Currency);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (recordDate_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(RecordDate);
            }
            if (paymentDate_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(PaymentDate);
            }
            if (SecurityName.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(SecurityName);
            }
            if (Isin.Length != 0)
            {
                output.WriteRawTag(34);
                output.WriteString(Isin);
            }
            if (IssuerCountry.Length != 0)
            {
                output.WriteRawTag(42);
                output.WriteString(IssuerCountry);
            }
            if (Quantity != 0L)
            {
                output.WriteRawTag(48);
                output.WriteInt64(Quantity);
            }
            if (dividend_ != null)
            {
                output.WriteRawTag(58);
                output.WriteMessage(Dividend);
            }
            if (externalCommission_ != null)
            {
                output.WriteRawTag(66);
                output.WriteMessage(ExternalCommission);
            }
            if (dividendGross_ != null)
            {
                output.WriteRawTag(74);
                output.WriteMessage(DividendGross);
            }
            if (tax_ != null)
            {
                output.WriteRawTag(82);
                output.WriteMessage(Tax);
            }
            if (dividendAmount_ != null)
            {
                output.WriteRawTag(90);
                output.WriteMessage(DividendAmount);
            }
            if (Currency.Length != 0)
            {
                output.WriteRawTag(98);
                output.WriteString(Currency);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (recordDate_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(RecordDate);
            }
            if (paymentDate_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(PaymentDate);
            }
            if (SecurityName.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(SecurityName);
            }
            if (Isin.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Isin);
            }
            if (IssuerCountry.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(IssuerCountry);
            }
            if (Quantity != 0L)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(Quantity);
            }
            if (dividend_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dividend);
            }
            if (externalCommission_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExternalCommission);
            }
            if (dividendGross_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(DividendGross);
            }
            if (tax_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tax);
            }
            if (dividendAmount_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(DividendAmount);
            }
            if (Currency.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(DividendsForeignIssuerReport other)
        {
            if (other == null)
            {
                return;
            }
            if (other.recordDate_ != null)
            {
                if (recordDate_ == null)
                {
                    RecordDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                RecordDate.MergeFrom(other.RecordDate);
            }
            if (other.paymentDate_ != null)
            {
                if (paymentDate_ == null)
                {
                    PaymentDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                PaymentDate.MergeFrom(other.PaymentDate);
            }
            if (other.SecurityName.Length != 0)
            {
                SecurityName = other.SecurityName;
            }
            if (other.Isin.Length != 0)
            {
                Isin = other.Isin;
            }
            if (other.IssuerCountry.Length != 0)
            {
                IssuerCountry = other.IssuerCountry;
            }
            if (other.Quantity != 0L)
            {
                Quantity = other.Quantity;
            }
            if (other.dividend_ != null)
            {
                if (dividend_ == null)
                {
                    Dividend = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                }
                Dividend.MergeFrom(other.Dividend);
            }
            if (other.externalCommission_ != null)
            {
                if (externalCommission_ == null)
                {
                    ExternalCommission = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                }
                ExternalCommission.MergeFrom(other.ExternalCommission);
            }
            if (other.dividendGross_ != null)
            {
                if (dividendGross_ == null)
                {
                    DividendGross = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                }
                DividendGross.MergeFrom(other.DividendGross);
            }
            if (other.tax_ != null)
            {
                if (tax_ == null)
                {
                    Tax = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                }
                Tax.MergeFrom(other.Tax);
            }
            if (other.dividendAmount_ != null)
            {
                if (dividendAmount_ == null)
                {
                    DividendAmount = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                }
                DividendAmount.MergeFrom(other.DividendAmount);
            }
            if (other.Currency.Length != 0)
            {
                Currency = other.Currency;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (recordDate_ == null) {
              RecordDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RecordDate);
            break;
          }
          case 18: {
            if (paymentDate_ == null) {
              PaymentDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PaymentDate);
            break;
          }
          case 26: {
            SecurityName = input.ReadString();
            break;
          }
          case 34: {
            Isin = input.ReadString();
            break;
          }
          case 42: {
            IssuerCountry = input.ReadString();
            break;
          }
          case 48: {
            Quantity = input.ReadInt64();
            break;
          }
          case 58: {
            if (dividend_ == null) {
              Dividend = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
            }
            input.ReadMessage(Dividend);
            break;
          }
          case 66: {
            if (externalCommission_ == null) {
              ExternalCommission = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
            }
            input.ReadMessage(ExternalCommission);
            break;
          }
          case 74: {
            if (dividendGross_ == null) {
              DividendGross = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
            }
            input.ReadMessage(DividendGross);
            break;
          }
          case 82: {
            if (tax_ == null) {
              Tax = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
            }
            input.ReadMessage(Tax);
            break;
          }
          case 90: {
            if (dividendAmount_ == null) {
              DividendAmount = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
            }
            input.ReadMessage(DividendAmount);
            break;
          }
          case 98: {
            Currency = input.ReadString();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            if (recordDate_ == null)
                            {
                                RecordDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                            }
                            input.ReadMessage(RecordDate);
                            break;
                        }
                    case 18:
                        {
                            if (paymentDate_ == null)
                            {
                                PaymentDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                            }
                            input.ReadMessage(PaymentDate);
                            break;
                        }
                    case 26:
                        {
                            SecurityName = input.ReadString();
                            break;
                        }
                    case 34:
                        {
                            Isin = input.ReadString();
                            break;
                        }
                    case 42:
                        {
                            IssuerCountry = input.ReadString();
                            break;
                        }
                    case 48:
                        {
                            Quantity = input.ReadInt64();
                            break;
                        }
                    case 58:
                        {
                            if (dividend_ == null)
                            {
                                Dividend = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                            }
                            input.ReadMessage(Dividend);
                            break;
                        }
                    case 66:
                        {
                            if (externalCommission_ == null)
                            {
                                ExternalCommission = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                            }
                            input.ReadMessage(ExternalCommission);
                            break;
                        }
                    case 74:
                        {
                            if (dividendGross_ == null)
                            {
                                DividendGross = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                            }
                            input.ReadMessage(DividendGross);
                            break;
                        }
                    case 82:
                        {
                            if (tax_ == null)
                            {
                                Tax = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                            }
                            input.ReadMessage(Tax);
                            break;
                        }
                    case 90:
                        {
                            if (dividendAmount_ == null)
                            {
                                DividendAmount = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                            }
                            input.ReadMessage(DividendAmount);
                            break;
                        }
                    case 98:
                        {
                            Currency = input.ReadString();
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Запрос установки stream-соединения.
    /// </summary>
    public sealed partial class PortfolioStreamRequest : pb::IMessage<PortfolioStreamRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<PortfolioStreamRequest> _parser = new pb::MessageParser<PortfolioStreamRequest>(() => new PortfolioStreamRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PortfolioStreamRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[29]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PortfolioStreamRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PortfolioStreamRequest(PortfolioStreamRequest other) : this()
        {
            accounts_ = other.accounts_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PortfolioStreamRequest Clone()
        {
            return new PortfolioStreamRequest(this);
        }

        /// <summary>Field number for the "accounts" field.</summary>
        public const int AccountsFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_accounts_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> accounts_ = new pbc::RepeatedField<string>();
        /// <summary>
        ///Массив идентификаторов счётов пользователя
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> Accounts
        {
            get { return accounts_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as PortfolioStreamRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PortfolioStreamRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!accounts_.Equals(other.accounts_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= accounts_.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      accounts_.WriteTo(output, _repeated_accounts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            accounts_.WriteTo(ref output, _repeated_accounts_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            size += accounts_.CalculateSize(_repeated_accounts_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PortfolioStreamRequest other)
        {
            if (other == null)
            {
                return;
            }
            accounts_.Add(other.accounts_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            accounts_.AddEntriesFrom(input, _repeated_accounts_codec);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            accounts_.AddEntriesFrom(ref input, _repeated_accounts_codec);
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Информация по позициям и доходностям портфелей.
    /// </summary>
    public sealed partial class PortfolioStreamResponse : pb::IMessage<PortfolioStreamResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<PortfolioStreamResponse> _parser = new pb::MessageParser<PortfolioStreamResponse>(() => new PortfolioStreamResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PortfolioStreamResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[30]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PortfolioStreamResponse()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PortfolioStreamResponse(PortfolioStreamResponse other) : this()
        {
            switch (other.PayloadCase)
            {
                case PayloadOneofCase.Subscriptions:
                    Subscriptions = other.Subscriptions.Clone();
                    break;
                case PayloadOneofCase.Portfolio:
                    Portfolio = other.Portfolio.Clone();
                    break;
                case PayloadOneofCase.Ping:
                    Ping = other.Ping.Clone();
                    break;
            }

            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PortfolioStreamResponse Clone()
        {
            return new PortfolioStreamResponse(this);
        }

        /// <summary>Field number for the "subscriptions" field.</summary>
        public const int SubscriptionsFieldNumber = 1;
        /// <summary>
        ///Объект результата подписки.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.PortfolioSubscriptionResult Subscriptions
        {
            get { return payloadCase_ == PayloadOneofCase.Subscriptions ? (global::Tinkoff.Proto.InvestApi.V1.PortfolioSubscriptionResult)payload_ : null; }
            set
            {
                payload_ = value;
                payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Subscriptions;
            }
        }

        /// <summary>Field number for the "portfolio" field.</summary>
        public const int PortfolioFieldNumber = 2;
        /// <summary>
        ///Объект стриминга портфеля.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.PortfolioResponse Portfolio
        {
            get { return payloadCase_ == PayloadOneofCase.Portfolio ? (global::Tinkoff.Proto.InvestApi.V1.PortfolioResponse)payload_ : null; }
            set
            {
                payload_ = value;
                payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Portfolio;
            }
        }

        /// <summary>Field number for the "ping" field.</summary>
        public const int PingFieldNumber = 3;
        /// <summary>
        ///Проверка активности стрима.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.Ping Ping
        {
            get { return payloadCase_ == PayloadOneofCase.Ping ? (global::Tinkoff.Proto.InvestApi.V1.Ping)payload_ : null; }
            set
            {
                payload_ = value;
                payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Ping;
            }
        }

        private object payload_;
        /// <summary>Enum of possible cases for the "payload" oneof.</summary>
        public enum PayloadOneofCase
        {
            None = 0,
            Subscriptions = 1,
            Portfolio = 2,
            Ping = 3,
        }
        private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PayloadOneofCase PayloadCase
        {
            get { return payloadCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPayload()
        {
            payloadCase_ = PayloadOneofCase.None;
            payload_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as PortfolioStreamResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PortfolioStreamResponse other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Subscriptions, other.Subscriptions)) return false;
            if (!object.Equals(Portfolio, other.Portfolio)) return false;
            if (!object.Equals(Ping, other.Ping)) return false;
            if (PayloadCase != other.PayloadCase) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (payloadCase_ == PayloadOneofCase.Subscriptions) hash ^= Subscriptions.GetHashCode();
            if (payloadCase_ == PayloadOneofCase.Portfolio) hash ^= Portfolio.GetHashCode();
            if (payloadCase_ == PayloadOneofCase.Ping) hash ^= Ping.GetHashCode();
            hash ^= (int)payloadCase_;
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (payloadCase_ == PayloadOneofCase.Subscriptions) {
        output.WriteRawTag(10);
        output.WriteMessage(Subscriptions);
      }
      if (payloadCase_ == PayloadOneofCase.Portfolio) {
        output.WriteRawTag(18);
        output.WriteMessage(Portfolio);
      }
      if (payloadCase_ == PayloadOneofCase.Ping) {
        output.WriteRawTag(26);
        output.WriteMessage(Ping);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (payloadCase_ == PayloadOneofCase.Subscriptions)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Subscriptions);
            }
            if (payloadCase_ == PayloadOneofCase.Portfolio)
            {
                output.WriteRawTag(18);
                output.WriteMessage(Portfolio);
            }
            if (payloadCase_ == PayloadOneofCase.Ping)
            {
                output.WriteRawTag(26);
                output.WriteMessage(Ping);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (payloadCase_ == PayloadOneofCase.Subscriptions)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Subscriptions);
            }
            if (payloadCase_ == PayloadOneofCase.Portfolio)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Portfolio);
            }
            if (payloadCase_ == PayloadOneofCase.Ping)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ping);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PortfolioStreamResponse other)
        {
            if (other == null)
            {
                return;
            }
            switch (other.PayloadCase)
            {
                case PayloadOneofCase.Subscriptions:
                    if (Subscriptions == null)
                    {
                        Subscriptions = new global::Tinkoff.Proto.InvestApi.V1.PortfolioSubscriptionResult();
                    }
                    Subscriptions.MergeFrom(other.Subscriptions);
                    break;
                case PayloadOneofCase.Portfolio:
                    if (Portfolio == null)
                    {
                        Portfolio = new global::Tinkoff.Proto.InvestApi.V1.PortfolioResponse();
                    }
                    Portfolio.MergeFrom(other.Portfolio);
                    break;
                case PayloadOneofCase.Ping:
                    if (Ping == null)
                    {
                        Ping = new global::Tinkoff.Proto.InvestApi.V1.Ping();
                    }
                    Ping.MergeFrom(other.Ping);
                    break;
            }

            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Tinkoff.Proto.InvestApi.V1.PortfolioSubscriptionResult subBuilder = new global::Tinkoff.Proto.InvestApi.V1.PortfolioSubscriptionResult();
            if (payloadCase_ == PayloadOneofCase.Subscriptions) {
              subBuilder.MergeFrom(Subscriptions);
            }
            input.ReadMessage(subBuilder);
            Subscriptions = subBuilder;
            break;
          }
          case 18: {
            global::Tinkoff.Proto.InvestApi.V1.PortfolioResponse subBuilder = new global::Tinkoff.Proto.InvestApi.V1.PortfolioResponse();
            if (payloadCase_ == PayloadOneofCase.Portfolio) {
              subBuilder.MergeFrom(Portfolio);
            }
            input.ReadMessage(subBuilder);
            Portfolio = subBuilder;
            break;
          }
          case 26: {
            global::Tinkoff.Proto.InvestApi.V1.Ping subBuilder = new global::Tinkoff.Proto.InvestApi.V1.Ping();
            if (payloadCase_ == PayloadOneofCase.Ping) {
              subBuilder.MergeFrom(Ping);
            }
            input.ReadMessage(subBuilder);
            Ping = subBuilder;
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            global::Tinkoff.Proto.InvestApi.V1.PortfolioSubscriptionResult subBuilder = new global::Tinkoff.Proto.InvestApi.V1.PortfolioSubscriptionResult();
                            if (payloadCase_ == PayloadOneofCase.Subscriptions)
                            {
                                subBuilder.MergeFrom(Subscriptions);
                            }
                            input.ReadMessage(subBuilder);
                            Subscriptions = subBuilder;
                            break;
                        }
                    case 18:
                        {
                            global::Tinkoff.Proto.InvestApi.V1.PortfolioResponse subBuilder = new global::Tinkoff.Proto.InvestApi.V1.PortfolioResponse();
                            if (payloadCase_ == PayloadOneofCase.Portfolio)
                            {
                                subBuilder.MergeFrom(Portfolio);
                            }
                            input.ReadMessage(subBuilder);
                            Portfolio = subBuilder;
                            break;
                        }
                    case 26:
                        {
                            global::Tinkoff.Proto.InvestApi.V1.Ping subBuilder = new global::Tinkoff.Proto.InvestApi.V1.Ping();
                            if (payloadCase_ == PayloadOneofCase.Ping)
                            {
                                subBuilder.MergeFrom(Ping);
                            }
                            input.ReadMessage(subBuilder);
                            Ping = subBuilder;
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Объект результата подписки.
    /// </summary>
    public sealed partial class PortfolioSubscriptionResult : pb::IMessage<PortfolioSubscriptionResult>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<PortfolioSubscriptionResult> _parser = new pb::MessageParser<PortfolioSubscriptionResult>(() => new PortfolioSubscriptionResult());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PortfolioSubscriptionResult> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[31]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PortfolioSubscriptionResult()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PortfolioSubscriptionResult(PortfolioSubscriptionResult other) : this()
        {
            accounts_ = other.accounts_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PortfolioSubscriptionResult Clone()
        {
            return new PortfolioSubscriptionResult(this);
        }

        /// <summary>Field number for the "accounts" field.</summary>
        public const int AccountsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Tinkoff.Proto.InvestApi.V1.AccountSubscriptionStatus> _repeated_accounts_codec
            = pb::FieldCodec.ForMessage(10, global::Tinkoff.Proto.InvestApi.V1.AccountSubscriptionStatus.Parser);
        private readonly pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.AccountSubscriptionStatus> accounts_ = new pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.AccountSubscriptionStatus>();
        /// <summary>
        ///Массив счетов клиента.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.AccountSubscriptionStatus> Accounts
        {
            get { return accounts_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as PortfolioSubscriptionResult);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PortfolioSubscriptionResult other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!accounts_.Equals(other.accounts_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= accounts_.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      accounts_.WriteTo(output, _repeated_accounts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            accounts_.WriteTo(ref output, _repeated_accounts_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            size += accounts_.CalculateSize(_repeated_accounts_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PortfolioSubscriptionResult other)
        {
            if (other == null)
            {
                return;
            }
            accounts_.Add(other.accounts_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            accounts_.AddEntriesFrom(input, _repeated_accounts_codec);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            accounts_.AddEntriesFrom(ref input, _repeated_accounts_codec);
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Счет клиента.
    /// </summary>
    public sealed partial class AccountSubscriptionStatus : pb::IMessage<AccountSubscriptionStatus>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<AccountSubscriptionStatus> _parser = new pb::MessageParser<AccountSubscriptionStatus>(() => new AccountSubscriptionStatus());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<AccountSubscriptionStatus> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[32]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AccountSubscriptionStatus()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AccountSubscriptionStatus(AccountSubscriptionStatus other) : this()
        {
            accountId_ = other.accountId_;
            subscriptionStatus_ = other.subscriptionStatus_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AccountSubscriptionStatus Clone()
        {
            return new AccountSubscriptionStatus(this);
        }

        /// <summary>Field number for the "account_id" field.</summary>
        public const int AccountIdFieldNumber = 1;
        private string accountId_ = "";
        /// <summary>
        ///Идентификатор счёта
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AccountId
        {
            get { return accountId_; }
            set
            {
                accountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "subscription_status" field.</summary>
        public const int SubscriptionStatusFieldNumber = 6;
        private global::Tinkoff.Proto.InvestApi.V1.PortfolioSubscriptionStatus subscriptionStatus_ = global::Tinkoff.Proto.InvestApi.V1.PortfolioSubscriptionStatus.Unspecified;
        /// <summary>
        ///Результат подписки.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.PortfolioSubscriptionStatus SubscriptionStatus
        {
            get { return subscriptionStatus_; }
            set
            {
                subscriptionStatus_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as AccountSubscriptionStatus);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(AccountSubscriptionStatus other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (AccountId != other.AccountId) return false;
            if (SubscriptionStatus != other.SubscriptionStatus) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (AccountId.Length != 0) hash ^= AccountId.GetHashCode();
            if (SubscriptionStatus != global::Tinkoff.Proto.InvestApi.V1.PortfolioSubscriptionStatus.Unspecified) hash ^= SubscriptionStatus.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (AccountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountId);
      }
      if (SubscriptionStatus != global::Tinkoff.Proto.InvestApi.V1.PortfolioSubscriptionStatus.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) SubscriptionStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (AccountId.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(AccountId);
            }
            if (SubscriptionStatus != global::Tinkoff.Proto.InvestApi.V1.PortfolioSubscriptionStatus.Unspecified)
            {
                output.WriteRawTag(48);
                output.WriteEnum((int)SubscriptionStatus);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (AccountId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountId);
            }
            if (SubscriptionStatus != global::Tinkoff.Proto.InvestApi.V1.PortfolioSubscriptionStatus.Unspecified)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)SubscriptionStatus);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(AccountSubscriptionStatus other)
        {
            if (other == null)
            {
                return;
            }
            if (other.AccountId.Length != 0)
            {
                AccountId = other.AccountId;
            }
            if (other.SubscriptionStatus != global::Tinkoff.Proto.InvestApi.V1.PortfolioSubscriptionStatus.Unspecified)
            {
                SubscriptionStatus = other.SubscriptionStatus;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountId = input.ReadString();
            break;
          }
          case 48: {
            SubscriptionStatus = (global::Tinkoff.Proto.InvestApi.V1.PortfolioSubscriptionStatus) input.ReadEnum();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            AccountId = input.ReadString();
                            break;
                        }
                    case 48:
                        {
                            SubscriptionStatus = (global::Tinkoff.Proto.InvestApi.V1.PortfolioSubscriptionStatus)input.ReadEnum();
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Запрос списка операций по счёту с пагинацией.
    /// </summary>
    public sealed partial class GetOperationsByCursorRequest : pb::IMessage<GetOperationsByCursorRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<GetOperationsByCursorRequest> _parser = new pb::MessageParser<GetOperationsByCursorRequest>(() => new GetOperationsByCursorRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<GetOperationsByCursorRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[33]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetOperationsByCursorRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetOperationsByCursorRequest(GetOperationsByCursorRequest other) : this()
        {
            accountId_ = other.accountId_;
            instrumentId_ = other.instrumentId_;
            from_ = other.from_ != null ? other.from_.Clone() : null;
            to_ = other.to_ != null ? other.to_.Clone() : null;
            cursor_ = other.cursor_;
            limit_ = other.limit_;
            operationTypes_ = other.operationTypes_.Clone();
            state_ = other.state_;
            withoutCommissions_ = other.withoutCommissions_;
            withoutTrades_ = other.withoutTrades_;
            withoutOvernights_ = other.withoutOvernights_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetOperationsByCursorRequest Clone()
        {
            return new GetOperationsByCursorRequest(this);
        }

        /// <summary>Field number for the "account_id" field.</summary>
        public const int AccountIdFieldNumber = 1;
        private string accountId_ = "";
        /// <summary>
        ///Идентификатор счёта клиента. Обязательный параметр для данного метода, остальные параметры опциональны.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AccountId
        {
            get { return accountId_; }
            set
            {
                accountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "instrument_id" field.</summary>
        public const int InstrumentIdFieldNumber = 2;
        private string instrumentId_ = "";
        /// <summary>
        ///Идентификатор инструмента (Figi инструмента или uid инструмента)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string InstrumentId
        {
            get { return instrumentId_; }
            set
            {
                instrumentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "from" field.</summary>
        public const int FromFieldNumber = 6;
        private global::Google.Protobuf.WellKnownTypes.Timestamp from_;
        /// <summary>
        ///Начало периода (по UTC).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp From
        {
            get { return from_; }
            set
            {
                from_ = value;
            }
        }

        /// <summary>Field number for the "to" field.</summary>
        public const int ToFieldNumber = 7;
        private global::Google.Protobuf.WellKnownTypes.Timestamp to_;
        /// <summary>
        ///Окончание периода (по UTC).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp To
        {
            get { return to_; }
            set
            {
                to_ = value;
            }
        }

        /// <summary>Field number for the "cursor" field.</summary>
        public const int CursorFieldNumber = 11;
        private string cursor_ = "";
        /// <summary>
        ///Идентификатор элемента, с которого начать формировать ответ.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Cursor
        {
            get { return cursor_; }
            set
            {
                cursor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "limit" field.</summary>
        public const int LimitFieldNumber = 12;
        private int limit_;
        /// <summary>
        ///Лимит количества операций. По умолчанию устанавливается значение **100**, максимальное значение 1000.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Limit
        {
            get { return limit_; }
            set
            {
                limit_ = value;
            }
        }

        /// <summary>Field number for the "operation_types" field.</summary>
        public const int OperationTypesFieldNumber = 13;
        private static readonly pb::FieldCodec<global::Tinkoff.Proto.InvestApi.V1.OperationType> _repeated_operationTypes_codec
            = pb::FieldCodec.ForEnum(106, x => (int)x, x => (global::Tinkoff.Proto.InvestApi.V1.OperationType)x);
        private readonly pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.OperationType> operationTypes_ = new pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.OperationType>();
        /// <summary>
        ///Тип операции. Принимает значение из списка OperationType.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.OperationType> OperationTypes
        {
            get { return operationTypes_; }
        }

        /// <summary>Field number for the "state" field.</summary>
        public const int StateFieldNumber = 14;
        private global::Tinkoff.Proto.InvestApi.V1.OperationState state_ = global::Tinkoff.Proto.InvestApi.V1.OperationState.Unspecified;
        /// <summary>
        ///Статус запрашиваемых операций, возможные значения указаны в OperationState.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.OperationState State
        {
            get { return state_; }
            set
            {
                state_ = value;
            }
        }

        /// <summary>Field number for the "without_commissions" field.</summary>
        public const int WithoutCommissionsFieldNumber = 15;
        private bool withoutCommissions_;
        /// <summary>
        ///Флаг возвращать ли комиссии, по умолчанию false
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool WithoutCommissions
        {
            get { return withoutCommissions_; }
            set
            {
                withoutCommissions_ = value;
            }
        }

        /// <summary>Field number for the "without_trades" field.</summary>
        public const int WithoutTradesFieldNumber = 16;
        private bool withoutTrades_;
        /// <summary>
        ///Флаг получения ответа без массива сделок.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool WithoutTrades
        {
            get { return withoutTrades_; }
            set
            {
                withoutTrades_ = value;
            }
        }

        /// <summary>Field number for the "without_overnights" field.</summary>
        public const int WithoutOvernightsFieldNumber = 17;
        private bool withoutOvernights_;
        /// <summary>
        ///Флаг не показывать overnight операций.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool WithoutOvernights
        {
            get { return withoutOvernights_; }
            set
            {
                withoutOvernights_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as GetOperationsByCursorRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(GetOperationsByCursorRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (AccountId != other.AccountId) return false;
            if (InstrumentId != other.InstrumentId) return false;
            if (!object.Equals(From, other.From)) return false;
            if (!object.Equals(To, other.To)) return false;
            if (Cursor != other.Cursor) return false;
            if (Limit != other.Limit) return false;
            if (!operationTypes_.Equals(other.operationTypes_)) return false;
            if (State != other.State) return false;
            if (WithoutCommissions != other.WithoutCommissions) return false;
            if (WithoutTrades != other.WithoutTrades) return false;
            if (WithoutOvernights != other.WithoutOvernights) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (AccountId.Length != 0) hash ^= AccountId.GetHashCode();
            if (InstrumentId.Length != 0) hash ^= InstrumentId.GetHashCode();
            if (from_ != null) hash ^= From.GetHashCode();
            if (to_ != null) hash ^= To.GetHashCode();
            if (Cursor.Length != 0) hash ^= Cursor.GetHashCode();
            if (Limit != 0) hash ^= Limit.GetHashCode();
            hash ^= operationTypes_.GetHashCode();
            if (State != global::Tinkoff.Proto.InvestApi.V1.OperationState.Unspecified) hash ^= State.GetHashCode();
            if (WithoutCommissions != false) hash ^= WithoutCommissions.GetHashCode();
            if (WithoutTrades != false) hash ^= WithoutTrades.GetHashCode();
            if (WithoutOvernights != false) hash ^= WithoutOvernights.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (AccountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountId);
      }
      if (InstrumentId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InstrumentId);
      }
      if (from_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(From);
      }
      if (to_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(To);
      }
      if (Cursor.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Cursor);
      }
      if (Limit != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Limit);
      }
      operationTypes_.WriteTo(output, _repeated_operationTypes_codec);
      if (State != global::Tinkoff.Proto.InvestApi.V1.OperationState.Unspecified) {
        output.WriteRawTag(112);
        output.WriteEnum((int) State);
      }
      if (WithoutCommissions != false) {
        output.WriteRawTag(120);
        output.WriteBool(WithoutCommissions);
      }
      if (WithoutTrades != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(WithoutTrades);
      }
      if (WithoutOvernights != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(WithoutOvernights);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (AccountId.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(AccountId);
            }
            if (InstrumentId.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(InstrumentId);
            }
            if (from_ != null)
            {
                output.WriteRawTag(50);
                output.WriteMessage(From);
            }
            if (to_ != null)
            {
                output.WriteRawTag(58);
                output.WriteMessage(To);
            }
            if (Cursor.Length != 0)
            {
                output.WriteRawTag(90);
                output.WriteString(Cursor);
            }
            if (Limit != 0)
            {
                output.WriteRawTag(96);
                output.WriteInt32(Limit);
            }
            operationTypes_.WriteTo(ref output, _repeated_operationTypes_codec);
            if (State != global::Tinkoff.Proto.InvestApi.V1.OperationState.Unspecified)
            {
                output.WriteRawTag(112);
                output.WriteEnum((int)State);
            }
            if (WithoutCommissions != false)
            {
                output.WriteRawTag(120);
                output.WriteBool(WithoutCommissions);
            }
            if (WithoutTrades != false)
            {
                output.WriteRawTag(128, 1);
                output.WriteBool(WithoutTrades);
            }
            if (WithoutOvernights != false)
            {
                output.WriteRawTag(136, 1);
                output.WriteBool(WithoutOvernights);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (AccountId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountId);
            }
            if (InstrumentId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentId);
            }
            if (from_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
            }
            if (to_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
            }
            if (Cursor.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Cursor);
            }
            if (Limit != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
            }
            size += operationTypes_.CalculateSize(_repeated_operationTypes_codec);
            if (State != global::Tinkoff.Proto.InvestApi.V1.OperationState.Unspecified)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)State);
            }
            if (WithoutCommissions != false)
            {
                size += 1 + 1;
            }
            if (WithoutTrades != false)
            {
                size += 2 + 1;
            }
            if (WithoutOvernights != false)
            {
                size += 2 + 1;
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(GetOperationsByCursorRequest other)
        {
            if (other == null)
            {
                return;
            }
            if (other.AccountId.Length != 0)
            {
                AccountId = other.AccountId;
            }
            if (other.InstrumentId.Length != 0)
            {
                InstrumentId = other.InstrumentId;
            }
            if (other.from_ != null)
            {
                if (from_ == null)
                {
                    From = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                From.MergeFrom(other.From);
            }
            if (other.to_ != null)
            {
                if (to_ == null)
                {
                    To = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                To.MergeFrom(other.To);
            }
            if (other.Cursor.Length != 0)
            {
                Cursor = other.Cursor;
            }
            if (other.Limit != 0)
            {
                Limit = other.Limit;
            }
            operationTypes_.Add(other.operationTypes_);
            if (other.State != global::Tinkoff.Proto.InvestApi.V1.OperationState.Unspecified)
            {
                State = other.State;
            }
            if (other.WithoutCommissions != false)
            {
                WithoutCommissions = other.WithoutCommissions;
            }
            if (other.WithoutTrades != false)
            {
                WithoutTrades = other.WithoutTrades;
            }
            if (other.WithoutOvernights != false)
            {
                WithoutOvernights = other.WithoutOvernights;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountId = input.ReadString();
            break;
          }
          case 18: {
            InstrumentId = input.ReadString();
            break;
          }
          case 50: {
            if (from_ == null) {
              From = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(From);
            break;
          }
          case 58: {
            if (to_ == null) {
              To = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(To);
            break;
          }
          case 90: {
            Cursor = input.ReadString();
            break;
          }
          case 96: {
            Limit = input.ReadInt32();
            break;
          }
          case 106:
          case 104: {
            operationTypes_.AddEntriesFrom(input, _repeated_operationTypes_codec);
            break;
          }
          case 112: {
            State = (global::Tinkoff.Proto.InvestApi.V1.OperationState) input.ReadEnum();
            break;
          }
          case 120: {
            WithoutCommissions = input.ReadBool();
            break;
          }
          case 128: {
            WithoutTrades = input.ReadBool();
            break;
          }
          case 136: {
            WithoutOvernights = input.ReadBool();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            AccountId = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            InstrumentId = input.ReadString();
                            break;
                        }
                    case 50:
                        {
                            if (from_ == null)
                            {
                                From = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                            }
                            input.ReadMessage(From);
                            break;
                        }
                    case 58:
                        {
                            if (to_ == null)
                            {
                                To = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                            }
                            input.ReadMessage(To);
                            break;
                        }
                    case 90:
                        {
                            Cursor = input.ReadString();
                            break;
                        }
                    case 96:
                        {
                            Limit = input.ReadInt32();
                            break;
                        }
                    case 106:
                    case 104:
                        {
                            operationTypes_.AddEntriesFrom(ref input, _repeated_operationTypes_codec);
                            break;
                        }
                    case 112:
                        {
                            State = (global::Tinkoff.Proto.InvestApi.V1.OperationState)input.ReadEnum();
                            break;
                        }
                    case 120:
                        {
                            WithoutCommissions = input.ReadBool();
                            break;
                        }
                    case 128:
                        {
                            WithoutTrades = input.ReadBool();
                            break;
                        }
                    case 136:
                        {
                            WithoutOvernights = input.ReadBool();
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Список операций по счёту с пагинацией.
    /// </summary>
    public sealed partial class GetOperationsByCursorResponse : pb::IMessage<GetOperationsByCursorResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<GetOperationsByCursorResponse> _parser = new pb::MessageParser<GetOperationsByCursorResponse>(() => new GetOperationsByCursorResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<GetOperationsByCursorResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[34]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetOperationsByCursorResponse()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetOperationsByCursorResponse(GetOperationsByCursorResponse other) : this()
        {
            hasNext_ = other.hasNext_;
            nextCursor_ = other.nextCursor_;
            items_ = other.items_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GetOperationsByCursorResponse Clone()
        {
            return new GetOperationsByCursorResponse(this);
        }

        /// <summary>Field number for the "has_next" field.</summary>
        public const int HasNextFieldNumber = 1;
        private bool hasNext_;
        /// <summary>
        ///Признак, есть ли следующий элемент.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasNext
        {
            get { return hasNext_; }
            set
            {
                hasNext_ = value;
            }
        }

        /// <summary>Field number for the "next_cursor" field.</summary>
        public const int NextCursorFieldNumber = 2;
        private string nextCursor_ = "";
        /// <summary>
        ///Следующий курсор.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string NextCursor
        {
            get { return nextCursor_; }
            set
            {
                nextCursor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "items" field.</summary>
        public const int ItemsFieldNumber = 6;
        private static readonly pb::FieldCodec<global::Tinkoff.Proto.InvestApi.V1.OperationItem> _repeated_items_codec
            = pb::FieldCodec.ForMessage(50, global::Tinkoff.Proto.InvestApi.V1.OperationItem.Parser);
        private readonly pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.OperationItem> items_ = new pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.OperationItem>();
        /// <summary>
        ///Список операций.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.OperationItem> Items
        {
            get { return items_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as GetOperationsByCursorResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(GetOperationsByCursorResponse other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (HasNext != other.HasNext) return false;
            if (NextCursor != other.NextCursor) return false;
            if (!items_.Equals(other.items_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (HasNext != false) hash ^= HasNext.GetHashCode();
            if (NextCursor.Length != 0) hash ^= NextCursor.GetHashCode();
            hash ^= items_.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (HasNext != false) {
        output.WriteRawTag(8);
        output.WriteBool(HasNext);
      }
      if (NextCursor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextCursor);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (HasNext != false)
            {
                output.WriteRawTag(8);
                output.WriteBool(HasNext);
            }
            if (NextCursor.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(NextCursor);
            }
            items_.WriteTo(ref output, _repeated_items_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (HasNext != false)
            {
                size += 1 + 1;
            }
            if (NextCursor.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(NextCursor);
            }
            size += items_.CalculateSize(_repeated_items_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(GetOperationsByCursorResponse other)
        {
            if (other == null)
            {
                return;
            }
            if (other.HasNext != false)
            {
                HasNext = other.HasNext;
            }
            if (other.NextCursor.Length != 0)
            {
                NextCursor = other.NextCursor;
            }
            items_.Add(other.items_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HasNext = input.ReadBool();
            break;
          }
          case 18: {
            NextCursor = input.ReadString();
            break;
          }
          case 50: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 8:
                        {
                            HasNext = input.ReadBool();
                            break;
                        }
                    case 18:
                        {
                            NextCursor = input.ReadString();
                            break;
                        }
                    case 50:
                        {
                            items_.AddEntriesFrom(ref input, _repeated_items_codec);
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Данные об операции.
    /// </summary>
    public sealed partial class OperationItem : pb::IMessage<OperationItem>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<OperationItem> _parser = new pb::MessageParser<OperationItem>(() => new OperationItem());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<OperationItem> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[35]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OperationItem()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OperationItem(OperationItem other) : this()
        {
            cursor_ = other.cursor_;
            brokerAccountId_ = other.brokerAccountId_;
            id_ = other.id_;
            parentOperationId_ = other.parentOperationId_;
            name_ = other.name_;
            date_ = other.date_ != null ? other.date_.Clone() : null;
            type_ = other.type_;
            description_ = other.description_;
            state_ = other.state_;
            instrumentUid_ = other.instrumentUid_;
            figi_ = other.figi_;
            instrumentType_ = other.instrumentType_;
            instrumentKind_ = other.instrumentKind_;
            payment_ = other.payment_ != null ? other.payment_.Clone() : null;
            price_ = other.price_ != null ? other.price_.Clone() : null;
            commission_ = other.commission_ != null ? other.commission_.Clone() : null;
            yield_ = other.yield_ != null ? other.yield_.Clone() : null;
            yieldRelative_ = other.yieldRelative_ != null ? other.yieldRelative_.Clone() : null;
            accruedInt_ = other.accruedInt_ != null ? other.accruedInt_.Clone() : null;
            quantity_ = other.quantity_;
            quantityRest_ = other.quantityRest_;
            quantityDone_ = other.quantityDone_;
            cancelDateTime_ = other.cancelDateTime_ != null ? other.cancelDateTime_.Clone() : null;
            cancelReason_ = other.cancelReason_;
            tradesInfo_ = other.tradesInfo_ != null ? other.tradesInfo_.Clone() : null;
            assetUid_ = other.assetUid_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OperationItem Clone()
        {
            return new OperationItem(this);
        }

        /// <summary>Field number for the "cursor" field.</summary>
        public const int CursorFieldNumber = 1;
        private string cursor_ = "";
        /// <summary>
        ///Курсор.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Cursor
        {
            get { return cursor_; }
            set
            {
                cursor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "broker_account_id" field.</summary>
        public const int BrokerAccountIdFieldNumber = 6;
        private string brokerAccountId_ = "";
        /// <summary>
        ///Номер счета клиента.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string BrokerAccountId
        {
            get { return brokerAccountId_; }
            set
            {
                brokerAccountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 16;
        private string id_ = "";
        /// <summary>
        ///Идентификатор операции, может меняться с течением времени.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Id
        {
            get { return id_; }
            set
            {
                id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "parent_operation_id" field.</summary>
        public const int ParentOperationIdFieldNumber = 17;
        private string parentOperationId_ = "";
        /// <summary>
        ///Идентификатор родительской операции, может измениться, если изменился id родительской операции.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ParentOperationId
        {
            get { return parentOperationId_; }
            set
            {
                parentOperationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 18;
        private string name_ = "";
        /// <summary>
        ///Название операции.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name
        {
            get { return name_; }
            set
            {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "date" field.</summary>
        public const int DateFieldNumber = 21;
        private global::Google.Protobuf.WellKnownTypes.Timestamp date_;
        /// <summary>
        ///Дата поручения.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp Date
        {
            get { return date_; }
            set
            {
                date_ = value;
            }
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 22;
        private global::Tinkoff.Proto.InvestApi.V1.OperationType type_ = global::Tinkoff.Proto.InvestApi.V1.OperationType.Unspecified;
        /// <summary>
        ///Тип операции.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.OperationType Type
        {
            get { return type_; }
            set
            {
                type_ = value;
            }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 23;
        private string description_ = "";
        /// <summary>
        ///Описание операции.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Description
        {
            get { return description_; }
            set
            {
                description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "state" field.</summary>
        public const int StateFieldNumber = 24;
        private global::Tinkoff.Proto.InvestApi.V1.OperationState state_ = global::Tinkoff.Proto.InvestApi.V1.OperationState.Unspecified;
        /// <summary>
        ///Статус поручения.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.OperationState State
        {
            get { return state_; }
            set
            {
                state_ = value;
            }
        }

        /// <summary>Field number for the "instrument_uid" field.</summary>
        public const int InstrumentUidFieldNumber = 31;
        private string instrumentUid_ = "";
        /// <summary>
        ///Уникальный идентификатор инструмента.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string InstrumentUid
        {
            get { return instrumentUid_; }
            set
            {
                instrumentUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "figi" field.</summary>
        public const int FigiFieldNumber = 32;
        private string figi_ = "";
        /// <summary>
        ///Figi.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Figi
        {
            get { return figi_; }
            set
            {
                figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "instrument_type" field.</summary>
        public const int InstrumentTypeFieldNumber = 33;
        private string instrumentType_ = "";
        /// <summary>
        ///Тип инструмента.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string InstrumentType
        {
            get { return instrumentType_; }
            set
            {
                instrumentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "instrument_kind" field.</summary>
        public const int InstrumentKindFieldNumber = 34;
        private global::Tinkoff.Proto.InvestApi.V1.InstrumentType instrumentKind_ = global::Tinkoff.Proto.InvestApi.V1.InstrumentType.Unspecified;
        /// <summary>
        ///Тип инструмента.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.InstrumentType InstrumentKind
        {
            get { return instrumentKind_; }
            set
            {
                instrumentKind_ = value;
            }
        }

        /// <summary>Field number for the "payment" field.</summary>
        public const int PaymentFieldNumber = 41;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue payment_;
        /// <summary>
        ///Сумма операции.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue Payment
        {
            get { return payment_; }
            set
            {
                payment_ = value;
            }
        }

        /// <summary>Field number for the "price" field.</summary>
        public const int PriceFieldNumber = 42;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue price_;
        /// <summary>
        ///Цена операции за 1 инструмент.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue Price
        {
            get { return price_; }
            set
            {
                price_ = value;
            }
        }

        /// <summary>Field number for the "commission" field.</summary>
        public const int CommissionFieldNumber = 43;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue commission_;
        /// <summary>
        ///Комиссия.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue Commission
        {
            get { return commission_; }
            set
            {
                commission_ = value;
            }
        }

        /// <summary>Field number for the "yield" field.</summary>
        public const int YieldFieldNumber = 44;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue yield_;
        /// <summary>
        ///Доходность.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue Yield
        {
            get { return yield_; }
            set
            {
                yield_ = value;
            }
        }

        /// <summary>Field number for the "yield_relative" field.</summary>
        public const int YieldRelativeFieldNumber = 45;
        private global::Tinkoff.Proto.InvestApi.V1.Quotation yieldRelative_;
        /// <summary>
        ///Относительная доходность.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.Quotation YieldRelative
        {
            get { return yieldRelative_; }
            set
            {
                yieldRelative_ = value;
            }
        }

        /// <summary>Field number for the "accrued_int" field.</summary>
        public const int AccruedIntFieldNumber = 46;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue accruedInt_;
        /// <summary>
        ///Накопленный купонный доход.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue AccruedInt
        {
            get { return accruedInt_; }
            set
            {
                accruedInt_ = value;
            }
        }

        /// <summary>Field number for the "quantity" field.</summary>
        public const int QuantityFieldNumber = 51;
        private long quantity_;
        /// <summary>
        ///Количество единиц инструмента.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long Quantity
        {
            get { return quantity_; }
            set
            {
                quantity_ = value;
            }
        }

        /// <summary>Field number for the "quantity_rest" field.</summary>
        public const int QuantityRestFieldNumber = 52;
        private long quantityRest_;
        /// <summary>
        ///Неисполненный остаток по сделке.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long QuantityRest
        {
            get { return quantityRest_; }
            set
            {
                quantityRest_ = value;
            }
        }

        /// <summary>Field number for the "quantity_done" field.</summary>
        public const int QuantityDoneFieldNumber = 53;
        private long quantityDone_;
        /// <summary>
        ///Исполненный остаток.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long QuantityDone
        {
            get { return quantityDone_; }
            set
            {
                quantityDone_ = value;
            }
        }

        /// <summary>Field number for the "cancel_date_time" field.</summary>
        public const int CancelDateTimeFieldNumber = 56;
        private global::Google.Protobuf.WellKnownTypes.Timestamp cancelDateTime_;
        /// <summary>
        ///Дата и время снятия заявки.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp CancelDateTime
        {
            get { return cancelDateTime_; }
            set
            {
                cancelDateTime_ = value;
            }
        }

        /// <summary>Field number for the "cancel_reason" field.</summary>
        public const int CancelReasonFieldNumber = 57;
        private string cancelReason_ = "";
        /// <summary>
        ///Причина отмены операции.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string CancelReason
        {
            get { return cancelReason_; }
            set
            {
                cancelReason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "trades_info" field.</summary>
        public const int TradesInfoFieldNumber = 61;
        private global::Tinkoff.Proto.InvestApi.V1.OperationItemTrades tradesInfo_;
        /// <summary>
        ///Массив сделок.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.OperationItemTrades TradesInfo
        {
            get { return tradesInfo_; }
            set
            {
                tradesInfo_ = value;
            }
        }

        /// <summary>Field number for the "asset_uid" field.</summary>
        public const int AssetUidFieldNumber = 64;
        private string assetUid_ = "";
        /// <summary>
        ///Идентификатор актива
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AssetUid
        {
            get { return assetUid_; }
            set
            {
                assetUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as OperationItem);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(OperationItem other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Cursor != other.Cursor) return false;
            if (BrokerAccountId != other.BrokerAccountId) return false;
            if (Id != other.Id) return false;
            if (ParentOperationId != other.ParentOperationId) return false;
            if (Name != other.Name) return false;
            if (!object.Equals(Date, other.Date)) return false;
            if (Type != other.Type) return false;
            if (Description != other.Description) return false;
            if (State != other.State) return false;
            if (InstrumentUid != other.InstrumentUid) return false;
            if (Figi != other.Figi) return false;
            if (InstrumentType != other.InstrumentType) return false;
            if (InstrumentKind != other.InstrumentKind) return false;
            if (!object.Equals(Payment, other.Payment)) return false;
            if (!object.Equals(Price, other.Price)) return false;
            if (!object.Equals(Commission, other.Commission)) return false;
            if (!object.Equals(Yield, other.Yield)) return false;
            if (!object.Equals(YieldRelative, other.YieldRelative)) return false;
            if (!object.Equals(AccruedInt, other.AccruedInt)) return false;
            if (Quantity != other.Quantity) return false;
            if (QuantityRest != other.QuantityRest) return false;
            if (QuantityDone != other.QuantityDone) return false;
            if (!object.Equals(CancelDateTime, other.CancelDateTime)) return false;
            if (CancelReason != other.CancelReason) return false;
            if (!object.Equals(TradesInfo, other.TradesInfo)) return false;
            if (AssetUid != other.AssetUid) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Cursor.Length != 0) hash ^= Cursor.GetHashCode();
            if (BrokerAccountId.Length != 0) hash ^= BrokerAccountId.GetHashCode();
            if (Id.Length != 0) hash ^= Id.GetHashCode();
            if (ParentOperationId.Length != 0) hash ^= ParentOperationId.GetHashCode();
            if (Name.Length != 0) hash ^= Name.GetHashCode();
            if (date_ != null) hash ^= Date.GetHashCode();
            if (Type != global::Tinkoff.Proto.InvestApi.V1.OperationType.Unspecified) hash ^= Type.GetHashCode();
            if (Description.Length != 0) hash ^= Description.GetHashCode();
            if (State != global::Tinkoff.Proto.InvestApi.V1.OperationState.Unspecified) hash ^= State.GetHashCode();
            if (InstrumentUid.Length != 0) hash ^= InstrumentUid.GetHashCode();
            if (Figi.Length != 0) hash ^= Figi.GetHashCode();
            if (InstrumentType.Length != 0) hash ^= InstrumentType.GetHashCode();
            if (InstrumentKind != global::Tinkoff.Proto.InvestApi.V1.InstrumentType.Unspecified) hash ^= InstrumentKind.GetHashCode();
            if (payment_ != null) hash ^= Payment.GetHashCode();
            if (price_ != null) hash ^= Price.GetHashCode();
            if (commission_ != null) hash ^= Commission.GetHashCode();
            if (yield_ != null) hash ^= Yield.GetHashCode();
            if (yieldRelative_ != null) hash ^= YieldRelative.GetHashCode();
            if (accruedInt_ != null) hash ^= AccruedInt.GetHashCode();
            if (Quantity != 0L) hash ^= Quantity.GetHashCode();
            if (QuantityRest != 0L) hash ^= QuantityRest.GetHashCode();
            if (QuantityDone != 0L) hash ^= QuantityDone.GetHashCode();
            if (cancelDateTime_ != null) hash ^= CancelDateTime.GetHashCode();
            if (CancelReason.Length != 0) hash ^= CancelReason.GetHashCode();
            if (tradesInfo_ != null) hash ^= TradesInfo.GetHashCode();
            if (AssetUid.Length != 0) hash ^= AssetUid.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (Cursor.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Cursor);
      }
      if (BrokerAccountId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(BrokerAccountId);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Id);
      }
      if (ParentOperationId.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(ParentOperationId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Name);
      }
      if (date_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(Date);
      }
      if (Type != global::Tinkoff.Proto.InvestApi.V1.OperationType.Unspecified) {
        output.WriteRawTag(176, 1);
        output.WriteEnum((int) Type);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(Description);
      }
      if (State != global::Tinkoff.Proto.InvestApi.V1.OperationState.Unspecified) {
        output.WriteRawTag(192, 1);
        output.WriteEnum((int) State);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(InstrumentUid);
      }
      if (Figi.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(Figi);
      }
      if (InstrumentType.Length != 0) {
        output.WriteRawTag(138, 2);
        output.WriteString(InstrumentType);
      }
      if (InstrumentKind != global::Tinkoff.Proto.InvestApi.V1.InstrumentType.Unspecified) {
        output.WriteRawTag(144, 2);
        output.WriteEnum((int) InstrumentKind);
      }
      if (payment_ != null) {
        output.WriteRawTag(202, 2);
        output.WriteMessage(Payment);
      }
      if (price_ != null) {
        output.WriteRawTag(210, 2);
        output.WriteMessage(Price);
      }
      if (commission_ != null) {
        output.WriteRawTag(218, 2);
        output.WriteMessage(Commission);
      }
      if (yield_ != null) {
        output.WriteRawTag(226, 2);
        output.WriteMessage(Yield);
      }
      if (yieldRelative_ != null) {
        output.WriteRawTag(234, 2);
        output.WriteMessage(YieldRelative);
      }
      if (accruedInt_ != null) {
        output.WriteRawTag(242, 2);
        output.WriteMessage(AccruedInt);
      }
      if (Quantity != 0L) {
        output.WriteRawTag(152, 3);
        output.WriteInt64(Quantity);
      }
      if (QuantityRest != 0L) {
        output.WriteRawTag(160, 3);
        output.WriteInt64(QuantityRest);
      }
      if (QuantityDone != 0L) {
        output.WriteRawTag(168, 3);
        output.WriteInt64(QuantityDone);
      }
      if (cancelDateTime_ != null) {
        output.WriteRawTag(194, 3);
        output.WriteMessage(CancelDateTime);
      }
      if (CancelReason.Length != 0) {
        output.WriteRawTag(202, 3);
        output.WriteString(CancelReason);
      }
      if (tradesInfo_ != null) {
        output.WriteRawTag(234, 3);
        output.WriteMessage(TradesInfo);
      }
      if (AssetUid.Length != 0) {
        output.WriteRawTag(130, 4);
        output.WriteString(AssetUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (Cursor.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Cursor);
            }
            if (BrokerAccountId.Length != 0)
            {
                output.WriteRawTag(50);
                output.WriteString(BrokerAccountId);
            }
            if (Id.Length != 0)
            {
                output.WriteRawTag(130, 1);
                output.WriteString(Id);
            }
            if (ParentOperationId.Length != 0)
            {
                output.WriteRawTag(138, 1);
                output.WriteString(ParentOperationId);
            }
            if (Name.Length != 0)
            {
                output.WriteRawTag(146, 1);
                output.WriteString(Name);
            }
            if (date_ != null)
            {
                output.WriteRawTag(170, 1);
                output.WriteMessage(Date);
            }
            if (Type != global::Tinkoff.Proto.InvestApi.V1.OperationType.Unspecified)
            {
                output.WriteRawTag(176, 1);
                output.WriteEnum((int)Type);
            }
            if (Description.Length != 0)
            {
                output.WriteRawTag(186, 1);
                output.WriteString(Description);
            }
            if (State != global::Tinkoff.Proto.InvestApi.V1.OperationState.Unspecified)
            {
                output.WriteRawTag(192, 1);
                output.WriteEnum((int)State);
            }
            if (InstrumentUid.Length != 0)
            {
                output.WriteRawTag(250, 1);
                output.WriteString(InstrumentUid);
            }
            if (Figi.Length != 0)
            {
                output.WriteRawTag(130, 2);
                output.WriteString(Figi);
            }
            if (InstrumentType.Length != 0)
            {
                output.WriteRawTag(138, 2);
                output.WriteString(InstrumentType);
            }
            if (InstrumentKind != global::Tinkoff.Proto.InvestApi.V1.InstrumentType.Unspecified)
            {
                output.WriteRawTag(144, 2);
                output.WriteEnum((int)InstrumentKind);
            }
            if (payment_ != null)
            {
                output.WriteRawTag(202, 2);
                output.WriteMessage(Payment);
            }
            if (price_ != null)
            {
                output.WriteRawTag(210, 2);
                output.WriteMessage(Price);
            }
            if (commission_ != null)
            {
                output.WriteRawTag(218, 2);
                output.WriteMessage(Commission);
            }
            if (yield_ != null)
            {
                output.WriteRawTag(226, 2);
                output.WriteMessage(Yield);
            }
            if (yieldRelative_ != null)
            {
                output.WriteRawTag(234, 2);
                output.WriteMessage(YieldRelative);
            }
            if (accruedInt_ != null)
            {
                output.WriteRawTag(242, 2);
                output.WriteMessage(AccruedInt);
            }
            if (Quantity != 0L)
            {
                output.WriteRawTag(152, 3);
                output.WriteInt64(Quantity);
            }
            if (QuantityRest != 0L)
            {
                output.WriteRawTag(160, 3);
                output.WriteInt64(QuantityRest);
            }
            if (QuantityDone != 0L)
            {
                output.WriteRawTag(168, 3);
                output.WriteInt64(QuantityDone);
            }
            if (cancelDateTime_ != null)
            {
                output.WriteRawTag(194, 3);
                output.WriteMessage(CancelDateTime);
            }
            if (CancelReason.Length != 0)
            {
                output.WriteRawTag(202, 3);
                output.WriteString(CancelReason);
            }
            if (tradesInfo_ != null)
            {
                output.WriteRawTag(234, 3);
                output.WriteMessage(TradesInfo);
            }
            if (AssetUid.Length != 0)
            {
                output.WriteRawTag(130, 4);
                output.WriteString(AssetUid);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (Cursor.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Cursor);
            }
            if (BrokerAccountId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(BrokerAccountId);
            }
            if (Id.Length != 0)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(Id);
            }
            if (ParentOperationId.Length != 0)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(ParentOperationId);
            }
            if (Name.Length != 0)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(Name);
            }
            if (date_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(Date);
            }
            if (Type != global::Tinkoff.Proto.InvestApi.V1.OperationType.Unspecified)
            {
                size += 2 + pb::CodedOutputStream.ComputeEnumSize((int)Type);
            }
            if (Description.Length != 0)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(Description);
            }
            if (State != global::Tinkoff.Proto.InvestApi.V1.OperationState.Unspecified)
            {
                size += 2 + pb::CodedOutputStream.ComputeEnumSize((int)State);
            }
            if (InstrumentUid.Length != 0)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(InstrumentUid);
            }
            if (Figi.Length != 0)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(Figi);
            }
            if (InstrumentType.Length != 0)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(InstrumentType);
            }
            if (InstrumentKind != global::Tinkoff.Proto.InvestApi.V1.InstrumentType.Unspecified)
            {
                size += 2 + pb::CodedOutputStream.ComputeEnumSize((int)InstrumentKind);
            }
            if (payment_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(Payment);
            }
            if (price_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(Price);
            }
            if (commission_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(Commission);
            }
            if (yield_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(Yield);
            }
            if (yieldRelative_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(YieldRelative);
            }
            if (accruedInt_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(AccruedInt);
            }
            if (Quantity != 0L)
            {
                size += 2 + pb::CodedOutputStream.ComputeInt64Size(Quantity);
            }
            if (QuantityRest != 0L)
            {
                size += 2 + pb::CodedOutputStream.ComputeInt64Size(QuantityRest);
            }
            if (QuantityDone != 0L)
            {
                size += 2 + pb::CodedOutputStream.ComputeInt64Size(QuantityDone);
            }
            if (cancelDateTime_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(CancelDateTime);
            }
            if (CancelReason.Length != 0)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(CancelReason);
            }
            if (tradesInfo_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(TradesInfo);
            }
            if (AssetUid.Length != 0)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(AssetUid);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(OperationItem other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Cursor.Length != 0)
            {
                Cursor = other.Cursor;
            }
            if (other.BrokerAccountId.Length != 0)
            {
                BrokerAccountId = other.BrokerAccountId;
            }
            if (other.Id.Length != 0)
            {
                Id = other.Id;
            }
            if (other.ParentOperationId.Length != 0)
            {
                ParentOperationId = other.ParentOperationId;
            }
            if (other.Name.Length != 0)
            {
                Name = other.Name;
            }
            if (other.date_ != null)
            {
                if (date_ == null)
                {
                    Date = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                Date.MergeFrom(other.Date);
            }
            if (other.Type != global::Tinkoff.Proto.InvestApi.V1.OperationType.Unspecified)
            {
                Type = other.Type;
            }
            if (other.Description.Length != 0)
            {
                Description = other.Description;
            }
            if (other.State != global::Tinkoff.Proto.InvestApi.V1.OperationState.Unspecified)
            {
                State = other.State;
            }
            if (other.InstrumentUid.Length != 0)
            {
                InstrumentUid = other.InstrumentUid;
            }
            if (other.Figi.Length != 0)
            {
                Figi = other.Figi;
            }
            if (other.InstrumentType.Length != 0)
            {
                InstrumentType = other.InstrumentType;
            }
            if (other.InstrumentKind != global::Tinkoff.Proto.InvestApi.V1.InstrumentType.Unspecified)
            {
                InstrumentKind = other.InstrumentKind;
            }
            if (other.payment_ != null)
            {
                if (payment_ == null)
                {
                    Payment = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                Payment.MergeFrom(other.Payment);
            }
            if (other.price_ != null)
            {
                if (price_ == null)
                {
                    Price = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                Price.MergeFrom(other.Price);
            }
            if (other.commission_ != null)
            {
                if (commission_ == null)
                {
                    Commission = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                Commission.MergeFrom(other.Commission);
            }
            if (other.yield_ != null)
            {
                if (yield_ == null)
                {
                    Yield = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                Yield.MergeFrom(other.Yield);
            }
            if (other.yieldRelative_ != null)
            {
                if (yieldRelative_ == null)
                {
                    YieldRelative = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                }
                YieldRelative.MergeFrom(other.YieldRelative);
            }
            if (other.accruedInt_ != null)
            {
                if (accruedInt_ == null)
                {
                    AccruedInt = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                AccruedInt.MergeFrom(other.AccruedInt);
            }
            if (other.Quantity != 0L)
            {
                Quantity = other.Quantity;
            }
            if (other.QuantityRest != 0L)
            {
                QuantityRest = other.QuantityRest;
            }
            if (other.QuantityDone != 0L)
            {
                QuantityDone = other.QuantityDone;
            }
            if (other.cancelDateTime_ != null)
            {
                if (cancelDateTime_ == null)
                {
                    CancelDateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                CancelDateTime.MergeFrom(other.CancelDateTime);
            }
            if (other.CancelReason.Length != 0)
            {
                CancelReason = other.CancelReason;
            }
            if (other.tradesInfo_ != null)
            {
                if (tradesInfo_ == null)
                {
                    TradesInfo = new global::Tinkoff.Proto.InvestApi.V1.OperationItemTrades();
                }
                TradesInfo.MergeFrom(other.TradesInfo);
            }
            if (other.AssetUid.Length != 0)
            {
                AssetUid = other.AssetUid;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Cursor = input.ReadString();
            break;
          }
          case 50: {
            BrokerAccountId = input.ReadString();
            break;
          }
          case 130: {
            Id = input.ReadString();
            break;
          }
          case 138: {
            ParentOperationId = input.ReadString();
            break;
          }
          case 146: {
            Name = input.ReadString();
            break;
          }
          case 170: {
            if (date_ == null) {
              Date = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Date);
            break;
          }
          case 176: {
            Type = (global::Tinkoff.Proto.InvestApi.V1.OperationType) input.ReadEnum();
            break;
          }
          case 186: {
            Description = input.ReadString();
            break;
          }
          case 192: {
            State = (global::Tinkoff.Proto.InvestApi.V1.OperationState) input.ReadEnum();
            break;
          }
          case 250: {
            InstrumentUid = input.ReadString();
            break;
          }
          case 258: {
            Figi = input.ReadString();
            break;
          }
          case 266: {
            InstrumentType = input.ReadString();
            break;
          }
          case 272: {
            InstrumentKind = (global::Tinkoff.Proto.InvestApi.V1.InstrumentType) input.ReadEnum();
            break;
          }
          case 330: {
            if (payment_ == null) {
              Payment = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(Payment);
            break;
          }
          case 338: {
            if (price_ == null) {
              Price = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(Price);
            break;
          }
          case 346: {
            if (commission_ == null) {
              Commission = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(Commission);
            break;
          }
          case 354: {
            if (yield_ == null) {
              Yield = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(Yield);
            break;
          }
          case 362: {
            if (yieldRelative_ == null) {
              YieldRelative = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
            }
            input.ReadMessage(YieldRelative);
            break;
          }
          case 370: {
            if (accruedInt_ == null) {
              AccruedInt = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(AccruedInt);
            break;
          }
          case 408: {
            Quantity = input.ReadInt64();
            break;
          }
          case 416: {
            QuantityRest = input.ReadInt64();
            break;
          }
          case 424: {
            QuantityDone = input.ReadInt64();
            break;
          }
          case 450: {
            if (cancelDateTime_ == null) {
              CancelDateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CancelDateTime);
            break;
          }
          case 458: {
            CancelReason = input.ReadString();
            break;
          }
          case 490: {
            if (tradesInfo_ == null) {
              TradesInfo = new global::Tinkoff.Proto.InvestApi.V1.OperationItemTrades();
            }
            input.ReadMessage(TradesInfo);
            break;
          }
          case 514: {
            AssetUid = input.ReadString();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            Cursor = input.ReadString();
                            break;
                        }
                    case 50:
                        {
                            BrokerAccountId = input.ReadString();
                            break;
                        }
                    case 130:
                        {
                            Id = input.ReadString();
                            break;
                        }
                    case 138:
                        {
                            ParentOperationId = input.ReadString();
                            break;
                        }
                    case 146:
                        {
                            Name = input.ReadString();
                            break;
                        }
                    case 170:
                        {
                            if (date_ == null)
                            {
                                Date = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                            }
                            input.ReadMessage(Date);
                            break;
                        }
                    case 176:
                        {
                            Type = (global::Tinkoff.Proto.InvestApi.V1.OperationType)input.ReadEnum();
                            break;
                        }
                    case 186:
                        {
                            Description = input.ReadString();
                            break;
                        }
                    case 192:
                        {
                            State = (global::Tinkoff.Proto.InvestApi.V1.OperationState)input.ReadEnum();
                            break;
                        }
                    case 250:
                        {
                            InstrumentUid = input.ReadString();
                            break;
                        }
                    case 258:
                        {
                            Figi = input.ReadString();
                            break;
                        }
                    case 266:
                        {
                            InstrumentType = input.ReadString();
                            break;
                        }
                    case 272:
                        {
                            InstrumentKind = (global::Tinkoff.Proto.InvestApi.V1.InstrumentType)input.ReadEnum();
                            break;
                        }
                    case 330:
                        {
                            if (payment_ == null)
                            {
                                Payment = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(Payment);
                            break;
                        }
                    case 338:
                        {
                            if (price_ == null)
                            {
                                Price = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(Price);
                            break;
                        }
                    case 346:
                        {
                            if (commission_ == null)
                            {
                                Commission = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(Commission);
                            break;
                        }
                    case 354:
                        {
                            if (yield_ == null)
                            {
                                Yield = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(Yield);
                            break;
                        }
                    case 362:
                        {
                            if (yieldRelative_ == null)
                            {
                                YieldRelative = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                            }
                            input.ReadMessage(YieldRelative);
                            break;
                        }
                    case 370:
                        {
                            if (accruedInt_ == null)
                            {
                                AccruedInt = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(AccruedInt);
                            break;
                        }
                    case 408:
                        {
                            Quantity = input.ReadInt64();
                            break;
                        }
                    case 416:
                        {
                            QuantityRest = input.ReadInt64();
                            break;
                        }
                    case 424:
                        {
                            QuantityDone = input.ReadInt64();
                            break;
                        }
                    case 450:
                        {
                            if (cancelDateTime_ == null)
                            {
                                CancelDateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                            }
                            input.ReadMessage(CancelDateTime);
                            break;
                        }
                    case 458:
                        {
                            CancelReason = input.ReadString();
                            break;
                        }
                    case 490:
                        {
                            if (tradesInfo_ == null)
                            {
                                TradesInfo = new global::Tinkoff.Proto.InvestApi.V1.OperationItemTrades();
                            }
                            input.ReadMessage(TradesInfo);
                            break;
                        }
                    case 514:
                        {
                            AssetUid = input.ReadString();
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Массив с информацией о сделках.
    /// </summary>
    public sealed partial class OperationItemTrades : pb::IMessage<OperationItemTrades>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<OperationItemTrades> _parser = new pb::MessageParser<OperationItemTrades>(() => new OperationItemTrades());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<OperationItemTrades> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[36]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OperationItemTrades()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OperationItemTrades(OperationItemTrades other) : this()
        {
            trades_ = other.trades_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OperationItemTrades Clone()
        {
            return new OperationItemTrades(this);
        }

        /// <summary>Field number for the "trades" field.</summary>
        public const int TradesFieldNumber = 6;
        private static readonly pb::FieldCodec<global::Tinkoff.Proto.InvestApi.V1.OperationItemTrade> _repeated_trades_codec
            = pb::FieldCodec.ForMessage(50, global::Tinkoff.Proto.InvestApi.V1.OperationItemTrade.Parser);
        private readonly pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.OperationItemTrade> trades_ = new pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.OperationItemTrade>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.OperationItemTrade> Trades
        {
            get { return trades_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as OperationItemTrades);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(OperationItemTrades other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!trades_.Equals(other.trades_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= trades_.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      trades_.WriteTo(output, _repeated_trades_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            trades_.WriteTo(ref output, _repeated_trades_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            size += trades_.CalculateSize(_repeated_trades_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(OperationItemTrades other)
        {
            if (other == null)
            {
                return;
            }
            trades_.Add(other.trades_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 50: {
            trades_.AddEntriesFrom(input, _repeated_trades_codec);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 50:
                        {
                            trades_.AddEntriesFrom(ref input, _repeated_trades_codec);
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Сделка по операции.
    /// </summary>
    public sealed partial class OperationItemTrade : pb::IMessage<OperationItemTrade>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<OperationItemTrade> _parser = new pb::MessageParser<OperationItemTrade>(() => new OperationItemTrade());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<OperationItemTrade> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[37]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OperationItemTrade()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OperationItemTrade(OperationItemTrade other) : this()
        {
            num_ = other.num_;
            date_ = other.date_ != null ? other.date_.Clone() : null;
            quantity_ = other.quantity_;
            price_ = other.price_ != null ? other.price_.Clone() : null;
            yield_ = other.yield_ != null ? other.yield_.Clone() : null;
            yieldRelative_ = other.yieldRelative_ != null ? other.yieldRelative_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OperationItemTrade Clone()
        {
            return new OperationItemTrade(this);
        }

        /// <summary>Field number for the "num" field.</summary>
        public const int NumFieldNumber = 1;
        private string num_ = "";
        /// <summary>
        ///Номер сделки
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Num
        {
            get { return num_; }
            set
            {
                num_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "date" field.</summary>
        public const int DateFieldNumber = 6;
        private global::Google.Protobuf.WellKnownTypes.Timestamp date_;
        /// <summary>
        ///Дата сделки
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp Date
        {
            get { return date_; }
            set
            {
                date_ = value;
            }
        }

        /// <summary>Field number for the "quantity" field.</summary>
        public const int QuantityFieldNumber = 11;
        private long quantity_;
        /// <summary>
        ///Количество в единицах.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long Quantity
        {
            get { return quantity_; }
            set
            {
                quantity_ = value;
            }
        }

        /// <summary>Field number for the "price" field.</summary>
        public const int PriceFieldNumber = 16;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue price_;
        /// <summary>
        ///Цена.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue Price
        {
            get { return price_; }
            set
            {
                price_ = value;
            }
        }

        /// <summary>Field number for the "yield" field.</summary>
        public const int YieldFieldNumber = 21;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue yield_;
        /// <summary>
        ///Доходность.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue Yield
        {
            get { return yield_; }
            set
            {
                yield_ = value;
            }
        }

        /// <summary>Field number for the "yield_relative" field.</summary>
        public const int YieldRelativeFieldNumber = 22;
        private global::Tinkoff.Proto.InvestApi.V1.Quotation yieldRelative_;
        /// <summary>
        ///Относительная доходность.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.Quotation YieldRelative
        {
            get { return yieldRelative_; }
            set
            {
                yieldRelative_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as OperationItemTrade);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(OperationItemTrade other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Num != other.Num) return false;
            if (!object.Equals(Date, other.Date)) return false;
            if (Quantity != other.Quantity) return false;
            if (!object.Equals(Price, other.Price)) return false;
            if (!object.Equals(Yield, other.Yield)) return false;
            if (!object.Equals(YieldRelative, other.YieldRelative)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Num.Length != 0) hash ^= Num.GetHashCode();
            if (date_ != null) hash ^= Date.GetHashCode();
            if (Quantity != 0L) hash ^= Quantity.GetHashCode();
            if (price_ != null) hash ^= Price.GetHashCode();
            if (yield_ != null) hash ^= Yield.GetHashCode();
            if (yieldRelative_ != null) hash ^= YieldRelative.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (Num.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Num);
      }
      if (date_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Date);
      }
      if (Quantity != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(Quantity);
      }
      if (price_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Price);
      }
      if (yield_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(Yield);
      }
      if (yieldRelative_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(YieldRelative);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (Num.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Num);
            }
            if (date_ != null)
            {
                output.WriteRawTag(50);
                output.WriteMessage(Date);
            }
            if (Quantity != 0L)
            {
                output.WriteRawTag(88);
                output.WriteInt64(Quantity);
            }
            if (price_ != null)
            {
                output.WriteRawTag(130, 1);
                output.WriteMessage(Price);
            }
            if (yield_ != null)
            {
                output.WriteRawTag(170, 1);
                output.WriteMessage(Yield);
            }
            if (yieldRelative_ != null)
            {
                output.WriteRawTag(178, 1);
                output.WriteMessage(YieldRelative);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (Num.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Num);
            }
            if (date_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Date);
            }
            if (Quantity != 0L)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(Quantity);
            }
            if (price_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(Price);
            }
            if (yield_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(Yield);
            }
            if (yieldRelative_ != null)
            {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(YieldRelative);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(OperationItemTrade other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Num.Length != 0)
            {
                Num = other.Num;
            }
            if (other.date_ != null)
            {
                if (date_ == null)
                {
                    Date = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                Date.MergeFrom(other.Date);
            }
            if (other.Quantity != 0L)
            {
                Quantity = other.Quantity;
            }
            if (other.price_ != null)
            {
                if (price_ == null)
                {
                    Price = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                Price.MergeFrom(other.Price);
            }
            if (other.yield_ != null)
            {
                if (yield_ == null)
                {
                    Yield = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                Yield.MergeFrom(other.Yield);
            }
            if (other.yieldRelative_ != null)
            {
                if (yieldRelative_ == null)
                {
                    YieldRelative = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                }
                YieldRelative.MergeFrom(other.YieldRelative);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Num = input.ReadString();
            break;
          }
          case 50: {
            if (date_ == null) {
              Date = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Date);
            break;
          }
          case 88: {
            Quantity = input.ReadInt64();
            break;
          }
          case 130: {
            if (price_ == null) {
              Price = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(Price);
            break;
          }
          case 170: {
            if (yield_ == null) {
              Yield = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(Yield);
            break;
          }
          case 178: {
            if (yieldRelative_ == null) {
              YieldRelative = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
            }
            input.ReadMessage(YieldRelative);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            Num = input.ReadString();
                            break;
                        }
                    case 50:
                        {
                            if (date_ == null)
                            {
                                Date = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                            }
                            input.ReadMessage(Date);
                            break;
                        }
                    case 88:
                        {
                            Quantity = input.ReadInt64();
                            break;
                        }
                    case 130:
                        {
                            if (price_ == null)
                            {
                                Price = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(Price);
                            break;
                        }
                    case 170:
                        {
                            if (yield_ == null)
                            {
                                Yield = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(Yield);
                            break;
                        }
                    case 178:
                        {
                            if (yieldRelative_ == null)
                            {
                                YieldRelative = new global::Tinkoff.Proto.InvestApi.V1.Quotation();
                            }
                            input.ReadMessage(YieldRelative);
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Запрос установки stream-соединения позиций.
    /// </summary>
    public sealed partial class PositionsStreamRequest : pb::IMessage<PositionsStreamRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<PositionsStreamRequest> _parser = new pb::MessageParser<PositionsStreamRequest>(() => new PositionsStreamRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PositionsStreamRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[38]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsStreamRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsStreamRequest(PositionsStreamRequest other) : this()
        {
            accounts_ = other.accounts_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsStreamRequest Clone()
        {
            return new PositionsStreamRequest(this);
        }

        /// <summary>Field number for the "accounts" field.</summary>
        public const int AccountsFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_accounts_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> accounts_ = new pbc::RepeatedField<string>();
        /// <summary>
        ///Массив идентификаторов счётов пользователя
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> Accounts
        {
            get { return accounts_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as PositionsStreamRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PositionsStreamRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!accounts_.Equals(other.accounts_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= accounts_.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      accounts_.WriteTo(output, _repeated_accounts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            accounts_.WriteTo(ref output, _repeated_accounts_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            size += accounts_.CalculateSize(_repeated_accounts_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PositionsStreamRequest other)
        {
            if (other == null)
            {
                return;
            }
            accounts_.Add(other.accounts_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            accounts_.AddEntriesFrom(input, _repeated_accounts_codec);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            accounts_.AddEntriesFrom(ref input, _repeated_accounts_codec);
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Информация по изменению позиций портфеля.
    /// </summary>
    public sealed partial class PositionsStreamResponse : pb::IMessage<PositionsStreamResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<PositionsStreamResponse> _parser = new pb::MessageParser<PositionsStreamResponse>(() => new PositionsStreamResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PositionsStreamResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[39]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsStreamResponse()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsStreamResponse(PositionsStreamResponse other) : this()
        {
            switch (other.PayloadCase)
            {
                case PayloadOneofCase.Subscriptions:
                    Subscriptions = other.Subscriptions.Clone();
                    break;
                case PayloadOneofCase.Position:
                    Position = other.Position.Clone();
                    break;
                case PayloadOneofCase.Ping:
                    Ping = other.Ping.Clone();
                    break;
            }

            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsStreamResponse Clone()
        {
            return new PositionsStreamResponse(this);
        }

        /// <summary>Field number for the "subscriptions" field.</summary>
        public const int SubscriptionsFieldNumber = 1;
        /// <summary>
        ///Объект результата подписки.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.PositionsSubscriptionResult Subscriptions
        {
            get { return payloadCase_ == PayloadOneofCase.Subscriptions ? (global::Tinkoff.Proto.InvestApi.V1.PositionsSubscriptionResult)payload_ : null; }
            set
            {
                payload_ = value;
                payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Subscriptions;
            }
        }

        /// <summary>Field number for the "position" field.</summary>
        public const int PositionFieldNumber = 2;
        /// <summary>
        ///Объект стриминга позиций.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.PositionData Position
        {
            get { return payloadCase_ == PayloadOneofCase.Position ? (global::Tinkoff.Proto.InvestApi.V1.PositionData)payload_ : null; }
            set
            {
                payload_ = value;
                payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Position;
            }
        }

        /// <summary>Field number for the "ping" field.</summary>
        public const int PingFieldNumber = 3;
        /// <summary>
        ///Проверка активности стрима.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.Ping Ping
        {
            get { return payloadCase_ == PayloadOneofCase.Ping ? (global::Tinkoff.Proto.InvestApi.V1.Ping)payload_ : null; }
            set
            {
                payload_ = value;
                payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Ping;
            }
        }

        private object payload_;
        /// <summary>Enum of possible cases for the "payload" oneof.</summary>
        public enum PayloadOneofCase
        {
            None = 0,
            Subscriptions = 1,
            Position = 2,
            Ping = 3,
        }
        private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PayloadOneofCase PayloadCase
        {
            get { return payloadCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPayload()
        {
            payloadCase_ = PayloadOneofCase.None;
            payload_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as PositionsStreamResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PositionsStreamResponse other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Subscriptions, other.Subscriptions)) return false;
            if (!object.Equals(Position, other.Position)) return false;
            if (!object.Equals(Ping, other.Ping)) return false;
            if (PayloadCase != other.PayloadCase) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (payloadCase_ == PayloadOneofCase.Subscriptions) hash ^= Subscriptions.GetHashCode();
            if (payloadCase_ == PayloadOneofCase.Position) hash ^= Position.GetHashCode();
            if (payloadCase_ == PayloadOneofCase.Ping) hash ^= Ping.GetHashCode();
            hash ^= (int)payloadCase_;
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (payloadCase_ == PayloadOneofCase.Subscriptions) {
        output.WriteRawTag(10);
        output.WriteMessage(Subscriptions);
      }
      if (payloadCase_ == PayloadOneofCase.Position) {
        output.WriteRawTag(18);
        output.WriteMessage(Position);
      }
      if (payloadCase_ == PayloadOneofCase.Ping) {
        output.WriteRawTag(26);
        output.WriteMessage(Ping);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (payloadCase_ == PayloadOneofCase.Subscriptions)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Subscriptions);
            }
            if (payloadCase_ == PayloadOneofCase.Position)
            {
                output.WriteRawTag(18);
                output.WriteMessage(Position);
            }
            if (payloadCase_ == PayloadOneofCase.Ping)
            {
                output.WriteRawTag(26);
                output.WriteMessage(Ping);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (payloadCase_ == PayloadOneofCase.Subscriptions)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Subscriptions);
            }
            if (payloadCase_ == PayloadOneofCase.Position)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
            }
            if (payloadCase_ == PayloadOneofCase.Ping)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ping);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PositionsStreamResponse other)
        {
            if (other == null)
            {
                return;
            }
            switch (other.PayloadCase)
            {
                case PayloadOneofCase.Subscriptions:
                    if (Subscriptions == null)
                    {
                        Subscriptions = new global::Tinkoff.Proto.InvestApi.V1.PositionsSubscriptionResult();
                    }
                    Subscriptions.MergeFrom(other.Subscriptions);
                    break;
                case PayloadOneofCase.Position:
                    if (Position == null)
                    {
                        Position = new global::Tinkoff.Proto.InvestApi.V1.PositionData();
                    }
                    Position.MergeFrom(other.Position);
                    break;
                case PayloadOneofCase.Ping:
                    if (Ping == null)
                    {
                        Ping = new global::Tinkoff.Proto.InvestApi.V1.Ping();
                    }
                    Ping.MergeFrom(other.Ping);
                    break;
            }

            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Tinkoff.Proto.InvestApi.V1.PositionsSubscriptionResult subBuilder = new global::Tinkoff.Proto.InvestApi.V1.PositionsSubscriptionResult();
            if (payloadCase_ == PayloadOneofCase.Subscriptions) {
              subBuilder.MergeFrom(Subscriptions);
            }
            input.ReadMessage(subBuilder);
            Subscriptions = subBuilder;
            break;
          }
          case 18: {
            global::Tinkoff.Proto.InvestApi.V1.PositionData subBuilder = new global::Tinkoff.Proto.InvestApi.V1.PositionData();
            if (payloadCase_ == PayloadOneofCase.Position) {
              subBuilder.MergeFrom(Position);
            }
            input.ReadMessage(subBuilder);
            Position = subBuilder;
            break;
          }
          case 26: {
            global::Tinkoff.Proto.InvestApi.V1.Ping subBuilder = new global::Tinkoff.Proto.InvestApi.V1.Ping();
            if (payloadCase_ == PayloadOneofCase.Ping) {
              subBuilder.MergeFrom(Ping);
            }
            input.ReadMessage(subBuilder);
            Ping = subBuilder;
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            global::Tinkoff.Proto.InvestApi.V1.PositionsSubscriptionResult subBuilder = new global::Tinkoff.Proto.InvestApi.V1.PositionsSubscriptionResult();
                            if (payloadCase_ == PayloadOneofCase.Subscriptions)
                            {
                                subBuilder.MergeFrom(Subscriptions);
                            }
                            input.ReadMessage(subBuilder);
                            Subscriptions = subBuilder;
                            break;
                        }
                    case 18:
                        {
                            global::Tinkoff.Proto.InvestApi.V1.PositionData subBuilder = new global::Tinkoff.Proto.InvestApi.V1.PositionData();
                            if (payloadCase_ == PayloadOneofCase.Position)
                            {
                                subBuilder.MergeFrom(Position);
                            }
                            input.ReadMessage(subBuilder);
                            Position = subBuilder;
                            break;
                        }
                    case 26:
                        {
                            global::Tinkoff.Proto.InvestApi.V1.Ping subBuilder = new global::Tinkoff.Proto.InvestApi.V1.Ping();
                            if (payloadCase_ == PayloadOneofCase.Ping)
                            {
                                subBuilder.MergeFrom(Ping);
                            }
                            input.ReadMessage(subBuilder);
                            Ping = subBuilder;
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Объект результата подписки.
    /// </summary>
    public sealed partial class PositionsSubscriptionResult : pb::IMessage<PositionsSubscriptionResult>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<PositionsSubscriptionResult> _parser = new pb::MessageParser<PositionsSubscriptionResult>(() => new PositionsSubscriptionResult());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PositionsSubscriptionResult> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[40]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsSubscriptionResult()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsSubscriptionResult(PositionsSubscriptionResult other) : this()
        {
            accounts_ = other.accounts_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsSubscriptionResult Clone()
        {
            return new PositionsSubscriptionResult(this);
        }

        /// <summary>Field number for the "accounts" field.</summary>
        public const int AccountsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Tinkoff.Proto.InvestApi.V1.PositionsSubscriptionStatus> _repeated_accounts_codec
            = pb::FieldCodec.ForMessage(10, global::Tinkoff.Proto.InvestApi.V1.PositionsSubscriptionStatus.Parser);
        private readonly pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PositionsSubscriptionStatus> accounts_ = new pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PositionsSubscriptionStatus>();
        /// <summary>
        ///Массив счетов клиента.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PositionsSubscriptionStatus> Accounts
        {
            get { return accounts_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as PositionsSubscriptionResult);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PositionsSubscriptionResult other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!accounts_.Equals(other.accounts_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= accounts_.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      accounts_.WriteTo(output, _repeated_accounts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            accounts_.WriteTo(ref output, _repeated_accounts_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            size += accounts_.CalculateSize(_repeated_accounts_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PositionsSubscriptionResult other)
        {
            if (other == null)
            {
                return;
            }
            accounts_.Add(other.accounts_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            accounts_.AddEntriesFrom(input, _repeated_accounts_codec);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            accounts_.AddEntriesFrom(ref input, _repeated_accounts_codec);
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Счет клиента.
    /// </summary>
    public sealed partial class PositionsSubscriptionStatus : pb::IMessage<PositionsSubscriptionStatus>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<PositionsSubscriptionStatus> _parser = new pb::MessageParser<PositionsSubscriptionStatus>(() => new PositionsSubscriptionStatus());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PositionsSubscriptionStatus> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[41]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsSubscriptionStatus()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsSubscriptionStatus(PositionsSubscriptionStatus other) : this()
        {
            accountId_ = other.accountId_;
            subscriptionStatus_ = other.subscriptionStatus_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsSubscriptionStatus Clone()
        {
            return new PositionsSubscriptionStatus(this);
        }

        /// <summary>Field number for the "account_id" field.</summary>
        public const int AccountIdFieldNumber = 1;
        private string accountId_ = "";
        /// <summary>
        ///Идентификатор счёта
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AccountId
        {
            get { return accountId_; }
            set
            {
                accountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "subscription_status" field.</summary>
        public const int SubscriptionStatusFieldNumber = 6;
        private global::Tinkoff.Proto.InvestApi.V1.PositionsAccountSubscriptionStatus subscriptionStatus_ = global::Tinkoff.Proto.InvestApi.V1.PositionsAccountSubscriptionStatus.PositionsSubscriptionStatusUnspecified;
        /// <summary>
        ///Результат подписки.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.PositionsAccountSubscriptionStatus SubscriptionStatus
        {
            get { return subscriptionStatus_; }
            set
            {
                subscriptionStatus_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as PositionsSubscriptionStatus);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PositionsSubscriptionStatus other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (AccountId != other.AccountId) return false;
            if (SubscriptionStatus != other.SubscriptionStatus) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (AccountId.Length != 0) hash ^= AccountId.GetHashCode();
            if (SubscriptionStatus != global::Tinkoff.Proto.InvestApi.V1.PositionsAccountSubscriptionStatus.PositionsSubscriptionStatusUnspecified) hash ^= SubscriptionStatus.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (AccountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountId);
      }
      if (SubscriptionStatus != global::Tinkoff.Proto.InvestApi.V1.PositionsAccountSubscriptionStatus.PositionsSubscriptionStatusUnspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) SubscriptionStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (AccountId.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(AccountId);
            }
            if (SubscriptionStatus != global::Tinkoff.Proto.InvestApi.V1.PositionsAccountSubscriptionStatus.PositionsSubscriptionStatusUnspecified)
            {
                output.WriteRawTag(48);
                output.WriteEnum((int)SubscriptionStatus);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (AccountId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountId);
            }
            if (SubscriptionStatus != global::Tinkoff.Proto.InvestApi.V1.PositionsAccountSubscriptionStatus.PositionsSubscriptionStatusUnspecified)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)SubscriptionStatus);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PositionsSubscriptionStatus other)
        {
            if (other == null)
            {
                return;
            }
            if (other.AccountId.Length != 0)
            {
                AccountId = other.AccountId;
            }
            if (other.SubscriptionStatus != global::Tinkoff.Proto.InvestApi.V1.PositionsAccountSubscriptionStatus.PositionsSubscriptionStatusUnspecified)
            {
                SubscriptionStatus = other.SubscriptionStatus;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountId = input.ReadString();
            break;
          }
          case 48: {
            SubscriptionStatus = (global::Tinkoff.Proto.InvestApi.V1.PositionsAccountSubscriptionStatus) input.ReadEnum();
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            AccountId = input.ReadString();
                            break;
                        }
                    case 48:
                        {
                            SubscriptionStatus = (global::Tinkoff.Proto.InvestApi.V1.PositionsAccountSubscriptionStatus)input.ReadEnum();
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Данные о позиции портфеля.
    /// </summary>
    public sealed partial class PositionData : pb::IMessage<PositionData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<PositionData> _parser = new pb::MessageParser<PositionData>(() => new PositionData());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PositionData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[42]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionData()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionData(PositionData other) : this()
        {
            accountId_ = other.accountId_;
            money_ = other.money_.Clone();
            securities_ = other.securities_.Clone();
            futures_ = other.futures_.Clone();
            options_ = other.options_.Clone();
            date_ = other.date_ != null ? other.date_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionData Clone()
        {
            return new PositionData(this);
        }

        /// <summary>Field number for the "account_id" field.</summary>
        public const int AccountIdFieldNumber = 1;
        private string accountId_ = "";
        /// <summary>
        ///Идентификатор счёта.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AccountId
        {
            get { return accountId_; }
            set
            {
                accountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "money" field.</summary>
        public const int MoneyFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Tinkoff.Proto.InvestApi.V1.PositionsMoney> _repeated_money_codec
            = pb::FieldCodec.ForMessage(18, global::Tinkoff.Proto.InvestApi.V1.PositionsMoney.Parser);
        private readonly pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PositionsMoney> money_ = new pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PositionsMoney>();
        /// <summary>
        ///Массив валютных позиций портфеля.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PositionsMoney> Money
        {
            get { return money_; }
        }

        /// <summary>Field number for the "securities" field.</summary>
        public const int SecuritiesFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Tinkoff.Proto.InvestApi.V1.PositionsSecurities> _repeated_securities_codec
            = pb::FieldCodec.ForMessage(26, global::Tinkoff.Proto.InvestApi.V1.PositionsSecurities.Parser);
        private readonly pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PositionsSecurities> securities_ = new pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PositionsSecurities>();
        /// <summary>
        ///Список ценно-бумажных позиций портфеля.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PositionsSecurities> Securities
        {
            get { return securities_; }
        }

        /// <summary>Field number for the "futures" field.</summary>
        public const int FuturesFieldNumber = 4;
        private static readonly pb::FieldCodec<global::Tinkoff.Proto.InvestApi.V1.PositionsFutures> _repeated_futures_codec
            = pb::FieldCodec.ForMessage(34, global::Tinkoff.Proto.InvestApi.V1.PositionsFutures.Parser);
        private readonly pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PositionsFutures> futures_ = new pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PositionsFutures>();
        /// <summary>
        ///Список фьючерсов портфеля.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PositionsFutures> Futures
        {
            get { return futures_; }
        }

        /// <summary>Field number for the "options" field.</summary>
        public const int OptionsFieldNumber = 5;
        private static readonly pb::FieldCodec<global::Tinkoff.Proto.InvestApi.V1.PositionsOptions> _repeated_options_codec
            = pb::FieldCodec.ForMessage(42, global::Tinkoff.Proto.InvestApi.V1.PositionsOptions.Parser);
        private readonly pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PositionsOptions> options_ = new pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PositionsOptions>();
        /// <summary>
        ///Список опционов портфеля.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Tinkoff.Proto.InvestApi.V1.PositionsOptions> Options
        {
            get { return options_; }
        }

        /// <summary>Field number for the "date" field.</summary>
        public const int DateFieldNumber = 6;
        private global::Google.Protobuf.WellKnownTypes.Timestamp date_;
        /// <summary>
        ///Дата и время операции в формате UTC.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp Date
        {
            get { return date_; }
            set
            {
                date_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as PositionData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PositionData other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (AccountId != other.AccountId) return false;
            if (!money_.Equals(other.money_)) return false;
            if (!securities_.Equals(other.securities_)) return false;
            if (!futures_.Equals(other.futures_)) return false;
            if (!options_.Equals(other.options_)) return false;
            if (!object.Equals(Date, other.Date)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (AccountId.Length != 0) hash ^= AccountId.GetHashCode();
            hash ^= money_.GetHashCode();
            hash ^= securities_.GetHashCode();
            hash ^= futures_.GetHashCode();
            hash ^= options_.GetHashCode();
            if (date_ != null) hash ^= Date.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (AccountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountId);
      }
      money_.WriteTo(output, _repeated_money_codec);
      securities_.WriteTo(output, _repeated_securities_codec);
      futures_.WriteTo(output, _repeated_futures_codec);
      options_.WriteTo(output, _repeated_options_codec);
      if (date_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Date);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (AccountId.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(AccountId);
            }
            money_.WriteTo(ref output, _repeated_money_codec);
            securities_.WriteTo(ref output, _repeated_securities_codec);
            futures_.WriteTo(ref output, _repeated_futures_codec);
            options_.WriteTo(ref output, _repeated_options_codec);
            if (date_ != null)
            {
                output.WriteRawTag(50);
                output.WriteMessage(Date);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (AccountId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountId);
            }
            size += money_.CalculateSize(_repeated_money_codec);
            size += securities_.CalculateSize(_repeated_securities_codec);
            size += futures_.CalculateSize(_repeated_futures_codec);
            size += options_.CalculateSize(_repeated_options_codec);
            if (date_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Date);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PositionData other)
        {
            if (other == null)
            {
                return;
            }
            if (other.AccountId.Length != 0)
            {
                AccountId = other.AccountId;
            }
            money_.Add(other.money_);
            securities_.Add(other.securities_);
            futures_.Add(other.futures_);
            options_.Add(other.options_);
            if (other.date_ != null)
            {
                if (date_ == null)
                {
                    Date = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                Date.MergeFrom(other.Date);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountId = input.ReadString();
            break;
          }
          case 18: {
            money_.AddEntriesFrom(input, _repeated_money_codec);
            break;
          }
          case 26: {
            securities_.AddEntriesFrom(input, _repeated_securities_codec);
            break;
          }
          case 34: {
            futures_.AddEntriesFrom(input, _repeated_futures_codec);
            break;
          }
          case 42: {
            options_.AddEntriesFrom(input, _repeated_options_codec);
            break;
          }
          case 50: {
            if (date_ == null) {
              Date = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Date);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            AccountId = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            money_.AddEntriesFrom(ref input, _repeated_money_codec);
                            break;
                        }
                    case 26:
                        {
                            securities_.AddEntriesFrom(ref input, _repeated_securities_codec);
                            break;
                        }
                    case 34:
                        {
                            futures_.AddEntriesFrom(ref input, _repeated_futures_codec);
                            break;
                        }
                    case 42:
                        {
                            options_.AddEntriesFrom(ref input, _repeated_options_codec);
                            break;
                        }
                    case 50:
                        {
                            if (date_ == null)
                            {
                                Date = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                            }
                            input.ReadMessage(Date);
                            break;
                        }
                }
            }
        }
#endif

    }

    /// <summary>
    ///Валютная позиция портфеля.
    /// </summary>
    public sealed partial class PositionsMoney : pb::IMessage<PositionsMoney>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
#endif
    {
        private static readonly pb::MessageParser<PositionsMoney> _parser = new pb::MessageParser<PositionsMoney>(() => new PositionsMoney());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PositionsMoney> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Tinkoff.Proto.InvestApi.V1.OperationsReflection.Descriptor.MessageTypes[43]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsMoney()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsMoney(PositionsMoney other) : this()
        {
            availableValue_ = other.availableValue_ != null ? other.availableValue_.Clone() : null;
            blockedValue_ = other.blockedValue_ != null ? other.blockedValue_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PositionsMoney Clone()
        {
            return new PositionsMoney(this);
        }

        /// <summary>Field number for the "available_value" field.</summary>
        public const int AvailableValueFieldNumber = 1;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue availableValue_;
        /// <summary>
        ///Доступное количество валютный позиций.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue AvailableValue
        {
            get { return availableValue_; }
            set
            {
                availableValue_ = value;
            }
        }

        /// <summary>Field number for the "blocked_value" field.</summary>
        public const int BlockedValueFieldNumber = 2;
        private global::Tinkoff.Proto.InvestApi.V1.MoneyValue blockedValue_;
        /// <summary>
        ///Заблокированное количество валютный позиций.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.Proto.InvestApi.V1.MoneyValue BlockedValue
        {
            get { return blockedValue_; }
            set
            {
                blockedValue_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other)
        {
            return Equals(other as PositionsMoney);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PositionsMoney other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(AvailableValue, other.AvailableValue)) return false;
            if (!object.Equals(BlockedValue, other.BlockedValue)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode()
        {
            int hash = 1;
            if (availableValue_ != null) hash ^= AvailableValue.GetHashCode();
            if (blockedValue_ != null) hash ^= BlockedValue.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
#else
      if (availableValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AvailableValue);
      }
      if (blockedValue_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BlockedValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
            if (availableValue_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(AvailableValue);
            }
            if (blockedValue_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(BlockedValue);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(ref output);
            }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize()
        {
            int size = 0;
            if (availableValue_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(AvailableValue);
            }
            if (blockedValue_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(BlockedValue);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PositionsMoney other)
        {
            if (other == null)
            {
                return;
            }
            if (other.availableValue_ != null)
            {
                if (availableValue_ == null)
                {
                    AvailableValue = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                AvailableValue.MergeFrom(other.AvailableValue);
            }
            if (other.blockedValue_ != null)
            {
                if (blockedValue_ == null)
                {
                    BlockedValue = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                }
                BlockedValue.MergeFrom(other.BlockedValue);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (availableValue_ == null) {
              AvailableValue = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(AvailableValue);
            break;
          }
          case 18: {
            if (blockedValue_ == null) {
              BlockedValue = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
            }
            input.ReadMessage(BlockedValue);
            break;
          }
        }
      }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    case 10:
                        {
                            if (availableValue_ == null)
                            {
                                AvailableValue = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(AvailableValue);
                            break;
                        }
                    case 18:
                        {
                            if (blockedValue_ == null)
                            {
                                BlockedValue = new global::Tinkoff.Proto.InvestApi.V1.MoneyValue();
                            }
                            input.ReadMessage(BlockedValue);
                            break;
                        }
                }
            }
        }
#endif

    }

    #endregion

}

#endregion Designer generated code
